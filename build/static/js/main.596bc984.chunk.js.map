{"version":3,"sources":["constants/routes.js","services/auth.js","contexts/userContext.js","components/header.js","components/signIn.js","components/admin/home.js","services/users.js","components/admin/employees.js","services/roles.js","components/admin/employee.js","components/admin/newEmployee.js","services/presets.js","services/shifts.js","services/requests.js","services/store.js","components/admin/schedules.js","components/admin/requests.js","components/admin/store.js","components/user/home.js","components/user/profile.js","components/user/editAvailability.js","components/user/availability.js","components/user/requests.js","components/user/schedules.js","components/adminSignIn.js","helpers/protectedRoute.js","helpers/userRoute.js","App.js","index.js"],"names":["SIGN_IN","ADMIN_SIGN_IN","ADMIN_HOME","ADMIN_EMPLOYEES","ADMIN_NEW_EMPLOYEE","ADMIN_SCHEDULES","ADMIN_REQUESTS","ADMIN_STORE","USER_HOME","USER_SCHEDULES","USER_REQUESTS","USER_AVAILABILITY","USER_PROFILE","signIn","credentials","a","axios","post","res","data","error","response","createUser","body","tokenConfig","verifyUser","get","isAuthenticated","token","sessionStorage","getItem","headers","UserContext","createContext","UserContextProvider","children","useState","verifiedUser","setVerifiedUser","Provider","value","Header","useContext","history","useHistory","className","first_name","style","marginTop","onClick","removeItem","is_admin","push","ROUTES","SignIn","email","setEmail","password","setPassword","setError","isInvalid","handleSignIn","e","preventDefault","user","alert","setItem","onSubmit","type","onChange","target","disabled","AdminHome","id","to","fetchAllUsers","fetchUser","u_id","editPassword","put","editUserGeneral","editUserInfo","fetchUserAvailability","fetchAllUsersAvailabilities","editUserAvailability","a_id","AdminEmployees","users","setUsers","width","setWidth","isLoading","setIsLoading","setWindowWidth","window","innerWidth","useEffect","getUsers","addEventListener","removeEventListener","color","map","i","backgroundColor","acn","title","last_name","phone","fetchRoles","AdminEmployee","useParams","setUser","roles","setRoles","success","setSuccess","isUpdating","setIsUpdating","setFirstName","setLastName","setPhone","role_id","setRoleId","hourly_pay","setHourlyPay","started_at","setStartedAt","showEditGeneral","setShowEditGeneral","showEditInfo","setShowEditInfo","new_password","setNewPassword","confirm_new_password","setConfirmNewPassword","handleUpdatePassword","handleUpdateUserGeneral","handleUpdateUserInfo","updated_at","Date","now","toLocaleDateString","getData","height","defaultValue","parseInt","role","level","placeholder","AdminNewEmployee","handleSubmit","getRoles","fetchTimes","createPreset","fetchPresets","deletePreset","p_id","delete","createShift","createCopyOfWeeklySchedule","fetchAllUsersSchedulesByDate","start_date","end_date","updateShift","s_id","deleteShift","fetchAllRequests","fetchRequestsByUser","fetchAllRequestsByStatus","status","fetchAllRequestsByStatusAndDate","weekStart","weekEnd","updateRequestStatus","r_id","createRequest","deleteRequest","fetchStoreHours","setStoreHours","updateStoreHours","AdminSchedules","availabilities","setAvailabilities","requests","setRequests","days","setDays","times","setTimes","presets","setPresets","store","setStore","isCopying","setIsCopying","startOfToday","dateISO","setDateISO","setWeekStart","setWeekEnd","shift_start_value","setShiftStartValue","shift_end_value","setShiftEndValue","setLevel","userData","setUserData","availabilityIndex","setAvailabilityIndex","getDatesOfTheWeek","selectedDate","date","startOfWeek","weekStartsOn","daysArray","dateToAdd","toISOString","setDate","getDate","handleSaveShift","dayIndex","startTimeHour","split","startTimeMinute","endTimeHour","endTimeMinute","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","shift_start","getFullYear","getMonth","toLocaleString","shift_end","handleCopyWeeklySchedule","confirm","shifts","length","j","shift","format","addWeeks","parseISO","updated","handleNextWeek","handleSavePreset","time","newPresets","handleRemoveShift","getTimeValue","hour","getHours","min","getMinutes","toString","getTime","toLocaleTimeString","replace","renderEditShift","shiftValue","preset","parseFloat","store_open_level","store_close_level","border","renderBlank","a_i","start_time","index","store_open_value","store_close_value","handleUserClick","renderShift","startStartValue","endStartValue","handleEditShift","getDatesAndLoadData","day","availability","end_time","subWeeks","handlePreviousWeek","request","requested_dates","r_i","u_i","AdminRequests","setStatus","handleUpdateRequestStatus","handleSortRequests","getRequests","requested_at","toDateString","rd","rd_i","notes","AdminStore","isSettingStoreHours","setIsSettingStoreHours","updatingId","setUpdatingId","store_open","setStoreOpen","store_close","setStoreClose","setStoreOpenValue","setStoreCloseValue","setStoreOpenLevel","setStoreCloseLevel","showEditHours","setShowEditHours","storeFirstTime","setStoreFirstTime","handleSetStoreHours","setTimeout","saveData","handleUpdateStoreHours","handleDeletePreset","handleSelectStoreOpen","handleSelectStoreClose","UserHome","UserProfile","setUid","EditAvailability","dayStart","dayEnd","setDayStart","setDayEnd","UserAvailability","showEditAvailability","setShowEditAvailability","setAvailability","monStart","setMonStart","monEnd","setMonEnd","tueStart","setTueStart","tueEnd","setTueEnd","wedStart","setWedStart","wedEnd","setWedEnd","thurStart","setThurStart","thurEnd","setThurEnd","friStart","setFriStart","friEnd","setFriEnd","satStart","setSatStart","satEnd","setSatEnd","sunStart","setSunStart","sunEnd","setSunEnd","handleShowEditAvailability","handleSaveAvailability","mon","tue","wed","thur","fri","sat","sun","newAvail","avail","UserRequests","isDeleting","setIsDeleting","isSubmitting","setIsSubmitting","createNew","setCreateNew","setNotes","dates","setDates","didUpdate","setDidUpdate","numOfDates","setNumOfDates","handleDeleteRequest","handleCreateRequest","datesArr","clearForm","handleAddDate","newDate","undefined","arrCopy","splice","handleRemoveDate","DateElement","XDateElement","renderDateElements","items","UserSchedules","AdminSignIn","ProtectedRoute","Component","component","rest","render","location","pathname","state","from","UserRoute","App","getVerifiedUser","fallback","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.596bc984.chunk.js","sourcesContent":["export const SIGN_IN = '/';\r\nexport const ADMIN_SIGN_IN = '/admin'\r\n\r\nexport const ADMIN_HOME = '/admin/home';\r\nexport const ADMIN_EMPLOYEES = '/admin/employees'; // Need 'exact' for path in App.js\r\nexport const ADMIN_EMPLOYEE = '/admin/employees/:u_id';\r\nexport const ADMIN_NEW_EMPLOYEE = '/admin/employees/new';\r\nexport const ADMIN_SCHEDULES = '/admin/schedules';\r\nexport const ADMIN_REQUESTS = '/admin/requests';\r\nexport const ADMIN_STORE = '/admin/store';\r\n\r\nexport const USER_HOME = '/home';\r\nexport const USER_SCHEDULES = '/schedules';\r\nexport const USER_REQUESTS = '/requests';\r\nexport const USER_AVAILABILITY = '/availability';\r\nexport const USER_PROFILE = '/profile';","import axios from 'axios';\r\n\r\nexport const signIn = async (credentials) => {\r\n    try {\r\n        const res = await axios.post('auth/signin', credentials);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createUser = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('auth/register', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const verifyUser = async (tokenConfig) => {\r\n    try {\r\n        const res = await axios.get('auth/verify', tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response };\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        const tokenConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n        return tokenConfig;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport default function UserContextProvider({ children }) {\r\n    const [verifiedUser, setVerifiedUser] = useState(null);\r\n    return (\r\n        <UserContext.Provider value={{ verifiedUser, setVerifiedUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Header() {\r\n    const { verifiedUser, setVerifiedUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        sessionStorage.removeItem('token');\r\n        setVerifiedUser(null); // Remove verified user from context\r\n        if (verifiedUser.is_admin) history.push(ROUTES.ADMIN_SIGN_IN);\r\n        else history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            {\r\n                verifiedUser &&\r\n                <div className=\"flex container\">\r\n                    <div className=\"mr-5\">\r\n                        <p className=\"off-white\">Welcome, {verifiedUser && verifiedUser.first_name}</p>\r\n                    </div>\r\n                    <div className=\"pointer-no-u\" style={{ marginTop: '2px' }} onClick={handleSignOut}>\r\n                        <p className=\"off-white\"><i className=\"fas fa-sign-out-alt text-6\"></i></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </nav>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                alert('Please sign in through the admin portal');\r\n                history.push(ROUTES.ADMIN_SIGN_IN);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.USER_HOME);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-center vh-80\">\r\n            <div className=\"w-100\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col flex-center\">\r\n                    <div className=\"mb-1 w-100\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3 w-100\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function AdminHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid gap-2 col-xl-4-3fr lg-2-6fr sm-1-12fr\">\r\n            <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Employees</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-users\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_SCHEDULES} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_REQUESTS} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_STORE} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Store</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get('/users');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editPassword = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/reset-pw/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserGeneral = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserInfo = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/system/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUserAvailability = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/availability/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersAvailabilities = async () => {\r\n    try {\r\n        const res = await axios.get('/users/availability/all');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserAvailability = async (a_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/availability/${a_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllUsers } from '../../services/users';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployees() {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const handleClickUser = (u_id) => {\r\n        history.push(`${ROUTES.ADMIN_EMPLOYEES}/${u_id}`);\r\n    }\r\n\r\n    const handleNewEmployee = () => {\r\n        history.push(ROUTES.ADMIN_NEW_EMPLOYEE);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const users = await fetchAllUsers();\r\n            if (users) setUsers(users);\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth); // Set default width on page load\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <div className=\"mt-6 mb-4 flex flex-center\">\r\n                            <button className=\"btn-x-lg btn-hovered\" onClick={handleNewEmployee}>\r\n                                <p><i className=\"fas fa-plus\"></i> New Employee</p>\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <table id=\"users-list\" className=\"border-collapse w-100 text-center\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"p-3\">Role</th>\r\n                                        <th className=\"p-3\">Name</th>\r\n                                        <th className=\"p-3\">Email</th>\r\n                                        <th className=\"p-3\">Phone</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users && users.map((user, i) => (\r\n                                            <tr\r\n                                                key={i}\r\n                                                className=\"pointer\"\r\n                                                onClick={() => handleClickUser(user.u_id)}\r\n                                                style={i % 2 === 0\r\n                                                    ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                                            >\r\n                                                <td className=\"p-3\">{width < 380 ? user.acn : user.title}</td>\r\n                                                <td className=\"p-3\">{user.first_name} {user.last_name}</td>\r\n                                                <td className=\"p-3\">{user.email}</td>\r\n                                                <td className=\"p-3\">{user.phone}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const res = await axios.get('/roles');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { editPassword, editUserGeneral, editUserInfo, fetchUser } from '../../services/users';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployee() {\r\n    const { u_id } = useParams();\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n    const [showEditInfo, setShowEditInfo] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserInfo = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, hourly_pay, started_at, updated_at: new Date(Date.now()).toLocaleDateString() };\r\n\r\n        const res = await editUserInfo(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditInfo(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div style={{ height: '200px' }} className=\"my-2 flex flex-col justify-evenly\">\r\n            <div>\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderUserInfo = () => (\r\n        <div style={{ height: '250px' }} className=\"my-2 flex flex-col justify-evenly\">\r\n            <div>\r\n                <h4>Role</h4>\r\n                <p>{user.title}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Hourly Pay</h4>\r\n                <p>{verifiedUser.level <= user.level ? user.hourly_pay : '**'}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Started At</h4>\r\n                <p>{new Date(user.started_at).toLocaleDateString()}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Updated At</h4>\r\n                <p>{user.updated_at ? new Date(user.updated_at).toLocaleDateString() : 'N/A'}</p>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"btn-med btn-hovered\"\r\n                    onClick={() => setShowEditInfo(true)}\r\n                    disabled={verifiedUser.level > user.level}\r\n                >\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div style={{ height: '330px' }} className=\"my-2 flex flex-col justify-evenly\">\r\n            <div>\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditInfo = () => (\r\n        <div style={{ height: '270px' }} className=\"my-2 flex flex-col justify-evenly\">\r\n            <div>\r\n                <p>Role</p>\r\n                <select defaultValue={user.role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                    {\r\n                        roles && roles.map((role, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={role.role_id}\r\n                            >\r\n                                {role.title}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <p>Hourly Pay</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={hourly_pay}\r\n                    onChange={({ target }) => setHourlyPay(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Started At</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={new Date(started_at).toLocaleDateString()}\r\n                    onChange={({ target }) => setStartedAt(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserInfo()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditInfo(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} style={{ height: '230px' }} className=\"flex flex-col justify-evenly\">\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(u_id);\r\n            const roles = await fetchRoles();\r\n            setUser(user);\r\n            setRoles(roles);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setRoleId(user.role_id);\r\n            setHourlyPay(user.hourly_pay);\r\n            setStartedAt(user.started_at);\r\n            setIsLoading(false);\r\n        }\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    showEditInfo\r\n                                        ? renderEditInfo()\r\n                                        : renderUserInfo()\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    verifiedUser && verifiedUser.u_id === user.u_id &&\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport { createUser } from '../../services/auth';\r\n\r\nexport default function AdminNewEmployee() {\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState(6);\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, first_name, last_name, email, phone, password, hourly_pay, started_at };\r\n\r\n        const res = await createUser(body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            setError('');\r\n            setRoleId('');\r\n            setFirstName('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setPhone('');\r\n            setPassword('');\r\n            setHourlyPay('');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRoles() {\r\n            const roles = await fetchRoles();\r\n            setRoles(roles);\r\n        }\r\n\r\n        getRoles();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            <form onSubmit={handleSubmit} style={{ height: '630px' }} className=\"flex flex-col justify-evenly mt-2\">\r\n                <div>\r\n                    <p>First Name</p>\r\n                    <input type=\"text\" className=\"form-input\" onChange={({ target }) => setFirstName(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Last Name</p>\r\n                    <input type=\"text\" className=\"form-input\" onChange={({ target }) => setLastName(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Email</p>\r\n                    <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Phone</p>\r\n                    <input type=\"text\" className=\"form-input\" onChange={({ target }) => setPhone(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Password</p>\r\n                    <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Hourly Pay</p>\r\n                    <input type=\"text\" className=\"form-input\" onChange={({ target }) => setHourlyPay(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Starting Date</p>\r\n                    <input type=\"date\" className=\"form-input\" onChange={({ target }) => setStartedAt(target.value)} />\r\n                </div>\r\n                <div>\r\n                    <p>Role</p>\r\n                    <select value={role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                        {\r\n                            roles && roles.map((role, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={role.role_id}\r\n                                >\r\n                                    {role.title}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn-med btn-hovered\">Submit</button>\r\n                </div>\r\n            </form>\r\n            {error ? <p className=\"red\">{error}</p> : null}\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchTimes = async () => {\r\n    try {\r\n        const res = await axios.get('/presets/times');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createPreset = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/presets', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchPresets = async () => {\r\n    try {\r\n        const res = await axios.get('/presets');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deletePreset = async (p_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/presets/${p_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const createShift = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/shifts', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createCopyOfWeeklySchedule = async (body) => {\r\n    try {\r\n        const res = await axios.post('/shifts/copy', body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchShiftsByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateShift = async (s_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/shifts/${s_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteShift = async (s_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/shifts/${s_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllRequests = async () => {\r\n    try {\r\n        const res = await axios.get('/requests');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchRequestsByUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/requests/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatus = async (status) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatusAndDate = async (status, weekStart, weekEnd) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}/${weekStart}/${weekEnd}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateRequestStatus = async (r_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/requests/${r_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createRequest = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/requests', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async (r_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/requests/${r_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchStoreHours = async () => {\r\n    try {\r\n        const res = await axios.get('/store');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const setStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { createPreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { createShift, fetchAllUsersSchedulesByDate, deleteShift, updateShift, createCopyOfWeeklySchedule } from '../../services/shifts';\r\nimport { fetchAllUsersAvailabilities } from '../../services/users';\r\nimport { startOfToday, startOfWeek, addWeeks, subWeeks, parseISO, format } from 'date-fns';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllRequestsByStatusAndDate } from '../../services/requests';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function AdminSchedules() {\r\n    const [availabilities, setAvailabilities] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    const [requests, setRequests] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isCopying, setIsCopying] = useState(false);\r\n\r\n    // Used for datepicker\r\n    const [dateISO, setDateISO] = useState(startOfToday())\r\n    // Used for fetching data within dates in ISO string\r\n    const [weekStart, setWeekStart] = useState('');\r\n    const [weekEnd, setWeekEnd] = useState('');\r\n    // Used for getting time values when saving a shift\r\n    const [shift_start_value, setShiftStartValue] = useState('0 0');\r\n    const [shift_end_value, setShiftEndValue] = useState('0 0');\r\n    const [level, setLevel] = useState('');\r\n    // Used to render edit shift mode for selected date and employee only\r\n    const [userData, setUserData] = useState(null);\r\n    const [availabilityIndex, setAvailabilityIndex] = useState(null);\r\n\r\n    // For init load and datepicker\r\n    const getDatesOfTheWeek = async (selectedDate) => {\r\n        let date;\r\n        if (selectedDate) {\r\n            date = startOfWeek(new Date(selectedDate), { weekStartsOn: 1 });\r\n            setDateISO(selectedDate);\r\n        }\r\n        else {\r\n            date = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n        }\r\n\r\n        let daysArray = [];\r\n        let dateToAdd = date;\r\n        for (let i = 0; i < 7; i++) {\r\n            daysArray.push(dateToAdd.toISOString());\r\n            dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n        }\r\n\r\n        const weekStart = daysArray[0];\r\n        const weekEnd = daysArray[6];\r\n\r\n        setDays(daysArray);\r\n        setWeekStart(weekStart);\r\n        setWeekEnd(weekEnd);\r\n\r\n        // Refresh schedules after date change\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const requests = await fetchAllRequestsByStatusAndDate('Approved', weekStart, weekEnd);\r\n        setUsers(users);\r\n        setRequests(requests);\r\n    }\r\n\r\n    // Can create or update shift based on s_id being provided\r\n    const handleSaveShift = async (u_id, dayIndex, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = new Date(days[dayIndex]);\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shift_start_value.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shift_start_value.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shift_end_value.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shift_end_value.split(' ')[1]);\r\n        // Get local timezone\r\n        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: timezone });\r\n\r\n        const shift_end = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: timezone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        setUsers(users);\r\n\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleCopyWeeklySchedule = async () => {\r\n        const doCopy = window.confirm('Copy schedule to next week? Any shifts already saved will be overwritten.');\r\n        if (doCopy) {\r\n            setIsCopying(true);\r\n\r\n            let shifts = [];\r\n            for (let i = 0; i < users.length; i++) {\r\n                for (let j = 0; j < users[i].shifts.length; j++) {\r\n                    if (users[i].shifts[j].shift_end !== null) {\r\n                        let shift = {\r\n                            u_id: users[i].u_id,\r\n                            shift_start: format(addWeeks(parseISO(users[i].shifts[j].shift_start), 1), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                            shift_end: format(addWeeks(parseISO(users[i].shifts[j].shift_end), 1), \"yyyy-MM-dd'T'HH:mm:ss\")\r\n                        }\r\n                        shifts.push(shift);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = {\r\n                shifts,\r\n                weekStart: addWeeks(parseISO(weekStart), 1),\r\n                weekEnd: addWeeks(parseISO(weekEnd), 1)\r\n            };\r\n\r\n\r\n            await createCopyOfWeeklySchedule(body);\r\n            const updated = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            setUsers(updated);\r\n            // Display following week after copying schedule\r\n            handleNextWeek();\r\n            setIsCopying(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelShift = () => {\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    // Render edit shift (new)\r\n    const handleUserClick = (u_id, index) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(store.store_open_value);\r\n        setShiftEndValue(store.store_close_value);\r\n    }\r\n\r\n    // Render edit shift (update)\r\n    const handleEditShift = (u_id, index, startStartValue, endStartValue) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(startStartValue);\r\n        setShiftEndValue(endStartValue);\r\n        setLevel(level);\r\n    }\r\n\r\n    const handlePreviousWeek = () => {\r\n        let date = subWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleNextWeek = () => {\r\n        let date = addWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleSavePreset = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        let level;\r\n        let shift_start;\r\n        let shift_end;\r\n        for (let i = 0; i < presets.length; i++) {\r\n            if (shift_start_value === presets[i].shift_start_value\r\n                && shift_end_value === presets[i].shift_end_value) {\r\n                alert('Preset already saved');\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (shift_start_value === times[i].value) {\r\n                // Assign only start time level for sorting when displayed in the list\r\n                level = times[i].level;\r\n                shift_start = times[i].time;\r\n            }\r\n            if (shift_end_value === times[i].value) {\r\n                shift_end = times[i].time;\r\n            }\r\n        }\r\n\r\n        const body = { shift_start, shift_end, shift_start_value, shift_end_value, level };\r\n        await createPreset(body, tokenConfig);\r\n\r\n        const newPresets = await fetchPresets();\r\n        setPresets(newPresets);\r\n\r\n        alert('Preset saved')\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            setUsers(users);\r\n            setUserData('');\r\n            setAvailabilityIndex('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const getTimeValue = (shift) => {\r\n        const date = new Date(shift);\r\n        const hour = date.getHours();\r\n        const min = date.getMinutes();\r\n        const values = `${hour.toString()} ${min.toString()}`\r\n        return values;\r\n    }\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <>\r\n            <h3 className=\"text-center\">Availability</h3>\r\n            <table id=\"availability-table\" className=\"border-collapse w-100 text-center\">\r\n                <thead>\r\n                    <tr className=\"border-bottom\">\r\n                        <th className=\" pt-2 pb-1\">Role</th>\r\n                        <th className=\" pt-2 pb-1\">Name</th>\r\n                        {\r\n                            // Render the day only\r\n                            days && days.map((day, i) => (\r\n                                <th key={i} className=\" pt-2 pb-1\">\r\n                                    <p>{new Date(day).toString().split(' ')[0]}</p>\r\n                                </th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        availabilities && availabilities.map((user, i) => (\r\n                            <tr\r\n                                key={i}\r\n                                className=\"border-bottom\"\r\n                                style={i % 2 === 0\r\n                                    ? { backgroundColor: 'rgb(235, 235, 235)' }\r\n                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                            >\r\n                                <td className=\" nowrap py-1\">{user.title}</td>\r\n                                <td className=\" nowrap py-1\">{user.first_name} {user.last_name}</td>\r\n                                {\r\n                                    user.availability.map((time, i) => (\r\n                                        <td key={i} className={` nowrap py-1 ${time.start_time === 'N/A' && 'bg-black'}`}>\r\n                                            {(time.start_time === 'ANY' && time.end_time === 'ANY') ? 'ANY' : `${time.start_time} - ${time.end_time}`}\r\n                                        </td>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n    const renderController = () => (\r\n        <>\r\n            <div className=\"flex flex-center mt-7 mb-3\" id=\"select-week\">\r\n                <div className=\"flex flex-center\">\r\n                    <div className=\"pointer\" onClick={() => handlePreviousWeek()}>\r\n                        <em className=\"text-3\">Previous&nbsp;week</em>\r\n                        <p className=\"text-center\">\r\n                            <i className=\"fas fa-angle-double-left\"></i>\r\n                            <i className=\"fas fa-angle-double-left\"></i>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"relative mx-3\">\r\n                        <input\r\n                            type=\"date\"\r\n                            value={new Date(dateISO).toISOString().split('T')[0]}\r\n                            // Creating a new date obj with yyyy-mm-dd rolls back one day so create with year, month, and date\r\n                            onChange={({ target }) => getDatesOfTheWeek(new Date(target.value.split('-'[0], target.value.split('-')[1], target.value.split('-')[2])))}\r\n                        />\r\n                        <div className=\"absolute\">&nbsp;</div>\r\n                    </div>\r\n                    <div className=\"pointer\" onClick={() => handleNextWeek()}>\r\n                        <em className=\"text-3\">Next&nbsp;week</em>\r\n                        <p className=\"text-center\">\r\n                            <i className=\"fas fa-angle-double-right\"></i>\r\n                            <i className=\"fas fa-angle-double-right\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex align-center justify-evenly my-3\">\r\n                <div>\r\n                    <strong>Approved Requests</strong>\r\n                    {\r\n                        requests.length\r\n                            ? requests.map((request, i) => (\r\n                                <div key={i}>\r\n                                    <p>\r\n                                        {request.first_name} {request.last_name}:\r\n                                        {request.requested_dates.map((date, r_i) => (\r\n                                            <span key={r_i}>\r\n                                                &nbsp;\r\n                                                {\r\n                                                    r_i === request.requested_dates.length - 1\r\n                                                        ? new Date(date).toLocaleDateString()\r\n                                                        : `${new Date(date).toLocaleDateString()},`\r\n                                                }\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                </div>\r\n                            ))\r\n                            : <p className=\"text-center\">N/A</p>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className=\"btn-x-lg btn-hovered\"\r\n                        onClick={() => handleCopyWeeklySchedule()}\r\n                        disabled={isCopying}\r\n                    >\r\n                        {\r\n                            isCopying\r\n                                ? <Loader\r\n                                    type='Oval'\r\n                                    color='rgb(50, 110, 150)'\r\n                                    height={25}\r\n                                />\r\n                                : `Copy to Next Week`\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        <table className=\"w-100 mt-1 border-collapse text-center\">\r\n            <tbody>\r\n                <tr className=\"border-bottom\">\r\n                    <td><strong>Role</strong></td>\r\n                    <td><strong>Name</strong></td>\r\n                    {\r\n                        days && days.map((day, i) => (\r\n                            <td key={i}>\r\n                                <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                            </td>\r\n                        ))\r\n                    }\r\n                </tr>\r\n                {\r\n                    users && users.map((user, u_i) => (\r\n                        <tr\r\n                            key={u_i}\r\n                            className=\"bg-x-light-gray border-bottom\"\r\n                        >\r\n                            <td className=\"border-x  nowrap\">{user.title}</td>\r\n                            <td className=\"border-x  nowrap\">{user.first_name} {user.last_name}</td>\r\n                            {\r\n                                user.availability.map((time, a_i) => (\r\n                                    // Only render edit mode for the selected date and employee\r\n                                    (userData === user.u_id && availabilityIndex === a_i)\r\n                                        ? renderEditShift(user.u_id, a_i, user.shifts[a_i])\r\n                                        // Render shifts if they exist during the selected week\r\n                                        : user.shifts[a_i].shift_end === null\r\n                                            ? renderBlank(user.u_id, a_i, time)\r\n                                            : renderShift(user.u_id, a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n    const renderEditShift = (u_id, dayIndex, shift) => (\r\n        <td key={dayIndex}>\r\n            <div className=\"flex justify-evenly mt-1\">\r\n                <p className=\"text-3\">Preset</p>\r\n                <select\r\n                    className=\"w-60\"\r\n                    defaultValue='0 0'\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        presets && presets.map((preset, i) => (\r\n                            <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <hr className=\"my-1\" />\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"text-3\">Start</p>\r\n                <select\r\n                    className=\"w-60\"\r\n                    value={shift_start_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"text-3 mr-1\">End</p>\r\n                <select\r\n                    className=\"w-60\"\r\n                    value={shift_end_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1\">\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={35}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"my-2 w-100 flex justify-evenly\">\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => handleSaveShift(u_id, dayIndex, shift.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check\"></i>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => handleSavePreset()}\r\n                        >\r\n                            <i className=\"fas fa-star\"></i>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => shift.s_id ? handleRemoveShift(shift.s_id) : handleCancelShift()}\r\n                        >\r\n                            {\r\n                                shift.shift_end === null\r\n                                    ? <i className=\"fas fa-times\"></i>\r\n                                    : <i className=\"fas fa-trash-alt\"></i>\r\n                            }\r\n                        </button>\r\n                    </div>\r\n            }\r\n        </td>\r\n    )\r\n\r\n    const renderBlank = (u_id, a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`border-x  nowrap pointer h-10 ${time.start_time === 'N/A' ? 'bg-black' : 'bg-light-gray-hovered'}`}\r\n            onClick={() => handleUserClick(u_id, a_i)}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (u_id, a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"border-x  nowrap pointer h-10 bg-light-gray-hovered\"\r\n            onClick={() => handleEditShift(u_id, a_i, getTimeValue(shift_start), getTimeValue(shift_end))}\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getDatesAndLoadData() {\r\n            const times = await fetchTimes();\r\n            const availabilities = await fetchAllUsersAvailabilities();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n            await getDatesOfTheWeek();\r\n\r\n            setTimes(times);\r\n            setAvailabilities(availabilities);\r\n            setPresets(presets);\r\n            setStore(store);\r\n            setShiftStartValue(store.store_open_value);\r\n            setShiftEndValue(store.store_close_value);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getDatesAndLoadData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            {\r\n                isLoading ?\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {renderAvailability()}\r\n                        {renderController()}\r\n                        {renderSchedule()}\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { fetchAllRequestsByStatus, fetchAllRequests, updateRequestStatus } from '../../services/requests';\r\nimport Loader from 'react-loader-spinner';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminRequests() {\r\n    const [requests, setRequests] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [status, setStatus] = useState('All');\r\n\r\n    const handleUpdateRequestStatus = async (r_id, status) => {\r\n        const update = window.confirm('Confirm decision?');\r\n        if (update) {\r\n            const tokenConfig = isAuthenticated();\r\n            const body = { status };\r\n\r\n            await updateRequestStatus(r_id, body, tokenConfig);\r\n            const requests = await fetchAllRequests();\r\n\r\n            setRequests(requests);\r\n        }\r\n    }\r\n\r\n    const handleSortRequests = async (status) => {\r\n        setIsLoading(true);\r\n        if (status === 'All') {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        } else {\r\n            const requests = await fetchAllRequestsByStatus(status);\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRequests() {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getRequests();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                <div className=\"flex flex-col align-center\">\r\n                    <p className=\"mb-2\">View by</p>\r\n                    <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 grid gap-2 col-xl-4-3fr sm-2-6fr\">\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered w-90 sm-w-60 grid-center\r\n                                ${status === 'All' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('All')}\r\n                        >\r\n                            All\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered w-90 sm-w-60 grid-center\r\n                                ${status === 'Pending' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Pending')}\r\n                        >\r\n                            Pending\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered w-90 sm-w-60 grid-center\r\n                                ${status === 'Approved' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Approved')}\r\n                        >\r\n                            Approved\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered w-90 sm-w-60 grid-center\r\n                                ${status === 'Denied' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Denied')}\r\n                        >\r\n                            Denied\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"mt-2 flex flex-col align-center\">\r\n                            {\r\n                                requests.length ? requests.map((request, r_i) => (\r\n                                    <div key={r_i} className=\"my-2 border-solid-1 border-smooth box-shadow flex flex-col align-center text-center p-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                                        <div className=\"my-2\">\r\n                                            <p><strong>Status</strong></p>\r\n                                            <em\r\n                                                className={\r\n                                                    request.status === 'Pending'\r\n                                                        ? 'blue'\r\n                                                        : request.status === 'Approved'\r\n                                                            ? 'green'\r\n                                                            : request.status === 'Denied'\r\n                                                                ? 'red'\r\n                                                                : ''}>\r\n                                                {request.status}\r\n                                            </em>\r\n                                        </div>\r\n                                        <div className=\"w-100 grid xl-2-6fr sm-1-12fr\">\r\n                                            <div className=\"my-2\">\r\n                                                <strong>{request.first_name} {request.last_name}</strong>\r\n                                                <p>{request.title}</p>\r\n                                            </div>\r\n                                            <div className=\"my-2\">\r\n                                                <strong>Submission date</strong>\r\n                                                <p>{new Date(request.requested_at).toDateString()}</p>\r\n                                            </div>\r\n                                            <div className=\"my-2\">\r\n                                                <strong>Requested dates</strong>\r\n                                                {\r\n                                                    request.requested_dates.map((rd, rd_i) => (\r\n                                                        <p key={rd_i}>\r\n                                                            {\r\n                                                                // Add commas if more than one date\r\n                                                                rd_i === request.requested_dates.length - 1\r\n                                                                    ? new Date(rd).toDateString()\r\n                                                                    : `${new Date(rd).toDateString()},`\r\n                                                            }\r\n                                                        </p>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"my-2\">\r\n                                                <strong>Notes</strong>\r\n                                                <p>{request.notes}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"my-3 w-50 lg-w-60 med-w-80 xs-w-90 flex justify-evenly\">\r\n                                            <button\r\n                                                className=\"btn-med btn-hovered pointer-no-u\"\r\n                                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                            >\r\n                                                Approve\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"btn-med btn-hovered pointer-no-u\"\r\n                                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                            >\r\n                                                Deny\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchStoreHours, setStoreHours, updateStoreHours } from '../../services/store';\r\nimport { deletePreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminStore() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isSettingStoreHours, setIsSettingStoreHours] = useState(false);\r\n    const [updatingId, setUpdatingId] = useState('');\r\n\r\n    const [store_open, setStoreOpen] = useState('');\r\n    const [store_close, setStoreClose] = useState('');\r\n    const [store_open_value, setStoreOpenValue] = useState('');\r\n    const [store_close_value, setStoreCloseValue] = useState('');\r\n    const [store_open_level, setStoreOpenLevel] = useState('');\r\n    const [store_close_level, setStoreCloseLevel] = useState('');\r\n    const [showEditHours, setShowEditHours] = useState(false);\r\n    const [storeFirstTime, setStoreFirstTime] = useState(null);\r\n\r\n    const handleSetStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = { store_open, store_close, store_open_value, store_close_value, store_open_level, store_close_level };\r\n\r\n                await setStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n\r\n    }\r\n\r\n    const handleUpdateStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = { store_open, store_close, store_open_value, store_close_value, store_open_level, store_close_level };\r\n\r\n                await updateStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n    }\r\n\r\n    const handleSelectStoreOpen = (store_open) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_open) {\r\n                setStoreOpen(times[i].time);\r\n                setStoreOpenValue(times[i].value);\r\n                setStoreOpenLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectStoreClose = (store_close) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_close) {\r\n                setStoreClose(times[i].time);\r\n                setStoreCloseValue(times[i].value);\r\n                setStoreCloseLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDeletePreset = async (p_id) => {\r\n        const doDelete = window.confirm('Delete preset?');\r\n        if (doDelete) {\r\n            setIsUpdating(true);\r\n            setUpdatingId(p_id);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deletePreset(p_id, tokenConfig);\r\n            const presets = await fetchPresets();\r\n\r\n            setPresets(presets);\r\n            setIsUpdating(false);\r\n            setUpdatingId('');\r\n        }\r\n    }\r\n\r\n    const renderStoreHours = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <div className=\"my-1\">\r\n                <p>Open</p>\r\n                <select\r\n                    className=\"w-3\"\r\n                    value={store_open}\r\n                    onChange={({ target }) => handleSelectStoreOpen(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-1\">\r\n                <p>Close</p>\r\n                <select\r\n                    className=\"w-3\"\r\n                    value={store_close}\r\n                    onChange={({ target }) => handleSelectStoreClose(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-3 w-4 flex justify-evenly\">\r\n                <button\r\n                    className={`btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => storeFirstTime === true ? handleSetStoreHours() : handleUpdateStoreHours()}\r\n                >\r\n                    Save\r\n                </button>\r\n                <button\r\n                    className={`btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => setShowEditHours(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n            {\r\n                isSettingStoreHours &&\r\n                <Loader\r\n                    type='ThreeDots'\r\n                    height={10}\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const renderPresets = () => (\r\n        <div>\r\n            <h3 className=\"my-2\">Manage presets</h3>\r\n            {\r\n                presets && presets.map((preset, i) => (\r\n                    isUpdating && updatingId === preset.p_id\r\n                        ? <div className=\"text-center\">\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                                height={20}\r\n                            />\r\n                        </div>\r\n                        : <div key={i} className=\"relative\" id=\"manage-presets\" onClick={() => handleDeletePreset(preset.p_id)}>\r\n                            <p className=\"border-solid-1 py-1\">\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </p>\r\n                            <div className=\"absolute w-100 h-100 bg-dark-gray flex flex-center white pointer-no-u\">\r\n                                <p><i className=\"fas fa-trash-alt\"></i> Delete?</p>\r\n                            </div>\r\n                        </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const times = await fetchTimes();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n\r\n            setTimes(times);\r\n            setPresets(presets);\r\n\r\n            if (store) {\r\n                setStoreOpen(store.store_open);\r\n                setStoreClose(store.store_close);\r\n                setStoreOpenValue(store.store_open_value);\r\n                setStoreCloseValue(store.store_close_value);\r\n                setStoreOpenLevel(store.store_open_level);\r\n                setStoreCloseLevel(store.store_close_level);\r\n                setStoreFirstTime(false);\r\n            } else {\r\n                setStoreFirstTime(true);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"flex justify-center\">\r\n                            <div className=\"text-center border-solid-1 border-smooth box-shadow w-50 med-w-70 sm-w-80 xs-w-90\">\r\n                                <h3 className=\"my-2\">Store Hours</h3>\r\n                                {\r\n                                    showEditHours\r\n                                        ? renderStoreHours()\r\n                                        : <div>\r\n                                            {\r\n                                                store_open && store_close\r\n                                                    ? <p className=\"my-2\">{store_open.toString()} - {store_close.toString()}</p>\r\n                                                    : <p className=\"my-2\">N/A</p>\r\n                                            }\r\n                                            <button className=\"btn-med btn-hovered mt-1 mb-2\" onClick={() => setShowEditHours(true)}>Edit</button>\r\n                                        </div>\r\n                                }\r\n\r\n                                <hr className=\"my-3\" />\r\n\r\n                                {\r\n                                    renderPresets()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function UserHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid gap-2 col-xl-4-3fr lg-2-6fr sm-1-12fr\">\r\n            <Link to={ROUTES.USER_SCHEDULES} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_REQUESTS} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_AVAILABILITY} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Availability</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-clock\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_PROFILE} className=\"black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Profile</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchUser, editPassword, editUserGeneral } from '../../services/users';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function UserProfile() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [u_id, setUid] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id, tokenConfig);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div style={{ height: '200px' }} className=\"my-2 flex flex-col justify-evenly\">\r\n            <div>\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div style={{ height: '330px' }} className=\"my-2 flex flex-col justify-evenly\">\r\n            <div>\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} style={{ height: '230px' }} className=\"flex flex-col justify-evenly\">\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            // verifiedUser is null on init load so add as dependency and check it again to fetch data\r\n            if (verifiedUser) {\r\n                const user = await fetchUser(verifiedUser.u_id);\r\n                setUid(user.u_id);\r\n                setUser(user);\r\n                setFirstName(user.first_name);\r\n                setLastName(user.last_name);\r\n                setEmail(user.email);\r\n                setPhone(user.phone);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function EditAvailability({ dayStart, dayEnd, setDayStart, setDayEnd, times, store }) {\r\n    return (\r\n        <div className=\"flex justify-center justify-evenly\">\r\n            <div>\r\n                <p>From</p>\r\n                <select value={dayStart} onChange={({ target }) => setDayStart(target.value)}>\r\n                    <option value=\"ANY\">ANY</option>\r\n                    <option value=\"N/A\">N/A</option>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.time}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <p>To</p>\r\n                <select value={dayEnd} onChange={({ target }) => setDayEnd(target.value)}>\r\n                    <option value=\"ANY\">ANY</option>\r\n                    <option value=\"N/A\">N/A</option>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.time}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport EditAvailability from './editAvailability';\r\nimport { editUserAvailability, fetchUserAvailability } from '../../services/users';\r\nimport { fetchTimes } from '../../services/presets';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function UserAvailability() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [showEditAvailability, setShowEditAvailability] = useState(false);\r\n\r\n    const [availability, setAvailability] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n\r\n    const [monStart, setMonStart] = useState('');\r\n    const [monEnd, setMonEnd] = useState('');\r\n    const [tueStart, setTueStart] = useState('');\r\n    const [tueEnd, setTueEnd] = useState('');\r\n    const [wedStart, setWedStart] = useState('');\r\n    const [wedEnd, setWedEnd] = useState('');\r\n    const [thurStart, setThurStart] = useState('');\r\n    const [thurEnd, setThurEnd] = useState('');\r\n    const [friStart, setFriStart] = useState('');\r\n    const [friEnd, setFriEnd] = useState('');\r\n    const [satStart, setSatStart] = useState('');\r\n    const [satEnd, setSatEnd] = useState('');\r\n    const [sunStart, setSunStart] = useState('');\r\n    const [sunEnd, setSunEnd] = useState('');\r\n\r\n    const handleShowEditAvailability = () => {\r\n        for (let i = 0; i < availability.length; i++) {\r\n            switch (availability[i].day) {\r\n                case 'Monday':\r\n                    setMonStart(availability[i].start_time);\r\n                    setMonEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Tuesday':\r\n                    setTueStart(availability[i].start_time);\r\n                    setTueEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Wednesday':\r\n                    setWedStart(availability[i].start_time);\r\n                    setWedEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Thursday':\r\n                    setThurStart(availability[i].start_time);\r\n                    setThurEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Friday':\r\n                    setFriStart(availability[i].start_time);\r\n                    setFriEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Saturday':\r\n                    setSatStart(availability[i].start_time);\r\n                    setSatEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Sunday':\r\n                    setSunStart(availability[i].start_time);\r\n                    setSunEnd(availability[i].end_time);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setShowEditAvailability(true);\r\n    }\r\n\r\n    const handleSaveAvailability = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        let data = [];\r\n\r\n        let mon = { u_id: verifiedUser.u_id, day: availability[0].day, start_time: monStart, end_time: monEnd, level: 1 };\r\n        data.push(mon);\r\n        let tue = { u_id: verifiedUser.u_id, day: availability[1].day, start_time: tueStart, end_time: tueEnd, level: 2 };\r\n        data.push(tue);\r\n        let wed = { u_id: verifiedUser.u_id, day: availability[2].day, start_time: wedStart, end_time: wedEnd, level: 3 };\r\n        data.push(wed);\r\n        let thur = { u_id: verifiedUser.u_id, day: availability[3].day, start_time: thurStart, end_time: thurEnd, level: 4 };\r\n        data.push(thur);\r\n        let fri = { u_id: verifiedUser.u_id, day: availability[4].day, start_time: friStart, end_time: friEnd, level: 5 };\r\n        data.push(fri);\r\n        let sat = { u_id: verifiedUser.u_id, day: availability[5].day, start_time: satStart, end_time: satEnd, level: 6 };\r\n        data.push(sat);\r\n        let sun = { u_id: verifiedUser.u_id, day: availability[6].day, start_time: sunStart, end_time: sunEnd, level: 7 };\r\n        data.push(sun);\r\n\r\n        // Check if N/A is paired with a time value\r\n        for (let i = 0; i < data.length; i++) {\r\n            if ((data[i].start_time === 'N/A' && data[i].end_time !== 'N/A') ||\r\n                (data[i].start_time !== 'N/A' && data[i].end_time === 'N/A')) {\r\n                setIsUpdating(false);\r\n                return alert('N/A must only be N/A');\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            await editUserAvailability(availability[i].a_id, data[i], tokenConfig);\r\n        }\r\n\r\n        const newAvail = await fetchUserAvailability(verifiedUser.u_id);\r\n        setAvailability(newAvail);\r\n        setIsUpdating(false);\r\n        setShowEditAvailability(false);\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"flex flex-col align-center mt-4\">\r\n            <div className=\"border-solid-1 border-smooth w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <div>\r\n                    {\r\n                        availability && availability.map((avail, i) => (\r\n                            <div key={i} className=\"text-center my-2\">\r\n                                <p className=\"my-1\"><strong>{avail.day}</strong></p>\r\n                                <p>{avail.start_time} - {avail.end_time}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center my-5\">\r\n                    <button className=\"btn-sm btn-hovered\" onClick={handleShowEditAvailability}>Edit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditAvailability = () => (\r\n        <div className=\"flex justify-center mt-4\">\r\n            <div className=\"border-solid-1 border-smooth w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <div className=\"flex flex-col text-center\">\r\n\r\n                    <p className=\"mt-2\">Monday</p>\r\n                    <EditAvailability dayStart={monStart} dayEnd={monEnd} setDayStart={setMonStart} setDayEnd={setMonEnd} times={times} store={store} />\r\n                    <p className=\"mt-3\">Tuesday</p>\r\n                    <EditAvailability dayStart={tueStart} dayEnd={tueEnd} setDayStart={setTueStart} setDayEnd={setTueEnd} times={times} store={store} />\r\n                    <p className=\"mt-3\">Wednesday</p>\r\n                    <EditAvailability dayStart={wedStart} dayEnd={wedEnd} setDayStart={setWedStart} setDayEnd={setWedEnd} times={times} store={store} />\r\n                    <p className=\"mt-3\">Thursday</p>\r\n                    <EditAvailability dayStart={thurStart} dayEnd={thurEnd} setDayStart={setThurStart} setDayEnd={setThurEnd} times={times} store={store} />\r\n                    <p className=\"mt-3\">Friday</p>\r\n                    <EditAvailability dayStart={friStart} dayEnd={friEnd} setDayStart={setFriStart} setDayEnd={setFriEnd} times={times} store={store} />\r\n                    <p className=\"mt-3\">Saturday</p>\r\n                    <EditAvailability dayStart={satStart} dayEnd={satEnd} setDayStart={setSatStart} setDayEnd={setSatEnd} times={times} store={store} />\r\n                    <p className=\"mt-3\">Sunday</p>\r\n                    <EditAvailability dayStart={sunStart} dayEnd={sunEnd} setDayStart={setSunStart} setDayEnd={setSunEnd} times={times} store={store} />\r\n\r\n                    <div className=\"my-2\">\r\n                        <button\r\n                            className={`btn-sm mx-3 ${!isUpdating && 'btn-hovered'}`}\r\n                            disabled={isUpdating}\r\n                            onClick={() => handleSaveAvailability()}\r\n                        >\r\n                            Save\r\n                        </button>\r\n                        <button className={`btn-sm mx-3 ${!isUpdating && 'btn-hovered'}`} disabled={isUpdating} onClick={() => setShowEditAvailability(false)}>Cancel</button>\r\n                    </div>\r\n\r\n                    {\r\n                        isUpdating &&\r\n                        <div className=\"text-center my-1\">\r\n                            <Loader\r\n                                type='ThreeDots'\r\n                                height={10}\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const availability = await fetchUserAvailability(verifiedUser.u_id);\r\n                const times = await fetchTimes();\r\n                const store = await fetchStoreHours();\r\n\r\n                setAvailability(availability);\r\n                setTimes(times);\r\n                setStore(store);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <>\r\n                        {\r\n                            showEditAvailability\r\n                                ? renderEditAvailability()\r\n                                : renderAvailability()\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createRequest, deleteRequest, fetchRequestsByUser } from '../../services/requests';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserRequests() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [createNew, setCreateNew] = useState(false);\r\n    const [requests, setRequests] = useState(null);\r\n\r\n    const [notes, setNotes] = useState('');\r\n    const [dates, setDates] = useState([]);\r\n    const [didUpdate, setDidUpdate] = useState(false); // Used to refresh date inputs after selection\r\n    const [numOfDates, setNumOfDates] = useState(1);\r\n\r\n    const handleDeleteRequest = async (r_id) => {\r\n        const doDelete = window.confirm('Delete request?');\r\n        if (doDelete) {\r\n            setIsDeleting(true);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deleteRequest(r_id, tokenConfig);\r\n\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            setRequests(requests);\r\n            setIsDeleting(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateRequest = async () => {\r\n        const request = window.confirm('Submit request?');\r\n        if (request) {\r\n            setIsSubmitting(true);\r\n            const tokenConfig = isAuthenticated();\r\n            let datesArr = dates;\r\n\r\n            for (let i = 0; i < datesArr.length; i++) {\r\n                datesArr[i] = new Date(datesArr[i]).toISOString();\r\n            }\r\n            \r\n            const body = {\r\n                u_id: verifiedUser.u_id,\r\n                requested_at: format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                notes,\r\n                requested_dates: datesArr\r\n            }\r\n            \r\n            await createRequest(body, tokenConfig);\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            \r\n            setRequests(requests);\r\n            setCreateNew(false);\r\n            clearForm();\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelCreateNew = () => {\r\n        setCreateNew(false);\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNumOfDates(1);\r\n        setDates([]);\r\n        setNotes('');\r\n    }\r\n    \r\n    const handleAddDate = (index, newDate) => {\r\n        if (dates[index] !== undefined) {\r\n            let arrCopy = dates;\r\n            // eslint-disable-next-line\r\n            let removed = dates.splice(index, 1, newDate);\r\n            setDates(arrCopy);\r\n            setDidUpdate(!didUpdate);\r\n        }\r\n        else {\r\n            setDates([...dates, newDate]);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDate = (index) => {\r\n        let arrCopy = dates;\r\n        // eslint-disable-next-line\r\n        let removed = dates.splice(index, 1);\r\n        setDates(arrCopy);\r\n        setNumOfDates(numOfDates - 1);\r\n    }\r\n\r\n    const DateElement = ({ index, dates }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input type=\"date\" value={dates[index] !== undefined ? dates[index] : ''} onChange={({ target }) => handleAddDate(index, target.value)} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const XDateElement = ({ index, dates }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input type=\"date\" value={dates[index] !== undefined ? dates[index] : ''} onChange={({ target }) => handleAddDate(index, target.value)} />\r\n                <button className=\"btn-sm btn-hovered mt-2\" onClick={() => handleRemoveDate(index)}>\r\n                    <i className=\"fas fa-minus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderDateElements = (dates) => {\r\n        let items = [];\r\n        for (let i = 0; i < numOfDates; i++) {\r\n            if (numOfDates > 1 && i === numOfDates - 1) {\r\n                items.push(<XDateElement key={i} index={i} dates={dates} />)\r\n            } else {\r\n                items.push(<DateElement key={i} index={i} dates={dates} />)\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    const renderRequests = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            {\r\n                requests && requests.map((request, i) => (\r\n                    <div key={i} className=\"border-solid-1 border-smooth p-1 w-50 lg-w-60 med-w-80 xs-w-90 text-center my-2\">\r\n                        <div className=\"grid xl-2-6fr sm-1-12fr\">\r\n                            <div className=\"my-2\">\r\n                                <strong>Submission date</strong>\r\n                                <p>{new Date(request.requested_at).toLocaleDateString()}</p>\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                <p><strong>Status</strong></p>\r\n                                <em\r\n                                    className={\r\n                                        request.status === 'Pending'\r\n                                            ? 'blue'\r\n                                            : request.status === 'Approved'\r\n                                                ? 'green'\r\n                                                : request.status === 'Denied'\r\n                                                    ? 'red'\r\n                                                    : ''}>\r\n                                    {request.status}\r\n                                </em>\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                <strong>Requested dates</strong>\r\n                                {\r\n                                    request.requested_dates.map((rd, rd_i) => (\r\n                                        <p key={rd_i}>\r\n                                            {\r\n                                                rd_i === request.requested_dates.length - 1\r\n                                                    ? new Date(rd).toDateString()\r\n                                                    : `${new Date(rd).toDateString()},`\r\n                                            }\r\n                                        </p>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                <strong>Notes</strong>\r\n                                <p>{request.notes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"my-2\">\r\n                            <button\r\n                                className=\"btn-sm btn-hovered\"\r\n                                onClick={() => handleDeleteRequest(request.r_id)}\r\n                                disabled={isDeleting}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            {\r\n                createNew\r\n                    ? <div className=\"border-solid-1 border-smooth p-1 w-50 lg-w-60 med-w-80 xs-w-90 mt-5 flex flex-col align-center text-center\">\r\n                        <div className=\"w-3\">\r\n                            {renderDateElements(dates)}\r\n                            <button\r\n                                className={`btn-sm mb-2 ${dates.length === numOfDates && 'btn-hovered'}`}\r\n                                disabled={dates.length !== numOfDates}\r\n                                onClick={() => setNumOfDates(numOfDates + 1)}\r\n                            >\r\n                                <i className=\"fas fa-plus\"></i>&nbsp;Date\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 my-1\">\r\n                            <p>Notes</p>\r\n                            <textarea className=\"h-10 w-90 p-1\" onChange={({ target }) => setNotes(target.value)}></textarea>\r\n                        </div>\r\n                        <div className=\"my-2 w-50 lg-w-60 med-w-80 xs-w-90 flex justify-evenly\">\r\n                            <button className=\"btn-sm btn-hovered\" disabled={isSubmitting} onClick={() => handleCreateRequest()}>Submit</button>\r\n                            <button className=\"btn-sm btn-hovered\" disabled={isSubmitting} onClick={() => handleCancelCreateNew()}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                    : <div className=\"mt-5\">\r\n                        <button className=\"btn-lg btn-hovered\" onClick={() => setCreateNew(true)}>\r\n                            <p><i className=\"fas fa-plus\"></i> New Request</p>\r\n                        </button>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n                setRequests(requests);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {renderRequests()}\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllUsersSchedulesByDate } from '../../services/shifts';\r\nimport { startOfWeek } from 'date-fns';\r\n\r\nexport default function UserSchedules() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderBlank = (a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`border-x nowrap h-10 ${time.start_time === 'N/A' ? 'bg-black' : 'bg-x-light-gray'}`}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"border-x nowrap h-10 bg-x-light-gray\"\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let daysArray = [];\r\n            let dateToAdd = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n            for (let i = 0; i < 7; i++) {\r\n                daysArray.push(dateToAdd.toISOString());\r\n                dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n            }\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(daysArray[0], daysArray[6]);\r\n            setDays(daysArray);\r\n            setUsers(users);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"mt-5\">\r\n                        <table className=\"w-100 mt-1 border-collapse text-center\">\r\n                            <tbody>\r\n                                <tr className=\"border-bottom\">\r\n                                    <td><strong>Role</strong></td>\r\n                                    <td><strong>Name</strong></td>\r\n                                    {\r\n                                        days && days.map((day, i) => (\r\n                                            <td key={i}>\r\n                                                <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                                <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                            </td>\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                                {\r\n                                    users && users.map((user, u_i) => (\r\n                                        <tr\r\n                                            key={u_i}\r\n                                            className=\"bg-x-light-gray border-bottom\"\r\n                                        >\r\n                                            <td className=\"border-x nowrap\">{user.title}</td>\r\n                                            <td className=\"border-x nowrap\">{user.first_name} {user.last_name}</td>\r\n                                            {\r\n                                                user.availability.map((time, a_i) => (\r\n                                                    user.shifts[a_i].shift_end === null\r\n                                                        ? renderBlank(a_i, time)\r\n                                                        : renderShift(a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                                ))\r\n                                            }\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function AdminSignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.ADMIN_HOME);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                alert('Please sign in through the user portal');\r\n                history.push(ROUTES.SIGN_IN);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-center vh-80\">\r\n            <div className=\"w-100\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col flex-center\">\r\n                    <div className=\"mb-1 w-100\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3 w-100\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div>\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function ProtectedRoute({ user, component: Component, ...rest }) {\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                sessionStorage.removeItem('token');\r\n                setVerifiedUser(null);\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function UserRoute({ user, component: Component, ...rest }) {\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                sessionStorage.removeItem('token');\r\n                setVerifiedUser(null);\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import './App.css';\nimport { Suspense, useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { isAuthenticated, verifyUser } from './services/auth';\nimport { UserContext } from './contexts/userContext';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Header from './components/header';\nimport SignIn from './components/signIn';\n\nimport AdminHome from './components/admin/home';\nimport AdminEmployees from './components/admin/employees';\nimport AdminEmployee from './components/admin/employee';\nimport AdminNewEmployee from './components/admin/newEmployee';\nimport AdminSchedules from './components/admin/schedules';\nimport AdminRequests from './components/admin/requests';\nimport AdminStore from './components/admin/store';\n\nimport UserHome from './components/user/home';\nimport UserProfile from './components/user/profile';\nimport UserAvailability from './components/user/availability';\nimport UserRequests from './components/user/requests';\nimport UserSchedules from './components/user/schedules';\nimport AdminSignIn from './components/adminSignIn';\n\nimport ProtectedRoute from './helpers/protectedRoute';\nimport UserRoute from './helpers/userRoute';\n\nfunction App() {\n  const { verifiedUser, setVerifiedUser } = useContext(UserContext);\n\n  useEffect(() => {\n    async function getVerifiedUser() {\n      const tokenConfig = isAuthenticated();\n      if (tokenConfig) {\n        const verifiedUser = await verifyUser(tokenConfig);\n        setVerifiedUser(verifiedUser); // Set verified user in context for header\n      }\n    }\n\n    getVerifiedUser();\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div>\n      <Router>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path={ROUTES.SIGN_IN} component={SignIn} />\n              <Route exact path={ROUTES.ADMIN_SIGN_IN} component={AdminSignIn} />\n\n              <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_HOME} component={AdminHome} />\n              <ProtectedRoute exact user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEES} component={AdminEmployees} />\n              <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_NEW_EMPLOYEE} component={AdminNewEmployee} />\n              <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEE} component={AdminEmployee} />\n              <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_SCHEDULES} component={AdminSchedules} />\n              <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_REQUESTS} component={AdminRequests} />\n              <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_STORE} component={AdminStore} />\n\n              <UserRoute user={verifiedUser} path={ROUTES.USER_HOME} component={UserHome} />\n              <UserRoute user={verifiedUser} path={ROUTES.USER_PROFILE} component={UserProfile} />\n              <UserRoute user={verifiedUser} path={ROUTES.USER_AVAILABILITY} component={UserAvailability} />\n              <UserRoute user={verifiedUser} path={ROUTES.USER_REQUESTS} component={UserRequests} />\n              <UserRoute user={verifiedUser} path={ROUTES.USER_SCHEDULES} component={UserSchedules} />\n            </Switch>\n          </div>\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserContextProvider from './contexts/userContext';\n\nReactDOM.render(\n  <UserContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </UserContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}