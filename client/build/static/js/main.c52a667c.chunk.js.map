{"version":3,"sources":["constants/routes.js","services/auth.js","contexts/userContext.js","components/header.js","components/navbar.js","components/signIn.js","components/adminSignIn.js","services/users.js","components/admin/employees.js","services/roles.js","components/admin/employee.js","components/admin/newEmployee.js","services/presets.js","services/shifts.js","services/requests.js","services/store.js","components/admin/schedulesMobile.js","components/admin/schedules.js","components/admin/requests.js","components/admin/store.js","components/user/profile.js","components/user/editAvailability.js","components/user/availability.js","components/user/requests.js","components/user/schedules.js","helpers/protectedRoute.js","helpers/userRoute.js","helpers/authRoute.js","App.js","index.js"],"names":["SIGN_IN","ADMIN_SIGN_IN","ADMIN_EMPLOYEES","ADMIN_NEW_EMPLOYEE","ADMIN_SCHEDULES","ADMIN_REQUESTS","ADMIN_STORE","USER_SCHEDULES","USER_REQUESTS","USER_AVAILABILITY","USER_PROFILE","signIn","credentials","a","axios","post","res","data","error","response","createUser","body","tokenConfig","verifyUser","get","isAuthenticated","token","sessionStorage","getItem","headers","UserContext","createContext","UserContextProvider","children","useState","verifiedUser","setVerifiedUser","isLoading","setIsLoading","useEffect","getVerifiedUser","Provider","value","Header","useContext","history","useHistory","className","style","marginRight","first_name","marginTop","onClick","removeItem","is_admin","push","ROUTES","Navbar","dropDown","setDropDown","handleClick","window","addEventListener","removeEventListener","to","SignIn","email","setEmail","password","setPassword","setError","isInvalid","handleSignIn","e","preventDefault","user","alert","setItem","onSubmit","type","onChange","target","disabled","AdminSignIn","fetchAllUsers","fetchUser","u_id","editPassword","put","editUserGeneral","editUserInfo","fetchUserAvailability","fetchAllUsersAvailabilities","editUserAvailability","a_id","deleteUser","delete","AdminEmployees","users","setUsers","width","setWidth","handleAddEmployee","setWindowWidth","innerWidth","getUsers","color","id","map","i","backgroundColor","acn","title","last_name","phone","fetchRoles","AdminEmployee","useParams","setUser","roles","setRoles","success","setSuccess","isUpdating","setIsUpdating","setFirstName","setLastName","setPhone","role_id","setRoleId","hourly_pay","setHourlyPay","started_at","setStartedAt","showEditGeneral","setShowEditGeneral","showEditInfo","setShowEditInfo","new_password","setNewPassword","confirm_new_password","setConfirmNewPassword","handleUpdatePassword","handleUpdateUserGeneral","handleUpdateUserInfo","updated_at","Date","now","toLocaleDateString","handleRemoveUser","confirm","getData","defaultValue","parseInt","role","level","placeholder","AdminNewEmployee","isSubmitting","setIsSubmitting","handleSubmit","getRoles","fetchTimes","createPreset","fetchPresets","deletePreset","p_id","createShift","createCopyOfWeeklySchedule","clearWeeklySchedule","weekStart","weekEnd","fetchAllUsersSchedulesByDate","start_date","end_date","fetchAllUsersSchedulesByDateMobile","updateShift","s_id","deleteShift","fetchAllRequests","fetchRequestsByUser","fetchAllRequestsByStatus","status","fetchAllRequestsByStatusAndDate","updateRequestStatus","r_id","createRequest","deleteRequest","fetchStoreHours","setStoreHours","updateStoreHours","SchedulesMobile","usersMobile","days","times","presets","store","getTimeValue","handleFetchSchedule","editShiftIndex","setEditShiftIndex","dayIndex","setDayIndex","setUId","date","setDate","shiftStartValue","setShiftStartValue","shiftEndValue","setShiftEndValue","showAddShift","setShowAddShift","handleCreateShift","newDate","toDate","parseISO","startTimeHour","split","startTimeMinute","endTimeHour","endTimeMinute","shift_start","getFullYear","getMonth","getDate","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","shift_end","handleSaveShift","handleRemoveShift","handleSelectPreset","shiftValue","handleCancelAddShift","renderShift","shiftIndex","length","format","handleEditShift","toLocaleTimeString","replace","renderEditShift","preset","shift_start_value","shift_end_value","time","parseFloat","store_open_level","store_close_level","height","CSSTransition","in","timeout","classNames","unmountOnExit","label","toDateString","AdminSchedules","availabilities","setAvailabilities","setUsersMobile","requests","setRequests","setDays","setTimes","setPresets","setStore","isModifying","setIsModifying","isLoadingSchedule","setIsLoadingSchedule","startOfToday","dateISO","setDateISO","setWeekStart","setWeekEnd","setLevel","userData","setUserData","availabilityIndex","setAvailabilityIndex","getDatesOfTheWeek","selectedDate","year","month","day","startOfWeek","subMonths","weekStartsOn","daysArray","dateToAdd","toISOString","sort","b","handleCopyWeeklySchedule","shifts","j","shift","addWeeks","handleNextWeek","handleClearWeeklySchedule","formattedDate","handleSavePreset","newPresets","hour","getHours","min","getMinutes","toString","getTime","a_i","index","startStartValue","endStartValue","renderBlank","start_time","store_open_value","store_close_value","handleUserClick","RenderAvailability","availability","end_time","RenderController","subWeeks","handlePreviousWeek","request","requested_dates","r_i","RenderSchedule","u_i","getDatesAndLoadData","AdminRequests","setStatus","handleUpdateRequestStatus","handleSortRequests","getRequests","rd","rd_i","notes","requested_at","AdminStore","isSettingStoreHours","setIsSettingStoreHours","updatingId","setUpdatingId","store_open","setStoreOpen","store_close","setStoreClose","setStoreOpenValue","setStoreCloseValue","setStoreOpenLevel","setStoreCloseLevel","showEditHours","setShowEditHours","storeFirstTime","setStoreFirstTime","handleSetStoreHours","setTimeout","saveData","handleUpdateStoreHours","handleDeletePreset","handleSelectStoreOpen","handleSelectStoreClose","UserProfile","setUid","EditAvailability","dayStart","dayEnd","setDayStart","setDayEnd","UserAvailability","showEditAvailability","setShowEditAvailability","setAvailability","monStart","setMonStart","monEnd","setMonEnd","tueStart","setTueStart","tueEnd","setTueEnd","wedStart","setWedStart","wedEnd","setWedEnd","thurStart","setThurStart","thurEnd","setThurEnd","friStart","setFriStart","friEnd","setFriEnd","satStart","setSatStart","satEnd","setSatEnd","sunStart","setSunStart","sunEnd","setSunEnd","handleShowEditAvailability","handleSaveAvailability","counter","obj","newAvail","avail","UserRequests","isDeleting","setIsDeleting","createNewRequest","setCreateNewRequest","setNotes","dates","setDates","didUpdate","setDidUpdate","numOfDateInputs","setNumOfDateInputs","handleDeleteRequest","handleCreateRequest","datesArr","clearForm","handleAddDate","undefined","arrCopy","DateElement","XDateElement","splice","handleRemoveDate","renderDateElements","dateElements","UserSchedules","ProtectedRoute","Component","component","rest","render","location","pathname","state","from","UserRoute","AuthRoute","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c52a667c.chunk.js","sourcesContent":["export const SIGN_IN = '/';\r\nexport const ADMIN_SIGN_IN = '/admin'\r\n\r\nexport const ADMIN_EMPLOYEES = '/admin/employees'; // Need 'exact' for path in App.js\r\nexport const ADMIN_EMPLOYEE = '/admin/employees/:u_id';\r\nexport const ADMIN_NEW_EMPLOYEE = '/admin/employees/new';\r\nexport const ADMIN_SCHEDULES = '/admin/schedules';\r\nexport const ADMIN_REQUESTS = '/admin/requests';\r\nexport const ADMIN_STORE = '/admin/store';\r\n\r\nexport const USER_SCHEDULES = '/user/schedules';\r\nexport const USER_REQUESTS = '/user/requests';\r\nexport const USER_AVAILABILITY = '/user/availability';\r\nexport const USER_PROFILE = '/user/profile';","import axios from 'axios';\r\n\r\nexport const signIn = async (credentials) => {\r\n    try {\r\n        const res = await axios.post('/auth/signin', credentials);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createUser = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/auth/register', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const verifyUser = async (tokenConfig) => {\r\n    try {\r\n        const res = await axios.get('/auth/verify', tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response };\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        const tokenConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n        return tokenConfig;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { isAuthenticated, verifyUser } from \"../services/auth\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const useUser = () => useContext(UserContext);\r\n\r\nexport default function UserContextProvider({ children }) {\r\n  const [verifiedUser, setVerifiedUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getVerifiedUser() {\r\n      const tokenConfig = isAuthenticated();\r\n      if (tokenConfig) {\r\n        const verifiedUser = await verifyUser(tokenConfig);\r\n        setVerifiedUser(verifiedUser); // Set verified user in context for header\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n\r\n    getVerifiedUser();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ verifiedUser, setVerifiedUser }}>\r\n      {!isLoading && children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Header() {\r\n    const { verifiedUser, setVerifiedUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        sessionStorage.removeItem('token');\r\n        setVerifiedUser(null); // Remove verified user from context\r\n        if (verifiedUser.is_admin) history.push(ROUTES.ADMIN_SIGN_IN);\r\n        else history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    return (\r\n        <header className=\"bg-light-blue-darken-4\">\r\n            {\r\n                verifiedUser &&\r\n                <div className=\"flex\" style={{ marginRight: \"3%\" }}>\r\n                    <div className=\"mr-4\">\r\n                        <p className=\"off-white\">Welcome, {verifiedUser && verifiedUser.first_name}</p>\r\n                    </div>\r\n                    <div className=\"pointer-no-u\" style={{ marginTop: '2px' }} onClick={handleSignOut}>\r\n                        <p className=\"off-white\"><i className=\"fas fa-sign-out-alt text-5\"></i></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Navbar() {\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    // Navbar for large screens\r\n    const renderSideNav = () => (\r\n        <div className=\"navbar text-center bg-light-blue-darken-4\">\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_EMPLOYEES : ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Employees\" : \"Schedules\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"users\" : \"calendar-alt\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_SCHEDULES : ROUTES.USER_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Schedules\" : \"Requests\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"calendar-alt\" : \"inbox\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_REQUESTS : ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Requests\" : \"Availability\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"inbox\" : \"clock\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_STORE : ROUTES.USER_PROFILE} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Store\" : \"Profile\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-wrench\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    // Navbar for small screens\r\n    const renderDropDown = () => {\r\n        return (\r\n            <div className=\"dropdown off-white text-7 pointer\" onClick={() => setDropDown(!dropDown)}>\r\n                <i className=\"fas fa-bars\"></i>\r\n                {dropDown ? (\r\n                    <div className=\"navbar-top text-center bg-light-blue-darken-4\">\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_EMPLOYEES : ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Employees\" : \"Schedules\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_SCHEDULES : ROUTES.USER_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Schedules\" : \"Requests\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_REQUESTS : ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Requests\" : \"Availability\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_STORE : ROUTES.USER_PROFILE} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Store\" : \"Profile\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClick = () => setDropDown(!dropDown);\r\n\r\n        // Allows user to close dropdown menu when clicking elsewhere\r\n        if (dropDown) {\r\n            window.addEventListener(\"click\", handleClick);\r\n        }\r\n\r\n        return () => window.removeEventListener(\"click\", handleClick);\r\n    }, [dropDown])\r\n\r\n    if (!verifiedUser) return null;\r\n\r\n    return (\r\n        <div>\r\n            {renderDropDown()}\r\n            {renderSideNav()}\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                alert('Please sign in through the admin portal');\r\n                history.push(ROUTES.ADMIN_SIGN_IN);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.USER_SCHEDULES);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 m7-offset-3 l6-offset-4\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function AdminSignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.ADMIN_EMPLOYEES);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                alert('Please sign in through the user portal');\r\n                history.push(ROUTES.SIGN_IN);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 m7-offset-3 l6-offset-4\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get('/users');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editPassword = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/reset-pw/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserGeneral = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserInfo = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/system/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUserAvailability = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/availability/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersAvailabilities = async () => {\r\n    try {\r\n        const res = await axios.get('/users/availability/all');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserAvailability = async (a_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/availability/${a_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (u_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/users/${u_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { fetchAllUsers } from '../../services/users';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployees() {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const handleClickUser = (u_id) => {\r\n        history.push(`${ROUTES.ADMIN_EMPLOYEES}/${u_id}`);\r\n    }\r\n\r\n    const handleAddEmployee = () => {\r\n        history.push(ROUTES.ADMIN_NEW_EMPLOYEE);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    const renderEmployees = () => (\r\n        <div>\r\n            <div className=\"mt-6 mb-4 flex flex-center\">\r\n                <button className=\"btn-x-lg btn-hovered\" onClick={handleAddEmployee}>\r\n                    <p>Add Employee</p>\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <table id=\"users-list\" className=\"border-collapse w-100 text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"p-3\">Role</th>\r\n                            <th className=\"p-3\">Name</th>\r\n                            <th className=\"p-3\">Email</th>\r\n                            <th className=\"p-3\">Phone</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users && users.map((user, i) => (\r\n                                <tr\r\n                                    key={i}\r\n                                    className=\"pointer\"\r\n                                    onClick={() => handleClickUser(user.u_id)}\r\n                                    style={i % 2 === 0\r\n                                        ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                                        : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                                >\r\n                                    <td className=\"p-3\">{width < 380 ? user.acn : user.title}</td>\r\n                                    <td className=\"p-3\">{user.first_name} {user.last_name}</td>\r\n                                    <td className=\"p-3\">{user.email}</td>\r\n                                    <td className=\"p-3\">{user.phone}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const users = await fetchAllUsers();\r\n            if (users) setUsers(users);\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth); // Set default width on page load\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        renderEmployees()\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const res = await axios.get('/roles');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { editPassword, editUserGeneral, editUserInfo, fetchUser, deleteUser } from '../../services/users';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployee() {\r\n    const { u_id } = useParams();\r\n    const history = useHistory();\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n    const [showEditInfo, setShowEditInfo] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserInfo = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, hourly_pay, started_at, updated_at: new Date(Date.now()).toLocaleDateString() };\r\n\r\n        const res = await editUserInfo(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditInfo(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleRemoveUser = async () => {\r\n        const doRemove = window.confirm(\"Are you sure you want to remove this user?\");\r\n        if (doRemove) {\r\n            const tokenConfig = isAuthenticated();\r\n    \r\n            const res = await deleteUser(u_id, tokenConfig);\r\n            if (res.success) {\r\n                history.push(\"/admin/employees\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderUserInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Role</h4>\r\n                <p>{user.title}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Hourly Pay</h4>\r\n                <p>{verifiedUser.level <= user.level ? user.hourly_pay : '**'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Started At</h4>\r\n                <p>{new Date(user.started_at).toLocaleDateString()}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Updated At</h4>\r\n                <p>{user.updated_at ? new Date(user.updated_at).toLocaleDateString() : 'N/A'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button\r\n                    className={`btn-med ${verifiedUser.level > user.level ? '' : 'btn-hovered'}`}\r\n                    onClick={() => setShowEditInfo(true)}\r\n                    disabled={verifiedUser.level > user.level}\r\n                >\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>Role</p>\r\n                <select defaultValue={user.role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                    {\r\n                        roles && roles.map((role, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={role.role_id}\r\n                            >\r\n                                {role.title}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Hourly Pay</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={hourly_pay}\r\n                    onChange={({ target }) => setHourlyPay(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Started At</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={new Date(started_at).toLocaleDateString()}\r\n                    onChange={({ target }) => setStartedAt(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserInfo()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditInfo(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} className=\"\">\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(u_id);\r\n            const roles = await fetchRoles();\r\n            setUser(user);\r\n            setRoles(roles);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setRoleId(user.role_id);\r\n            setHourlyPay(user.hourly_pay);\r\n            setStartedAt(user.started_at);\r\n            setIsLoading(false);\r\n        }\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    showEditInfo\r\n                                        ? renderEditInfo()\r\n                                        : renderUserInfo()\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    verifiedUser && verifiedUser.u_id === user.u_id &&\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                        <div className=\"mt-8 text-center\">\r\n                            <button\r\n                                className=\"btn-med red btn-hovered pointer-no-u\"\r\n                                onClick={handleRemoveUser}\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport { createUser } from '../../services/auth';\r\n\r\nexport default function AdminNewEmployee() {\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const [role_id, setRoleId] = useState(6);\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, first_name, last_name, email, phone, password, hourly_pay, started_at };\r\n\r\n        const res = await createUser(body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsSubmitting(false);\r\n        } else {\r\n            setError('');\r\n            setRoleId('');\r\n            setFirstName('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setPhone('');\r\n            setPassword('');\r\n            setHourlyPay('');\r\n            setSuccess(true);\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const renderEmployeeForm = () => (\r\n        <div className=\"grid2\">\r\n            <form onSubmit={handleSubmit} className=\"xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"my-2\">\r\n                    <p>First Name</p>\r\n                    <input type=\"text\" value={first_name} className=\"form-input\" onChange={({ target }) => setFirstName(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Last Name</p>\r\n                    <input type=\"text\" value={last_name} className=\"form-input\" onChange={({ target }) => setLastName(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Email</p>\r\n                    <input type=\"email\" value={email} className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Phone</p>\r\n                    <input type=\"text\" value={phone} className=\"form-input\" onChange={({ target }) => setPhone(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Password</p>\r\n                    <input type=\"password\" value={password} className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Hourly Pay</p>\r\n                    <input type=\"text\" value={hourly_pay} className=\"form-input\" onChange={({ target }) => setHourlyPay(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Starting Date</p>\r\n                    <input type=\"date\" value={started_at} className=\"form-input\" onChange={({ target }) => setStartedAt(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Role</p>\r\n                    <select value={role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                        {\r\n                            roles && roles.map((role, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={role.role_id}\r\n                                >\r\n                                    {role.title}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"text-center mt-5\">\r\n                    <button\r\n                        className={`btn-med ${!isSubmitting && \"btn-hovered\"}`}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n                {error ? <p className=\"red mt-3\">{error}</p> : null}\r\n                {success ? <p className=\"green mt-3\">Profile successfully added!</p> : null}\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getRoles() {\r\n            const roles = await fetchRoles();\r\n            setRoles(roles);\r\n        }\r\n\r\n        getRoles();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {renderEmployeeForm()}\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchTimes = async () => {\r\n    try {\r\n        const res = await axios.get('/presets/times');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createPreset = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/presets', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchPresets = async () => {\r\n    try {\r\n        const res = await axios.get('/presets');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deletePreset = async (p_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/presets/${p_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const createShift = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/shifts', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createCopyOfWeeklySchedule = async (body) => {\r\n    try {\r\n        const res = await axios.post('/shifts/copy', body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const clearWeeklySchedule = async (weekStart, weekEnd, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/shifts/clear/${weekStart}/${weekEnd}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\n// Unused for now\r\nexport const fetchShiftsByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDateMobile = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/mobile/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateShift = async (s_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/shifts/${s_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteShift = async (s_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/shifts/${s_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllRequests = async () => {\r\n    try {\r\n        const res = await axios.get('/requests');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchRequestsByUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/requests/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatus = async (status) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatusAndDate = async (status, weekStart, weekEnd) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}/${weekStart}/${weekEnd}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateRequestStatus = async (r_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/requests/${r_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createRequest = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/requests', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async (r_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/requests/${r_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchStoreHours = async () => {\r\n    try {\r\n        const res = await axios.get('/store');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const setStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { format, toDate, parseISO } from \"date-fns\";\r\nimport { isAuthenticated } from \"../../services/auth\";\r\nimport { createShift, updateShift, deleteShift } from \"../../services/shifts\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport default function SchedulesMobile({\r\n  usersMobile,\r\n  users,\r\n  days,\r\n  times,\r\n  presets,\r\n  store,\r\n  getTimeValue,\r\n  handleFetchSchedule,\r\n}) {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [editShiftIndex, setEditShiftIndex] = useState(null);\r\n  const [dayIndex, setDayIndex] = useState(null); // For saving a shift\r\n  const [u_id, setUId] = useState(null);\r\n  const [date, setDate] = useState(\"\");\r\n  const [shiftStartValue, setShiftStartValue] = useState(\"\");\r\n  const [shiftEndValue, setShiftEndValue] = useState(\"\");\r\n  const [showAddShift, setShowAddShift] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleEditShift = (user, shiftIndex) => {\r\n    // Set specific shift time values to match with times array in the select inputs\r\n    setShiftStartValue(getTimeValue(user.shift_start));\r\n    setShiftEndValue(getTimeValue(user.shift_end));\r\n    // Enable edit shift component to render\r\n    setEditShiftIndex(shiftIndex);\r\n    // Get date to be saved when submitting\r\n    for (let i = 0; i < days.length; i++) {\r\n      // Use format for mobile, otherwise shifts will return one day after (ㆆ_ㆆ)\r\n      if (\r\n        format(new Date(user.shift_start), \"yyyy-MM-dd\") ===\r\n        days[i].split(\"T\")[0]\r\n      ) {\r\n        setDayIndex(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreateShift = async () => {\r\n    // Return error if form is not filled out\r\n    if (!u_id || !date || !shiftStartValue || !shiftEndValue) {\r\n      return setError(\"Employee and shift required\");\r\n    }\r\n\r\n    setIsUpdating(true);\r\n    const tokenConfig = isAuthenticated();\r\n    const newDate = toDate(parseISO(date));\r\n\r\n    // Get hour and minute in INT data type for date object\r\n    const startTimeHour = parseInt(shiftStartValue.split(\" \")[0]);\r\n    const startTimeMinute = parseInt(shiftStartValue.split(\" \")[1]);\r\n    // Get hour and minute in INT data type for date object\r\n    const endTimeHour = parseInt(shiftEndValue.split(\" \")[0]);\r\n    const endTimeMinute = parseInt(shiftEndValue.split(\" \")[1]);\r\n    // Create new date objects with year, month, day, hour, minute, and timezone\r\n    const shift_start = toDate(\r\n      new Date(\r\n        newDate.getFullYear(),\r\n        newDate.getMonth(),\r\n        newDate.getDate(),\r\n        startTimeHour,\r\n        startTimeMinute\r\n      )\r\n    ).toLocaleString(\"en-US\", {\r\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    }); // Local timezone\r\n\r\n    const shift_end = toDate(\r\n      new Date(\r\n        newDate.getFullYear(),\r\n        newDate.getMonth(),\r\n        newDate.getDate(),\r\n        endTimeHour,\r\n        endTimeMinute\r\n      )\r\n    ).toLocaleString(\"en-US\", {\r\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    });\r\n\r\n    const body = { u_id, shift_start, shift_end };\r\n    await createShift(body, tokenConfig);\r\n\r\n    await handleFetchSchedule();\r\n\r\n    setEditShiftIndex(null);\r\n    setIsUpdating(false);\r\n    setShowAddShift(false);\r\n  };\r\n\r\n  const handleSaveShift = async (u_id, s_id) => {\r\n    setIsUpdating(true);\r\n    const tokenConfig = isAuthenticated();\r\n    // Get shift date\r\n    const date = toDate(new Date(days[dayIndex]));\r\n\r\n    // Get hour and minute in INT data type for date object\r\n    const startTimeHour = parseInt(shiftStartValue.split(\" \")[0]);\r\n    const startTimeMinute = parseInt(shiftStartValue.split(\" \")[1]);\r\n    // Get hour and minute in INT data type for date object\r\n    const endTimeHour = parseInt(shiftEndValue.split(\" \")[0]);\r\n    const endTimeMinute = parseInt(shiftEndValue.split(\" \")[1]);\r\n    // Create new date objects with year, month, day, hour, minute, and timezone\r\n    const shift_start = toDate(\r\n      new Date(\r\n        date.getFullYear(),\r\n        date.getMonth(),\r\n        date.getDate(),\r\n        startTimeHour,\r\n        startTimeMinute\r\n      )\r\n    ).toLocaleString(\"en-US\", {\r\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    }); // Local timezone\r\n\r\n    const shift_end = toDate(\r\n      new Date(\r\n        date.getFullYear(),\r\n        date.getMonth(),\r\n        date.getDate(),\r\n        endTimeHour,\r\n        endTimeMinute\r\n      )\r\n    ).toLocaleString(\"en-US\", {\r\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    });\r\n\r\n    const body = { u_id, shift_start, shift_end };\r\n    await updateShift(s_id, body, tokenConfig);\r\n\r\n    await handleFetchSchedule();\r\n\r\n    setEditShiftIndex(null);\r\n    setIsUpdating(false);\r\n  };\r\n\r\n  const handleRemoveShift = async (s_id) => {\r\n    const toDelete = window.confirm(\r\n      \"Are you sure you want to remove this shift?\"\r\n    );\r\n    if (toDelete) {\r\n      const tokenConfig = isAuthenticated();\r\n      setIsUpdating(true);\r\n      await deleteShift(s_id, tokenConfig);\r\n\r\n      await handleFetchSchedule();\r\n      setEditShiftIndex(null);\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectPreset = (shiftValue) => {\r\n    if (!shiftValue) return;\r\n    setShiftStartValue(shiftValue.split(\"-\")[0]);\r\n    setShiftEndValue(shiftValue.split(\"-\")[1]);\r\n  };\r\n\r\n  const handleCancelAddShift = () => {\r\n    setShiftStartValue(\"\");\r\n    setShiftEndValue(\"\");\r\n    setUId(\"\");\r\n    setError(\"\");\r\n    setShowAddShift(false);\r\n  };\r\n\r\n  const renderShift = (user, shiftIndex) => (\r\n    <div className=\"p-1\" onClick={() => handleEditShift(user, shiftIndex)}>\r\n      <p>\r\n        {new Date(user.shift_start).toLocaleTimeString().replace(\":00 \", \" \")}{\" \"}\r\n        -&nbsp;\r\n        {new Date(user.shift_end).toLocaleTimeString().replace(\":00 \", \" \")}\r\n      </p>\r\n      <p>\r\n        <strong>\r\n          {user.first_name} {user.last_name}\r\n        </strong>\r\n      </p>\r\n      <p>\r\n        <em>{user.title}</em>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  const renderEditShift = (user) => (\r\n    <div className=\"bg-blue-grey-lighten-5 p-1\">\r\n      <div className=\"flex justify-evenly\">\r\n        <div className=\"flex flex-col flex-center text-center\">\r\n          <p className=\"schedules-mobile-text\">\r\n            <strong>\r\n              {user.first_name} {user.last_name}\r\n            </strong>\r\n          </p>\r\n          <p className=\"schedules-mobile-text\">\r\n            <em>{user.title}</em>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <div className=\"flex justify-evenly mb-1\">\r\n            <p className=\"mr-1 schedules-mobile-text\">Preset</p>\r\n            <select\r\n              defaultValue=\"0 0\"\r\n              disabled={isUpdating}\r\n              onChange={({ target }) => handleSelectPreset(target.value)}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              {presets &&\r\n                presets.map((preset, i) => (\r\n                  <option\r\n                    key={i}\r\n                    value={`${preset.shift_start_value}-${preset.shift_end_value}`}\r\n                  >\r\n                    {preset.shift_start} - {preset.shift_end}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex justify-evenly mb-1\">\r\n            <p className=\"mr-1 schedules-mobile-text\">Start</p>\r\n            <select\r\n              value={shiftStartValue}\r\n              disabled={isUpdating}\r\n              onChange={({ target }) => setShiftStartValue(target.value)}\r\n            >\r\n              {times &&\r\n                times.map((time, i) => (\r\n                  <option\r\n                    key={i}\r\n                    value={time.value}\r\n                    disabled={\r\n                      time.level < parseFloat(store.store_open_level) ||\r\n                      time.level > parseFloat(store.store_close_level)\r\n                    }\r\n                  >\r\n                    {time.time}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex justify-evenly mb-1\">\r\n            <p className=\"mr-1 schedules-mobile-text\">End</p>\r\n            <select\r\n              value={shiftEndValue}\r\n              disabled={isUpdating}\r\n              onChange={({ target }) => setShiftEndValue(target.value)}\r\n            >\r\n              {times &&\r\n                times.map((time, i) => (\r\n                  <option\r\n                    key={i}\r\n                    value={time.value}\r\n                    disabled={\r\n                      time.level < parseFloat(store.store_open_level) ||\r\n                      time.level > parseFloat(store.store_close_level)\r\n                    }\r\n                  >\r\n                    {time.time}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isUpdating ? (\r\n        <div className=\"my-1 text-center\">\r\n          <Loader type=\"ThreeDots\" color=\"rgb(50, 110, 150)\" height={12} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"w-100 flex justify-evenly\">\r\n          <div\r\n            className=\"py-1 w-100 text-center pointer hovered border-solid-1 bg-white\"\r\n            onClick={() => handleSaveShift(user.u_id, user.s_id)}\r\n          >\r\n            <i className=\"fas fa-check\"></i>\r\n          </div>\r\n          <div\r\n            className=\"py-1 w-100 text-center pointer hovered border-solid-1 bg-white\"\r\n            onClick={() => handleRemoveShift(user.s_id)}\r\n          >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n          </div>\r\n          <div\r\n            className=\"py-1 w-100 text-center pointer hovered border-solid-1 bg-white\"\r\n            onClick={() => setEditShiftIndex(null)}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderAddShift = () => (\r\n    <>\r\n      <CSSTransition\r\n        in={showAddShift}\r\n        timeout={300}\r\n        classNames=\"modal-fade\"\r\n        unmountOnExit\r\n      >\r\n        <div>\r\n          <div // Dimmed overlay with active modal\r\n            className=\"modal-container\"\r\n            onClick={() => setShowAddShift(false)}\r\n          ></div>\r\n          <div className=\"modal\">\r\n            <div className=\"p-3\">\r\n              <div className=\"flex my-2\">\r\n                <p className=\"mr-1 schedules-mobile-text\">Date</p>\r\n                <input\r\n                  type=\"date\"\r\n                  onChange={({ target }) => setDate(target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"flex my-2\">\r\n                <p className=\"mr-1 schedules-mobile-text\">Employee</p>\r\n                <select onChange={({ target }) => setUId(target.value)}>\r\n                  <option value=\"\">Select...</option>\r\n                  {users.map((user, i) => (\r\n                    <option key={i} value={user.u_id}>\r\n                      {user.first_name} {user.last_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"flex my-2\">\r\n                <p className=\"mr-1 schedules-mobile-text\">Preset</p>\r\n                <select\r\n                  defaultValue=\"0 0\"\r\n                  disabled={isUpdating}\r\n                  onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {presets &&\r\n                    presets.map((preset, i) => (\r\n                      <option\r\n                        key={i}\r\n                        value={`${preset.shift_start_value}-${preset.shift_end_value}`}\r\n                      >\r\n                        {preset.shift_start} - {preset.shift_end}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"flex my-2\">\r\n                <p className=\"mr-1 schedules-mobile-text\">Start</p>\r\n                <select\r\n                  value={shiftStartValue}\r\n                  disabled={isUpdating}\r\n                  onChange={({ target }) => setShiftStartValue(target.value)}\r\n                >\r\n                  {times &&\r\n                    times.map((time, i) => (\r\n                      <option\r\n                        key={i}\r\n                        value={time.value}\r\n                        disabled={\r\n                          time.level < parseFloat(store.store_open_level) ||\r\n                          time.level > parseFloat(store.store_close_level)\r\n                        }\r\n                      >\r\n                        {time.time}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"flex my-2\">\r\n                <p className=\"mr-1 schedules-mobile-text\">End</p>\r\n                <select\r\n                  value={shiftEndValue}\r\n                  disabled={isUpdating}\r\n                  onChange={({ target }) => setShiftEndValue(target.value)}\r\n                >\r\n                  {times &&\r\n                    times.map((time, i) => (\r\n                      <option\r\n                        key={i}\r\n                        value={time.value}\r\n                        disabled={\r\n                          time.level < parseFloat(store.store_open_level) ||\r\n                          time.level > parseFloat(store.store_close_level)\r\n                        }\r\n                      >\r\n                        {time.time}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              {error && <p className=\"red schedules-mobile-text\">{error}</p>}\r\n              <div className=\"mt-1\">\r\n                <button\r\n                  className=\"btn-med hovered m-1 bg-white\"\r\n                  onClick={() => handleCreateShift(u_id)}\r\n                >\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"btn-med hovered m-1 bg-white\"\r\n                  onClick={handleCancelAddShift}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n      {!showAddShift && (\r\n        // Hide add button when modal is active\r\n        <div\r\n          className=\"add-shift-btn flex flex-center pointer\"\r\n          onClick={() => setShowAddShift(true)}\r\n        >\r\n          <p className=\"white text-7\">\r\n            <i className=\"fas fa-plus\" />\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"schedules-mobile\">\r\n      {renderAddShift()}\r\n      {usersMobile.map((user, i) => (\r\n        <div key={i}>\r\n          {user.label ? (\r\n            <div className=\"w-100 border-x bg-x-light-gray text-center\">\r\n              <p>\r\n                <strong>{format(new Date(user.shift_start), \"PP\")}</strong>\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex\">\r\n              <div\r\n                className=\"flex flex-col flex-center border-solid-1 p-1\"\r\n                style={{ width: \"20%\" }}\r\n              >\r\n                <p>\r\n                  <strong>\r\n                    {new Date(user.shift_start).toDateString().split(\" \")[0]}\r\n                  </strong>\r\n                </p>\r\n                <p>\r\n                  <strong>\r\n                    {new Date(user.shift_start).toDateString().split(\" \")[2]}\r\n                  </strong>\r\n                </p>\r\n              </div>\r\n              <div className=\"w-80 border-solid-1\">\r\n                {editShiftIndex === i\r\n                  ? renderEditShift(user)\r\n                  : renderShift(user, i)}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { createPreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { createShift, fetchAllUsersSchedulesByDate, fetchAllUsersSchedulesByDateMobile, deleteShift, updateShift, createCopyOfWeeklySchedule, clearWeeklySchedule } from '../../services/shifts';\r\nimport { fetchAllUsersAvailabilities } from '../../services/users';\r\nimport { startOfToday, startOfWeek, addWeeks, subWeeks, subMonths, parseISO, format, toDate } from 'date-fns';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllRequestsByStatusAndDate } from '../../services/requests';\r\nimport { fetchStoreHours } from '../../services/store';\r\nimport SchedulesMobile from './schedulesMobile';\r\n\r\nexport default function AdminSchedules() {\r\n    const [availabilities, setAvailabilities] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    const [usersMobile, setUsersMobile] = useState(null);\r\n    const [requests, setRequests] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isModifying, setIsModifying] = useState(false);\r\n    const [isLoadingSchedule, setIsLoadingSchedule] = useState(true);\r\n\r\n    // Used for datepicker\r\n    const [dateISO, setDateISO] = useState(format(startOfToday(), \"yyyy-MM-dd\"))\r\n    // Used for fetching data within dates in ISO string\r\n    const [weekStart, setWeekStart] = useState('');\r\n    const [weekEnd, setWeekEnd] = useState('');\r\n    // Used for getting time values when saving a shift\r\n    const [shift_start_value, setShiftStartValue] = useState('0 0');\r\n    const [shift_end_value, setShiftEndValue] = useState('0 0');\r\n    const [level, setLevel] = useState('');\r\n    // Used to render edit shift mode for selected date and employee only\r\n    const [userData, setUserData] = useState(null);\r\n    const [availabilityIndex, setAvailabilityIndex] = useState(null);\r\n\r\n    // For init load and datepicker\r\n    const getDatesOfTheWeek = async (selectedDate) => {\r\n        setIsLoadingSchedule(true);\r\n        let date;\r\n        if (selectedDate) {\r\n            // Create new date with separate identifiers because it is inaccurate for Mondays\r\n            let year = selectedDate.split(\"-\")[0];\r\n            let month = selectedDate.split(\"-\")[1];\r\n            let day = selectedDate.split(\"-\")[2];\r\n            // Subtract one month because they are counted from zero\r\n            // i.e. \"2022-02-18\" is considered March\r\n            date = startOfWeek(subMonths(new Date(year, month, day), 1), { weekStartsOn: 1 });\r\n            setDateISO(selectedDate); // For datepicker value\r\n        }\r\n        else {\r\n            date = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n        }\r\n\r\n        let daysArray = [];\r\n        let dateToAdd = date;\r\n        // Get dates in current work week\r\n        for (let i = 0; i < 7; i++) {\r\n            daysArray.push(dateToAdd.toISOString());\r\n            dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n        }\r\n\r\n        const weekStart = daysArray[0];\r\n        const weekEnd = daysArray[6];\r\n\r\n        setDays(daysArray);\r\n        setWeekStart(weekStart);\r\n        setWeekEnd(weekEnd);\r\n\r\n        // Refresh schedules after date change\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n        const requests = await fetchAllRequestsByStatusAndDate('Approved', weekStart, weekEnd);\r\n\r\n        // Add date labels for mobile schedules display\r\n        for (let i = 0; i < daysArray.length; i++) {\r\n            usersMobile.push({ shift_start: daysArray[i], label: true });\r\n        }\r\n        usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n        \r\n        setUsers(users);\r\n        setUsersMobile(usersMobile);\r\n        setRequests(requests);\r\n        setIsLoadingSchedule(false);\r\n    }\r\n\r\n    // Can create or update shift based on s_id being provided\r\n    const handleSaveShift = async (u_id, dayIndex, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = new Date(days[dayIndex]);\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shift_start_value.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shift_start_value.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shift_end_value.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shift_end_value.split(' ')[1]);\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }); // Local timezone\r\n\r\n        const shift_end = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        await handleFetchSchedule();\r\n\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleCopyWeeklySchedule = async () => {\r\n        const doCopy = window.confirm('Copy schedule to next week? Any shifts already saved will be overwritten.');\r\n        if (doCopy) {\r\n            setIsModifying(true);\r\n            setIsLoadingSchedule(true);\r\n\r\n            let shifts = [];\r\n            // Copy shifts in work week for all users\r\n            for (let i = 0; i < users.length; i++) {\r\n                for (let j = 0; j < users[i].shifts.length; j++) {\r\n                    if (users[i].shifts[j].shift_end !== null) {\r\n                        let shift = {\r\n                            u_id: users[i].u_id,\r\n                            shift_start: format(addWeeks(parseISO(users[i].shifts[j].shift_start), 1), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                            shift_end: format(addWeeks(parseISO(users[i].shifts[j].shift_end), 1), \"yyyy-MM-dd'T'HH:mm:ss\")\r\n                        }\r\n                        shifts.push(shift);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = {\r\n                shifts,\r\n                weekStart: addWeeks(parseISO(weekStart), 1),\r\n                weekEnd: addWeeks(parseISO(weekEnd), 1)\r\n            };\r\n\r\n            await createCopyOfWeeklySchedule(body);\r\n            await handleFetchSchedule();\r\n            // Display following week after copying schedule\r\n            handleNextWeek();\r\n            setIsModifying(false);\r\n        }\r\n    }\r\n\r\n    const handleClearWeeklySchedule = async () => {\r\n        const doClear = window.confirm(\"Clear all shifts for this week?\");\r\n        if (doClear) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsModifying(true);\r\n            setIsLoadingSchedule(true);\r\n            \r\n            await clearWeeklySchedule(weekStart, weekEnd, tokenConfig);\r\n            await handleFetchSchedule();\r\n\r\n            setIsModifying(false);\r\n            setIsLoadingSchedule(false);\r\n        }\r\n    }\r\n\r\n    // Refresh schedule after any changes are made\r\n    const handleFetchSchedule = async () => {\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n\r\n        if (usersMobile.length) {\r\n            // Add date labels for mobile schedules display\r\n            for (let i = 0; i < days.length; i++) {\r\n                usersMobile.push({ shift_start: days[i], label: true });\r\n            }\r\n            usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start));\r\n        }\r\n\r\n        setUsers(users);\r\n        setUsersMobile(usersMobile);\r\n    }\r\n\r\n    const handleCancelShift = () => {\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    // Render edit shift (new)\r\n    const handleUserClick = (u_id, index) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(store.store_open_value);\r\n        setShiftEndValue(store.store_close_value);\r\n    }\r\n\r\n    // Render edit shift (update)\r\n    const handleEditShift = (u_id, index, startStartValue, endStartValue) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(startStartValue);\r\n        setShiftEndValue(endStartValue);\r\n        setLevel(level);\r\n    }\r\n\r\n    const handlePreviousWeek = () => {\r\n        // New Date object will adjust hours based on timezone so use toDate\r\n        let date = subWeeks(toDate(parseISO((dateISO))), 1);\r\n        // Format date so date selector can read it\r\n        let formattedDate = format(date, \"yyyy-MM-dd\");\r\n        setDateISO(formattedDate);\r\n        getDatesOfTheWeek(formattedDate);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleNextWeek = () => {\r\n        let date = addWeeks(toDate(parseISO((dateISO))), 1);\r\n        let formattedDate = format(date, \"yyyy-MM-dd\");\r\n        setDateISO(formattedDate);\r\n        getDatesOfTheWeek(formattedDate);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleSavePreset = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        let level;\r\n        let shift_start;\r\n        let shift_end;\r\n        for (let i = 0; i < presets.length; i++) {\r\n            if (shift_start_value === presets[i].shift_start_value\r\n                && shift_end_value === presets[i].shift_end_value) {\r\n                alert('Preset already saved');\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (shift_start_value === times[i].value) {\r\n                // Assign only start time level for sorting when displayed in the list\r\n                level = times[i].level;\r\n                shift_start = times[i].time;\r\n            }\r\n            if (shift_end_value === times[i].value) {\r\n                shift_end = times[i].time;\r\n            }\r\n        }\r\n\r\n        const body = { shift_start, shift_end, shift_start_value, shift_end_value, level };\r\n        await createPreset(body, tokenConfig);\r\n\r\n        const newPresets = await fetchPresets();\r\n        setPresets(newPresets);\r\n\r\n        alert('Preset saved')\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            await handleFetchSchedule();\r\n            setUserData('');\r\n            setAvailabilityIndex('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const getTimeValue = (shift) => {\r\n        const date = new Date(shift);\r\n        const hour = date.getHours();\r\n        const min = date.getMinutes();\r\n        const values = `${hour.toString()} ${min.toString()}`\r\n        return values;\r\n    }\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderShift = (u_id, a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"pointer schedules-text bg-blue-lighten-4\"\r\n            onClick={() => handleEditShift(u_id, a_i, getTimeValue(shift_start), getTimeValue(shift_end))}\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderBlank = (u_id, a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`pointer ${time.start_time === 'N/A' ? 'bg-black' : 'hovered'}`}\r\n            onClick={() => handleUserClick(u_id, a_i)}\r\n        ></td>\r\n    )\r\n\r\n    const renderEditShift = (u_id, dayIndex, shift) => (\r\n        <td key={dayIndex} className=\"bg-blue-grey-lighten-5\">\r\n            <div className=\"flex justify-evenly mt-1\">\r\n                <p>Preset</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    defaultValue='0 0'\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        presets && presets.map((preset, i) => (\r\n                            <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <hr className=\"my-1\" />\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p>Start</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_start_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"mr-1\">End</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_end_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"my-2 w-100 flex justify-evenly\">\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => handleSaveShift(u_id, dayIndex, shift.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check schedules-text\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => handleSavePreset()}\r\n                        >\r\n                            <i className=\"fas fa-star schedules-text\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => shift.s_id ? handleRemoveShift(shift.s_id) : handleCancelShift()}\r\n                        >\r\n                            {\r\n                                shift.shift_end === null\r\n                                    ? <i className=\"fas fa-times schedules-text\"></i>\r\n                                    : <i className=\"fas fa-trash-alt schedules-text\"></i>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </td>\r\n    )\r\n\r\n    const RenderAvailability = () => (\r\n        <div className=\"availability\">\r\n            <h3 className=\"text-center\">Availability</h3>\r\n            <table className=\"border-collapse w-100 text-center schedules-text\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        {\r\n                            // Render the day only\r\n                            days && days.map((day, i) => (\r\n                                <th key={i}>\r\n                                    <p>{new Date(day).toString().split(' ')[0]}</p>\r\n                                </th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        availabilities && availabilities.map((user, i) => (\r\n                            <tr\r\n                                key={i}\r\n                                style={i % 2 === 0\r\n                                    ? { backgroundColor: 'rgb(235, 235, 235)' }\r\n                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                            >\r\n                                <td>\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.level === 2 ? \"A. Manager\" : user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, i) => (\r\n                                        <td key={i} className={`${time.start_time === 'N/A' && 'bg-black'}`}>\r\n                                            {(time.start_time === 'ANY' && time.end_time === 'ANY') ? 'ANY' : `${time.start_time} - ${time.end_time}`}\r\n                                        </td>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n    const RenderController = () => (\r\n        <div className=\"schedules-controller\">\r\n            <div className=\"select-week\">\r\n                <div className=\"pointer\" onClick={() => handlePreviousWeek()}>\r\n                    <em className=\"text-3\">Prev&nbsp;week</em>\r\n                    <p>\r\n                        <i className=\"fas fa-angle-double-left\"></i>\r\n                    </p>\r\n                </div>\r\n                <div id=\"controller-date\" className=\"relative\">\r\n                    <input\r\n                        type=\"date\"\r\n                        className=\"border-solid-1 border-smooth\"\r\n                        value={dateISO} // Datepicker must be yyyy-mm-dd format\r\n                        onChange={({ target }) => getDatesOfTheWeek(target.value)}\r\n                    />\r\n                    <div className=\"absolute\">&nbsp;</div>\r\n                </div>\r\n                <div className=\"pointer\" onClick={() => handleNextWeek()}>\r\n                    <em className=\"text-3\">Next&nbsp;week</em>\r\n                    <p>\r\n                        <i className=\"fas fa-angle-double-right\"></i>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"schedules-requests\">\r\n                <div className=\"mx-3\">\r\n                    <p className=\"text-3\">\r\n                        <strong>Approved Requests</strong>\r\n                    </p>\r\n                    {\r\n                        requests.length \r\n                            ? requests.map((request, i) => (\r\n                                <div key={i}>\r\n                                    <p className=\"schedules-text\">\r\n                                        {request.first_name} {request.last_name}:\r\n                                        {request.requested_dates.map((date, r_i) => (\r\n                                            <span key={r_i}>\r\n                                                &nbsp;\r\n                                                {\r\n                                                    r_i === request.requested_dates.length - 1\r\n                                                        ? new Date(date).toLocaleDateString()\r\n                                                        : `${new Date(date).toLocaleDateString()},`\r\n                                                }\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                </div>\r\n                            ))\r\n                            : <p className=\"text-3\">None</p>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className={`controller-btn ${!isModifying && 'btn-hovered'}`}\r\n                        onClick={handleCopyWeeklySchedule}\r\n                        disabled={isModifying}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button\r\n                        className={`controller-btn ${!isModifying && 'btn-hovered'}`}\r\n                        onClick={handleClearWeeklySchedule}\r\n                        disabled={isModifying}\r\n                    >\r\n                        Clear\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const RenderSchedule = () => (\r\n        isLoadingSchedule ? (\r\n            <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                <Loader\r\n                    type='Oval'\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            </div>\r\n        ) : (\r\n            <table className=\"schedules-table w-100 border-collapse text-center table-fixed schedules-text\">\r\n                <tbody>\r\n                        <tr>\r\n                            <td className=\"bg-x-light-gray\">\r\n                                <strong>Name</strong>\r\n                            </td>\r\n                            {\r\n                                days && days.map((day, i) => (\r\n                                    <td key={i} className=\"bg-x-light-gray\">\r\n                                        <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                        <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                    </td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            users && users.map((user, u_i) => (\r\n                                <tr key={u_i}>\r\n                                    <td className=\"py-1\">\r\n                                        <p>\r\n                                            <strong>{user.first_name} {user.last_name}</strong>\r\n                                        </p>\r\n                                        <em>{user.level === 2 ? \"A. Manager\" : user.title}</em>\r\n                                    </td>\r\n                                    {\r\n                                        user.availability.map((time, a_i) => (\r\n                                            // Only render edit mode for the selected date and employee\r\n                                            (userData === user.u_id && availabilityIndex === a_i)\r\n                                                ? renderEditShift(user.u_id, a_i, user.shifts[a_i])\r\n                                                // Render shifts if they exist during the selected week\r\n                                                : user.shifts[a_i].shift_end === null\r\n                                                    ? renderBlank(user.u_id, a_i, time)\r\n                                                    : renderShift(user.u_id, a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        )\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getDatesAndLoadData() {\r\n            const times = await fetchTimes();\r\n            const availabilities = await fetchAllUsersAvailabilities();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n            await getDatesOfTheWeek();\r\n\r\n            setTimes(times);\r\n            setAvailabilities(availabilities);\r\n            setPresets(presets);\r\n            setStore(store);\r\n            setShiftStartValue(store.store_open_value);\r\n            setShiftEndValue(store.store_close_value);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getDatesAndLoadData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <RenderController />\r\n                        <RenderSchedule />\r\n                        <RenderAvailability />\r\n                        <SchedulesMobile\r\n                            usersMobile={usersMobile}\r\n                            users={users}\r\n                            days={days}\r\n                            times={times}\r\n                            store={store}\r\n                            presets={presets}\r\n                            getTime={getTime}\r\n                            getTimeValue={getTimeValue}\r\n                            handleFetchSchedule={handleFetchSchedule}\r\n                        />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { fetchAllRequestsByStatus, fetchAllRequests, updateRequestStatus } from '../../services/requests';\r\nimport Loader from 'react-loader-spinner';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function AdminRequests() {\r\n    const [requests, setRequests] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [status, setStatus] = useState('All');\r\n\r\n    const handleUpdateRequestStatus = async (r_id, status) => {\r\n        const update = window.confirm('Confirm decision?');\r\n        if (update) {\r\n            setIsUpdating(true);\r\n            const tokenConfig = isAuthenticated();\r\n            const body = { status };\r\n\r\n            await updateRequestStatus(r_id, body, tokenConfig);\r\n            const requests = await fetchAllRequests();\r\n\r\n            setRequests(requests);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSortRequests = async (status) => {\r\n        setIsLoading(true);\r\n        if (status === 'All') {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        } else {\r\n            const requests = await fetchAllRequestsByStatus(status);\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const renderFilters = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <p className=\"mb-2\">View by</p>\r\n            <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 grid2\">\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'All' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('All')}\r\n                >\r\n                    All\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Pending' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Pending')}\r\n                >\r\n                    Pending\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Approved' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Approved')}\r\n                >\r\n                    Approved\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Denied' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Denied')}\r\n                >\r\n                    Denied\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        <table className=\"border-collapse w-100 requests-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"p-2 border-solid-1\">Name</th>\r\n                    <th className=\"p-2 border-solid-1\">Requested Dates</th>\r\n                    <th className=\"p-2 border-solid-1\">Notes</th>\r\n                    <th className=\"p-2 border-solid-1\">Submission Date</th>\r\n                    <th className=\"p-2 border-solid-1\">Status</th>\r\n                    <th className=\"p-2 border-solid-1\">Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {requests.map((request, i) => (\r\n                    <tr\r\n                        key={i}\r\n                        style={i % 2 === 0\r\n                        ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                        : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                    >\r\n                        <td className=\"py-1 px-2\">\r\n                            {request.first_name} {request.last_name} <br />\r\n                            <em className=\"text-3\">{request.title}</em>\r\n                        </td>\r\n                        <td className=\"py-1 px-2\">{request.requested_dates.map((rd, rd_i) => (\r\n                            <span key={rd_i}>\r\n                                {\r\n                                // Add commas if more than one date\r\n                                rd_i === request.requested_dates.length - 1\r\n                                    ? format(new Date(rd), \"MM-dd-yyyy\")\r\n                                    : `${format(new Date(rd), \"MM-dd-yyyy\")}, `\r\n                                }\r\n                            </span>\r\n                        ))}</td>\r\n                        <td className=\"py-1 px-2\">{request.notes}</td>\r\n                        <td className=\"py-1 px-2 text-center\">{format(new Date(request.requested_at), \"MM-dd-yyyy\")}</td>\r\n                        <td className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue py-1 px-2 text-center'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green py-1 px-2 text-center'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red py-1 px-2 text-center'\r\n                                                : ''}>\r\n                            {request.status}\r\n                            </td>\r\n                        <td className=\"py-1 px-2 text-center\">\r\n                            <button\r\n                                className={`btn-sm my-1 mx-2 ${!isUpdating && 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Approve\r\n                            </button>\r\n                            <button\r\n                                className={`btn-sm my-1 ${!isUpdating && 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Deny\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n    const renderRequestsCards = () => (\r\n        <div className=\"grid2\">\r\n            {requests.length ? requests.map((request, r_i) => (\r\n                    <div key={r_i} className=\"my-2 p-1 border-solid-1 border-smooth box-shadow flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                        <div className=\"my-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                        <div className=\"w-100 grid2\">\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>{request.first_name} {request.last_name}</strong>\r\n                                <p>{request.title}</p>\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Requested dates</strong>\r\n                                {\r\n                                    request.requested_dates.map((rd, rd_i) => (\r\n                                        <p key={rd_i}>\r\n                                            {\r\n                                                // Add commas if more than one date\r\n                                                rd_i === request.requested_dates.length - 1\r\n                                                    ? new Date(rd).toDateString()\r\n                                                    : `${new Date(rd).toDateString()},`\r\n                                            }\r\n                                        </p>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Submission date</strong>\r\n                                <p>{new Date(request.requested_at).toDateString()}</p>\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Notes</strong>\r\n                                <p>{request.notes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Approve\r\n                            </button>\r\n                            <button\r\n                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Deny\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                    : (\r\n                        <p className=\"l2-offset-5 text-center mt-3\">\r\n                            None\r\n                        </p>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getRequests() {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getRequests();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"mt-4 mx-1\">\r\n            {renderFilters()}\r\n            {isLoading ? (\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"mt-5\">\r\n                        {renderRequests()}\r\n                        <div className=\"requests-cards\">\r\n                            {renderRequestsCards()}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n  fetchStoreHours,\r\n  setStoreHours,\r\n  updateStoreHours,\r\n} from \"../../services/store\";\r\nimport { deletePreset, fetchPresets, fetchTimes } from \"../../services/presets\";\r\nimport { isAuthenticated } from \"../../services/auth\";\r\n\r\nexport default function AdminStore() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [times, setTimes] = useState(null);\r\n  const [presets, setPresets] = useState(null);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [isSettingStoreHours, setIsSettingStoreHours] = useState(false);\r\n  const [updatingId, setUpdatingId] = useState(\"\");\r\n\r\n  const [store_open, setStoreOpen] = useState(\"\");\r\n  const [store_close, setStoreClose] = useState(\"\");\r\n  const [store_open_value, setStoreOpenValue] = useState(\"\");\r\n  const [store_close_value, setStoreCloseValue] = useState(\"\");\r\n  const [store_open_level, setStoreOpenLevel] = useState(\"\");\r\n  const [store_close_level, setStoreCloseLevel] = useState(\"\");\r\n  const [showEditHours, setShowEditHours] = useState(false);\r\n  const [storeFirstTime, setStoreFirstTime] = useState(null);\r\n\r\n  const handleSetStoreHours = async () => {\r\n    const tokenConfig = isAuthenticated();\r\n    setIsSettingStoreHours(true);\r\n\r\n    setTimeout(() => {\r\n      async function saveData() {\r\n        const body = {\r\n          store_open,\r\n          store_close,\r\n          store_open_value,\r\n          store_close_value,\r\n          store_open_level,\r\n          store_close_level,\r\n        };\r\n\r\n        await setStoreHours(body, tokenConfig);\r\n        await fetchStoreHours();\r\n        setIsSettingStoreHours(false);\r\n        setShowEditHours(false);\r\n      }\r\n\r\n      saveData();\r\n    }, 700);\r\n  };\r\n\r\n  const handleUpdateStoreHours = async () => {\r\n    const tokenConfig = isAuthenticated();\r\n    setIsSettingStoreHours(true);\r\n\r\n    setTimeout(() => {\r\n      async function saveData() {\r\n        const body = {\r\n          store_open,\r\n          store_close,\r\n          store_open_value,\r\n          store_close_value,\r\n          store_open_level,\r\n          store_close_level,\r\n        };\r\n\r\n        await updateStoreHours(body, tokenConfig);\r\n        await fetchStoreHours();\r\n        setIsSettingStoreHours(false);\r\n        setShowEditHours(false);\r\n      }\r\n\r\n      saveData();\r\n    }, 700);\r\n  };\r\n\r\n  const handleSelectStoreOpen = (store_open) => {\r\n    for (let i = 0; i < times.length; i++) {\r\n      if (times[i].time === store_open) {\r\n        setStoreOpen(times[i].time);\r\n        setStoreOpenValue(times[i].value);\r\n        setStoreOpenLevel(parseFloat(times[i].level));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectStoreClose = (store_close) => {\r\n    for (let i = 0; i < times.length; i++) {\r\n      if (times[i].time === store_close) {\r\n        setStoreClose(times[i].time);\r\n        setStoreCloseValue(times[i].value);\r\n        setStoreCloseLevel(parseFloat(times[i].level));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeletePreset = async (p_id) => {\r\n    const doDelete = window.confirm(\"Delete preset?\");\r\n    if (doDelete) {\r\n      setIsUpdating(true);\r\n      setUpdatingId(p_id);\r\n\r\n      const tokenConfig = isAuthenticated();\r\n      await deletePreset(p_id, tokenConfig);\r\n      const presets = await fetchPresets();\r\n\r\n      setPresets(presets);\r\n      setIsUpdating(false);\r\n      setUpdatingId(\"\");\r\n    }\r\n  };\r\n\r\n  const renderStoreHours = () => (\r\n    <>\r\n      <div className=\"my-1\">\r\n        <p>Open</p>\r\n        <select\r\n          value={store_open}\r\n          onChange={({ target }) => handleSelectStoreOpen(target.value)}\r\n        >\r\n          {times &&\r\n            times.map((time, i) => (\r\n              <option key={i} value={time.time}>\r\n                {time.time}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"my-1\">\r\n        <p>Close</p>\r\n        <select\r\n          value={store_close}\r\n          onChange={({ target }) => handleSelectStoreClose(target.value)}\r\n        >\r\n          {times &&\r\n            times.map((time, i) => (\r\n              <option key={i} value={time.time}>\r\n                {time.time}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className={`m-2 btn-sm ${!isSettingStoreHours && \"btn-hovered\"}`}\r\n          disabled={isSettingStoreHours}\r\n          onClick={() =>\r\n            storeFirstTime === true\r\n              ? handleSetStoreHours()\r\n              : handleUpdateStoreHours()\r\n          }\r\n        >\r\n          Save\r\n        </button>\r\n        <button\r\n          className={`m-2 btn-sm ${!isSettingStoreHours && \"btn-hovered\"}`}\r\n          disabled={isSettingStoreHours}\r\n          onClick={() => setShowEditHours(false)}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n      {isSettingStoreHours && (\r\n        <Loader type=\"ThreeDots\" height={10} color=\"rgb(50, 110, 150)\" />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const renderPresets = () => (\r\n    <>\r\n      <h3 className=\"my-2\">Manage presets</h3>\r\n      {presets &&\r\n        presets.map((preset, i) =>\r\n          isUpdating && updatingId === preset.p_id ? (\r\n            <div className=\"text-center\">\r\n              <Loader type=\"Oval\" color=\"rgb(50, 110, 150)\" height={20} />\r\n            </div>\r\n          ) : (\r\n            <div key={i}>\r\n              <div className=\"border-solid-1 p-1 flex justify-between\">\r\n                <p>\r\n                  {preset.shift_start} - {preset.shift_end}\r\n                </p>\r\n                <p\r\n                  className=\"pointer light-blue-darken-4\"\r\n                  onClick={() => handleDeletePreset(preset.p_id)}\r\n                >\r\n                  <i className=\"fas fa-trash-alt\" />\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n    </>\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const times = await fetchTimes();\r\n      const presets = await fetchPresets();\r\n      const store = await fetchStoreHours();\r\n\r\n      setTimes(times);\r\n      setPresets(presets);\r\n\r\n      if (store) {\r\n        setStoreOpen(store.store_open);\r\n        setStoreClose(store.store_close);\r\n        setStoreOpenValue(store.store_open_value);\r\n        setStoreCloseValue(store.store_close_value);\r\n        setStoreOpenLevel(store.store_open_level);\r\n        setStoreCloseLevel(store.store_close_level);\r\n        setStoreFirstTime(false);\r\n      } else {\r\n        setStoreFirstTime(true);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"text-center\" style={{ marginTop: \"70px\" }}>\r\n          <Loader type=\"Oval\" color=\"rgb(50, 110, 150)\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"store p-1\">\r\n          <h3 className=\"my-2\">Store Hours</h3>\r\n          {showEditHours ? (\r\n            renderStoreHours()\r\n          ) : (\r\n            <div>\r\n              {store_open && store_close ? (\r\n                <p className=\"my-2\">\r\n                  {store_open.toString()} - {store_close.toString()}\r\n                </p>\r\n              ) : (\r\n                <p className=\"my-2\">N/A</p>\r\n              )}\r\n              <button\r\n                className=\"btn-med btn-hovered mt-1 mb-2\"\r\n                onClick={() => setShowEditHours(true)}\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <hr className=\"my-3\" />\r\n\r\n          {renderPresets()}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchUser, editPassword, editUserGeneral } from '../../services/users';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function UserProfile() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [u_id, setUid] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id, tokenConfig);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword}>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(verifiedUser.u_id);\r\n            setUid(user.u_id);\r\n            setUser(user);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function EditAvailability({ day, dayStart, dayEnd, setDayStart, setDayEnd, times, store }) {\r\n    return (\r\n        <div className=\"w-100 text-center\">\r\n            <p className=\"mt-2\">{day}</p>\r\n            <div className=\"grid2\">\r\n                <div className=\"xs5-offset-1 s4-offset-2 l4-offset-2\">\r\n                    <p>From</p>\r\n                    <select value={dayStart} onChange={({ target }) => setDayStart(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"xs5 s4 l4\">\r\n                    <p>To</p>\r\n                    <select value={dayEnd} onChange={({ target }) => setDayEnd(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport EditAvailability from './editAvailability';\r\nimport { editUserAvailability, fetchUserAvailability } from '../../services/users';\r\nimport { fetchTimes } from '../../services/presets';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function UserAvailability() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [showEditAvailability, setShowEditAvailability] = useState(false);\r\n\r\n    const [availability, setAvailability] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n\r\n    const [monStart, setMonStart] = useState('');\r\n    const [monEnd, setMonEnd] = useState('');\r\n    const [tueStart, setTueStart] = useState('');\r\n    const [tueEnd, setTueEnd] = useState('');\r\n    const [wedStart, setWedStart] = useState('');\r\n    const [wedEnd, setWedEnd] = useState('');\r\n    const [thurStart, setThurStart] = useState('');\r\n    const [thurEnd, setThurEnd] = useState('');\r\n    const [friStart, setFriStart] = useState('');\r\n    const [friEnd, setFriEnd] = useState('');\r\n    const [satStart, setSatStart] = useState('');\r\n    const [satEnd, setSatEnd] = useState('');\r\n    const [sunStart, setSunStart] = useState('');\r\n    const [sunEnd, setSunEnd] = useState('');\r\n\r\n    const days = [\r\n        {\r\n            day: \"Monday\",\r\n            dayStart: monStart,\r\n            dayEnd: monEnd,\r\n            setDayStart: setMonStart,\r\n            setDayEnd: setMonEnd\r\n        },\r\n        {\r\n            day: \"Tuesday\",\r\n            dayStart: tueStart,\r\n            dayEnd: tueEnd,\r\n            setDayStart: setTueStart,\r\n            setDayEnd: setTueEnd\r\n        },\r\n        {\r\n            day: \"Wednesday\",\r\n            dayStart: wedStart,\r\n            dayEnd: wedEnd,\r\n            setDayStart: setWedStart,\r\n            setDayEnd: setWedEnd\r\n        },\r\n        {\r\n            day: \"Thursday\",\r\n            dayStart: thurStart,\r\n            dayEnd: thurEnd,\r\n            setDayStart: setThurStart,\r\n            setDayEnd: setThurEnd\r\n        },\r\n        {\r\n            day: \"Friday\",\r\n            dayStart: friStart,\r\n            dayEnd: friEnd,\r\n            setDayStart: setFriStart,\r\n            setDayEnd: setFriEnd\r\n        },\r\n        {\r\n            day: \"Saturday\",\r\n            dayStart: satStart,\r\n            dayEnd: satEnd,\r\n            setDayStart: setSatStart,\r\n            setDayEnd: setSatEnd\r\n        },\r\n        {\r\n            day: \"Sunday\",\r\n            dayStart: sunStart,\r\n            dayEnd: sunEnd,\r\n            setDayStart: setSunStart,\r\n            setDayEnd: setSunEnd\r\n        },\r\n    ]\r\n\r\n    const handleShowEditAvailability = () => {\r\n        for (let i = 0; i < availability.length; i++) {\r\n            switch (availability[i].day) {\r\n                case 'Monday':\r\n                    setMonStart(availability[i].start_time);\r\n                    setMonEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Tuesday':\r\n                    setTueStart(availability[i].start_time);\r\n                    setTueEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Wednesday':\r\n                    setWedStart(availability[i].start_time);\r\n                    setWedEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Thursday':\r\n                    setThurStart(availability[i].start_time);\r\n                    setThurEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Friday':\r\n                    setFriStart(availability[i].start_time);\r\n                    setFriEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Saturday':\r\n                    setSatStart(availability[i].start_time);\r\n                    setSatEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Sunday':\r\n                    setSunStart(availability[i].start_time);\r\n                    setSunEnd(availability[i].end_time);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setShowEditAvailability(true);\r\n    }\r\n\r\n    const handleSaveAvailability = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        let data = [];\r\n        let counter = 1;\r\n\r\n        for (let i = 0; i < days.length; i++) {\r\n            let obj = {\r\n                u_id: verifiedUser.u_id,\r\n                day: days[i].day,\r\n                start_time: days[i].dayStart,\r\n                end_time: days[i].dayEnd,\r\n                level: counter++\r\n            }\r\n\r\n            data.push(obj);\r\n        }\r\n\r\n        // Check if N/A is paired with a time value\r\n        for (let i = 0; i < data.length; i++) {\r\n            if ((data[i].start_time === 'N/A' && data[i].end_time !== 'N/A') ||\r\n                (data[i].start_time !== 'N/A' && data[i].end_time === 'N/A')) {\r\n                setIsUpdating(false);\r\n                return alert('N/A must only be N/A');\r\n            }\r\n        }\r\n\r\n        // Availability for each day is one record per update in db\r\n        for (let i = 0; i < data.length; i++) {\r\n            await editUserAvailability(availability[i].a_id, data[i], tokenConfig);\r\n        }\r\n\r\n        const newAvail = await fetchUserAvailability(verifiedUser.u_id);\r\n        setAvailability(newAvail);\r\n        setIsUpdating(false);\r\n        setShowEditAvailability(false);\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3\">\r\n                <div>\r\n                    {\r\n                        availability && availability.map((avail, i) => (\r\n                            <div key={i} className=\"text-center my-2\">\r\n                                <p className=\"my-1\"><strong>{avail.day}</strong></p>\r\n                                <p>{avail.start_time} - {avail.end_time}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center my-5\">\r\n                    <button className=\"btn-sm btn-hovered\" onClick={handleShowEditAvailability}>Edit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3 text-center\">\r\n                {days.map(({ day, dayStart, dayEnd, setDayStart, setDayEnd }, i) => (\r\n                    <div key={i}>\r\n                        <EditAvailability\r\n                            day={day}\r\n                            dayStart={dayStart}\r\n                            dayEnd={dayEnd}\r\n                            setDayStart={setDayStart}\r\n                            setDayEnd={setDayEnd}\r\n                            times={times}\r\n                            store={store}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <div className=\"m-2\">\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => handleSaveAvailability()}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => setShowEditAvailability(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n\r\n                {\r\n                    isUpdating &&\r\n                    <div className=\"text-center my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            height={10}\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const availability = await fetchUserAvailability(verifiedUser.u_id);\r\n                const times = await fetchTimes();\r\n                const store = await fetchStoreHours();\r\n\r\n                setAvailability(availability);\r\n                setTimes(times);\r\n                setStore(store);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <>\r\n                        {\r\n                            showEditAvailability\r\n                                ? renderEditAvailability()\r\n                                : renderAvailability()\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createRequest, deleteRequest, fetchRequestsByUser } from '../../services/requests';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserRequests() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [createNewRequest, setCreateNewRequest] = useState(false);\r\n    const [requests, setRequests] = useState(null);\r\n\r\n    const [notes, setNotes] = useState('');\r\n    const [dates, setDates] = useState([]);\r\n    const [didUpdate, setDidUpdate] = useState(false); // Used to refresh date inputs after selection\r\n    const [numOfDateInputs, setNumOfDateInputs] = useState(1);\r\n\r\n    const handleDeleteRequest = async (r_id) => {\r\n        const doDelete = window.confirm('Delete request?');\r\n        if (doDelete) {\r\n            setIsDeleting(true);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deleteRequest(r_id, tokenConfig);\r\n\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            setRequests(requests);\r\n            setIsDeleting(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateRequest = async () => {\r\n        const request = window.confirm('Submit request?');\r\n        if (request) {\r\n            setIsSubmitting(true);\r\n            const tokenConfig = isAuthenticated();\r\n            let datesArr = dates;\r\n\r\n            for (let i = 0; i < datesArr.length; i++) {\r\n                datesArr[i] = new Date(datesArr[i]).toISOString();\r\n            }\r\n\r\n            const body = {\r\n                u_id: verifiedUser.u_id,\r\n                requested_at: format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                notes,\r\n                requested_dates: datesArr\r\n            }\r\n\r\n            await createRequest(body, tokenConfig);\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n\r\n            setRequests(requests);\r\n            setCreateNewRequest(false);\r\n            clearForm();\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelCreateNewRequest = () => {\r\n        setCreateNewRequest(false);\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNumOfDateInputs(1);\r\n        setDates([]);\r\n        setNotes('');\r\n    }\r\n\r\n    const handleAddDate = (index, newDate) => {\r\n        if (dates[index] !== undefined) {\r\n            let arrCopy = dates;\r\n            // eslint-disable-next-line\r\n            // let removed = dates.splice(index, 1, newDate); // Replace old date with selected date\r\n            arrCopy.push(newDate)\r\n            setDates(arrCopy);\r\n            setDidUpdate(!didUpdate); // Refresh date input values\r\n        }\r\n        else {\r\n            setDates([...dates, newDate]);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDate = (index) => {\r\n        let arrCopy = dates;\r\n        // eslint-disable-next-line\r\n        let removed = arrCopy.splice(index, 1); // Remove selected date from dates array\r\n        // let removed = arrCopy.pop();\r\n        setDates(arrCopy);\r\n        setNumOfDateInputs(numOfDateInputs - 1);\r\n    }\r\n\r\n    // First date input\r\n    const DateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Additional date inputs\r\n    const XDateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n                <button className=\"btn-sm btn-hovered mt-2\" onClick={() => handleRemoveDate(index)}>\r\n                    <i className=\"fas fa-minus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Render date inputs based on numOfDateInputs\r\n    const renderDateElements = () => {\r\n        let dateElements = [];\r\n        for (let i = 0; i < numOfDateInputs; i++) {\r\n            if (numOfDateInputs > 1 && i === numOfDateInputs - 1) {\r\n                // Render additional date inputs\r\n                dateElements.push(<XDateElement key={i} index={i} />)\r\n            } else {\r\n                // Render initial date input\r\n                dateElements.push(<DateElement key={i} index={i} />)\r\n            }\r\n        }\r\n\r\n        return dateElements; // Return date inputs to render\r\n    }\r\n\r\n    const renderNewRequest = () => (\r\n        <div className=\"border-solid-1 border-smooth my-2 flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n            <div className=\"w-50\">\r\n                {\r\n                    // Render custom date elements and functions from above\r\n                    renderDateElements()\r\n                }\r\n                <button\r\n                    className={`btn-sm mb-2 ${dates.length === numOfDateInputs && 'btn-hovered'}`}\r\n                    disabled={dates.length !== numOfDateInputs} // Disable if next date is not yet selected\r\n                    onClick={() => setNumOfDateInputs(numOfDateInputs + 1)}\r\n                >\r\n                    <i className=\"fas fa-plus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <p>Notes</p>\r\n                <textarea className=\"h-10 p-1\" onChange={({ target }) => setNotes(target.value)}></textarea>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCreateRequest()}>Submit</button>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCancelCreateNewRequest()}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        requests && requests.map((request, i) => (\r\n            <div key={i} className=\"border-solid-1 border-smooth my-2 text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"flex\">\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Submission date</strong>\r\n                            <p>{new Date(request.requested_at).toLocaleDateString()}</p>\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Requested dates</strong>\r\n                            {\r\n                                request.requested_dates.map((rd, rd_i) => (\r\n                                    <p key={rd_i}>\r\n                                        {\r\n                                            rd_i === request.requested_dates.length - 1\r\n                                                ? new Date(rd).toLocaleDateString()\r\n                                                : `${new Date(rd).toLocaleDateString()},`\r\n                                        }\r\n                                    </p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <strong>Notes</strong>\r\n                            <p>{request.notes}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className={`btn-sm ${!(isDeleting || request.status !== \"Pending\") && \"btn-hovered\"}`}\r\n                        onClick={() => handleDeleteRequest(request.r_id)}\r\n                        disabled={isDeleting || request.status !== \"Pending\"}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n                setRequests(requests);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div className=\"m-2\">\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"grid2\">\r\n                        {renderRequests()}\r\n                        {\r\n                            createNewRequest\r\n                                ? renderNewRequest()\r\n                                : <div className=\"mt-4 xs12 s10-offset-1 m8-offset-2 l6-offset-3 text-center\">\r\n                                    <button className=\"btn-lg btn-hovered\" onClick={() => setCreateNewRequest(true)}>\r\n                                        <p><i className=\"fas fa-plus\"></i> New Request</p>\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllUsersSchedulesByDate, fetchAllUsersSchedulesByDateMobile } from '../../services/shifts';\r\nimport { startOfWeek, format } from 'date-fns';\r\n\r\nexport default function UserSchedules() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const [usersMobile, setUsersMobile] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderBlank = (a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`${time.start_time === 'N/A' && 'bg-black'}`}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"bg-blue-lighten-4\"\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        <>\r\n            <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"bg-grey-lighten-3\">\r\n                            <strong>Name</strong>\r\n                        </td>\r\n                        {\r\n                            days && days.map((day, i) => (\r\n                                <td key={i} className=\"bg-grey-lighten-3\">\r\n                                    <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                    <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                </td>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                    {\r\n                        users && users.map((user, u_i) => (\r\n                            <tr key={u_i}>\r\n                                <td className=\"py-1\">\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, a_i) => (\r\n                                        user.shifts[a_i].shift_end === null\r\n                                            ? renderBlank(a_i, time)\r\n                                            : renderShift(a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n    const renderMobileSchedules = () => (\r\n        <div className=\"schedules-mobile\">\r\n            {\r\n                isLoading ? (\r\n                    <Loader\r\n                        type='Oval'\r\n                        color='rgb(50, 110, 150)'\r\n                        className=\"text-center mt-4\"\r\n                    />\r\n                ) : (\r\n                    usersMobile.length && usersMobile.map((user, i) => (\r\n                        <div key={i} className=\"flex\">\r\n                            {user.label ? (\r\n                                <div className=\"w-100 border-x bg-grey-lighten-3 text-center\">\r\n                                    <p><strong>{format(new Date(user.shift_start), \"PP\")}</strong></p>\r\n                                </div>\r\n                            ) : (\r\n                            <>\r\n                                <div className=\"flex flex-col flex-center border-solid-1 p-1\" style={{ width: \"20%\" }}>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[0]}</strong></p>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[2]}</strong></p>\r\n                                </div>\r\n                                <div className=\"w-80 border-solid-1 p-1\">\r\n                                    <p>\r\n                                        {new Date(user.shift_start).toLocaleTimeString().replace(\":00 \", \" \")} -\r\n                                        {new Date(user.shift_end).toLocaleTimeString().replace(\":00 \", \" \")}\r\n                                    </p>\r\n                                    <p><strong>{user.first_name} {user.last_name}</strong></p>\r\n                                    <p><em>{user.title}</em></p>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let daysArray = [];\r\n            let dateToAdd = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n            for (let i = 0; i < 7; i++) {\r\n                daysArray.push(dateToAdd.toISOString());\r\n                dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n            }\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(daysArray[0], daysArray[6]);\r\n            const usersMobile = await fetchAllUsersSchedulesByDateMobile(daysArray[0], daysArray[6]);\r\n\r\n            if (usersMobile.length) {\r\n                // Add date labels for mobile schedules display\r\n                for (let i = 0; i < daysArray.length; i++) {\r\n                    usersMobile.push({ shift_start: daysArray[i], label: true });\r\n                }\r\n                usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n            }\r\n\r\n            setDays(daysArray);\r\n            setUsers(users);\r\n            setUsersMobile(usersMobile);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <div>\r\n                            {renderSchedule()}\r\n                            {renderMobileSchedules()}\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        // ...rest is the path from props\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function UserRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function AuthRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                // Redirect to user home if user is signed in and isn't admin\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.USER_SCHEDULES,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            } \r\n            else if (user && user.is_admin) {\r\n                // Redirect to admin home if user is signed in and is admin\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_EMPLOYEES,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n            else {\r\n                // Render auth component if user is not signed in\r\n                return <Component />;\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import \"./Colors.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport * as ROUTES from \"./constants/routes\";\nimport { useUser } from \"./contexts/userContext\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Header from \"./components/header\";\nimport Navbar from \"./components/navbar\";\nimport SignIn from \"./components/signIn\";\nimport AdminSignIn from \"./components/adminSignIn\";\n\nimport AdminEmployees from \"./components/admin/employees\";\nimport AdminEmployee from \"./components/admin/employee\";\nimport AdminNewEmployee from \"./components/admin/newEmployee\";\nimport AdminSchedules from \"./components/admin/schedules\";\nimport AdminRequests from \"./components/admin/requests\";\nimport AdminStore from \"./components/admin/store\";\n\nimport UserProfile from \"./components/user/profile\";\nimport UserAvailability from \"./components/user/availability\";\nimport UserRequests from \"./components/user/requests\";\nimport UserSchedules from \"./components/user/schedules\";\n\nimport ProtectedRoute from \"./helpers/protectedRoute\";\nimport UserRoute from \"./helpers/userRoute\";\nimport AuthRoute from \"./helpers/authRoute\";\n\nfunction App() {\n  const { verifiedUser } = useUser();\n\n  return (\n    <Router>\n      <Header />\n      <div className={`relative ${verifiedUser && \"container-grid\"}`}>\n        <Navbar />\n        <div className=\"container\">\n          <div className=\"container-inner\">\n            <Switch>\n              <AuthRoute\n                user={verifiedUser}\n                exact\n                path={ROUTES.SIGN_IN}\n                component={SignIn}\n              />\n              <AuthRoute\n                user={verifiedUser}\n                exact\n                path={ROUTES.ADMIN_SIGN_IN}\n                component={AdminSignIn}\n              />\n\n              <ProtectedRoute\n                exact\n                user={verifiedUser}\n                path={ROUTES.ADMIN_EMPLOYEES}\n                component={AdminEmployees}\n              />\n              <ProtectedRoute\n                user={verifiedUser}\n                path={ROUTES.ADMIN_NEW_EMPLOYEE}\n                component={AdminNewEmployee}\n              />\n              <ProtectedRoute\n                user={verifiedUser}\n                path={ROUTES.ADMIN_EMPLOYEE}\n                component={AdminEmployee}\n              />\n              <ProtectedRoute\n                user={verifiedUser}\n                path={ROUTES.ADMIN_SCHEDULES}\n                component={AdminSchedules}\n              />\n              <ProtectedRoute\n                user={verifiedUser}\n                path={ROUTES.ADMIN_REQUESTS}\n                component={AdminRequests}\n              />\n              <ProtectedRoute\n                user={verifiedUser}\n                path={ROUTES.ADMIN_STORE}\n                component={AdminStore}\n              />\n\n              <UserRoute\n                user={verifiedUser}\n                path={ROUTES.USER_SCHEDULES}\n                component={UserSchedules}\n              />\n              <UserRoute\n                user={verifiedUser}\n                path={ROUTES.USER_REQUESTS}\n                component={UserRequests}\n              />\n              <UserRoute\n                user={verifiedUser}\n                path={ROUTES.USER_AVAILABILITY}\n                component={UserAvailability}\n              />\n              <UserRoute\n                user={verifiedUser}\n                path={ROUTES.USER_PROFILE}\n                component={UserProfile}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport UserContextProvider from \"./contexts/userContext\";\n\nReactDOM.render(\n  <UserContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    ,\n  </UserContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}