{"version":3,"sources":["constants/routes.js","services/auth.js","contexts/userContext.js","components/header.js","components/navbar.js","components/signIn.js","components/adminSignIn.js","components/admin/home.js","services/users.js","components/admin/employees.js","services/roles.js","components/admin/employee.js","components/admin/newEmployee.js","services/presets.js","services/shifts.js","services/requests.js","services/store.js","components/admin/schedulesMobile.js","components/admin/schedules.js","components/admin/requests.js","components/admin/store.js","components/user/home.js","components/user/profile.js","components/user/editAvailability.js","components/user/availability.js","components/user/requests.js","components/user/schedules.js","helpers/protectedRoute.js","helpers/userRoute.js","helpers/authRoute.js","isLoaded.js","App.js","contexts/dimensionContext.js","index.js"],"names":["SIGN_IN","ADMIN_SIGN_IN","ADMIN_HOME","ADMIN_EMPLOYEES","ADMIN_NEW_EMPLOYEE","ADMIN_SCHEDULES","ADMIN_REQUESTS","ADMIN_STORE","USER_HOME","USER_SCHEDULES","USER_REQUESTS","USER_AVAILABILITY","USER_PROFILE","signIn","credentials","a","axios","post","res","data","error","response","createUser","body","tokenConfig","verifyUser","get","isAuthenticated","token","sessionStorage","getItem","headers","UserContext","createContext","UserContextProvider","children","useState","verifiedUser","setVerifiedUser","Provider","value","Header","useContext","history","useHistory","className","style","marginRight","first_name","marginTop","onClick","removeItem","is_admin","push","ROUTES","Navbar","dropDown","setDropDown","useEffect","handleClick","window","addEventListener","removeEventListener","to","SignIn","email","setEmail","password","setPassword","setError","isInvalid","handleSignIn","e","preventDefault","user","alert","setItem","onSubmit","type","onChange","target","disabled","AdminSignIn","AdminHome","fetchAllUsers","fetchUser","u_id","editPassword","put","editUserGeneral","editUserInfo","fetchUserAvailability","fetchAllUsersAvailabilities","editUserAvailability","a_id","AdminEmployees","users","setUsers","width","setWidth","isLoading","setIsLoading","handleAddEmployee","setWindowWidth","innerWidth","getUsers","color","id","map","i","backgroundColor","acn","title","last_name","phone","fetchRoles","AdminEmployee","useParams","setUser","roles","setRoles","success","setSuccess","isUpdating","setIsUpdating","setFirstName","setLastName","setPhone","role_id","setRoleId","hourly_pay","setHourlyPay","started_at","setStartedAt","showEditGeneral","setShowEditGeneral","showEditInfo","setShowEditInfo","new_password","setNewPassword","confirm_new_password","setConfirmNewPassword","handleUpdatePassword","handleUpdateUserGeneral","handleUpdateUserInfo","updated_at","Date","now","toLocaleDateString","getData","defaultValue","parseInt","role","level","placeholder","AdminNewEmployee","handleSubmit","getRoles","fetchTimes","createPreset","fetchPresets","deletePreset","p_id","delete","createShift","createCopyOfWeeklySchedule","fetchAllUsersSchedulesByDate","start_date","end_date","fetchAllUsersSchedulesByDateMobile","console","log","updateShift","s_id","deleteShift","fetchAllRequests","fetchRequestsByUser","fetchAllRequestsByStatus","status","fetchAllRequestsByStatusAndDate","weekStart","weekEnd","updateRequestStatus","r_id","createRequest","deleteRequest","fetchStoreHours","setStoreHours","updateStoreHours","SchedulesMobile","usersMobile","days","times","presets","store","getTimeValue","handleFetchSchedule","editShiftIndex","setEditShiftIndex","dayIndex","setDayIndex","shiftStartValue","setShiftStartValue","shiftEndValue","setShiftEndValue","handleSaveShift","date","toDate","startTimeHour","split","startTimeMinute","endTimeHour","endTimeMinute","shift_start","getFullYear","getMonth","getDate","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","shift_end","handleRemoveShift","confirm","renderShift","shiftIndex","length","format","handleEditShift","toLocaleTimeString","replace","renderEditShift","shiftValue","preset","shift_start_value","shift_end_value","time","parseFloat","store_open_level","store_close_level","height","label","toDateString","AdminSchedules","availabilities","setAvailabilities","setUsersMobile","requests","setRequests","setDays","setTimes","setPresets","setStore","isCopying","setIsCopying","isLoadingSchedule","setIsLoadingSchedule","startOfToday","dateISO","setDateISO","setWeekStart","setWeekEnd","setLevel","userData","setUserData","availabilityIndex","setAvailabilityIndex","getDatesOfTheWeek","selectedDate","startOfWeek","weekStartsOn","daysArray","dateToAdd","toISOString","setDate","sort","b","handleCopyWeeklySchedule","shifts","j","shift","addWeeks","parseISO","updatedUsers","handleNextWeek","handleSavePreset","newPresets","hour","getHours","min","getMinutes","toString","getTime","a_i","index","startStartValue","endStartValue","renderBlank","start_time","store_open_value","store_close_value","handleUserClick","getDatesAndLoadData","subWeeks","handlePreviousWeek","request","requested_dates","r_i","day","u_i","availability","end_time","AdminRequests","setStatus","handleUpdateRequestStatus","handleSortRequests","getRequests","requested_at","rd","rd_i","notes","AdminStore","isSettingStoreHours","setIsSettingStoreHours","updatingId","setUpdatingId","store_open","setStoreOpen","store_close","setStoreClose","setStoreOpenValue","setStoreCloseValue","setStoreOpenLevel","setStoreCloseLevel","showEditHours","setShowEditHours","storeFirstTime","setStoreFirstTime","handleSetStoreHours","setTimeout","saveData","handleUpdateStoreHours","handleDeletePreset","handleSelectStoreOpen","handleSelectStoreClose","UserHome","UserProfile","setUid","EditAvailability","dayStart","dayEnd","setDayStart","setDayEnd","UserAvailability","showEditAvailability","setShowEditAvailability","setAvailability","monStart","setMonStart","monEnd","setMonEnd","tueStart","setTueStart","tueEnd","setTueEnd","wedStart","setWedStart","wedEnd","setWedEnd","thurStart","setThurStart","thurEnd","setThurEnd","friStart","setFriStart","friEnd","setFriEnd","satStart","setSatStart","satEnd","setSatEnd","sunStart","setSunStart","sunEnd","setSunEnd","handleShowEditAvailability","handleSaveAvailability","counter","obj","newAvail","avail","UserRequests","isDeleting","setIsDeleting","isSubmitting","setIsSubmitting","createNewRequest","setCreateNewRequest","setNotes","dates","setDates","didUpdate","setDidUpdate","numOfDateInputs","setNumOfDateInputs","handleDeleteRequest","handleCreateRequest","datesArr","clearForm","handleAddDate","newDate","undefined","arrCopy","DateElement","XDateElement","splice","handleRemoveDate","renderDateElements","dateElements","UserSchedules","ProtectedRoute","Component","component","rest","render","location","pathname","state","from","UserRoute","AuthRoute","IsLoaded","App","getVerifiedUser","exact","path","DimensionContext","DimensionContextProvider","isMobile","setIsMobile","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0b91b68.chunk.js","sourcesContent":["export const SIGN_IN = '/';\r\nexport const ADMIN_SIGN_IN = '/admin'\r\n\r\nexport const ADMIN_HOME = '/admin/home';\r\nexport const ADMIN_EMPLOYEES = '/admin/employees'; // Need 'exact' for path in App.js\r\nexport const ADMIN_EMPLOYEE = '/admin/employees/:u_id';\r\nexport const ADMIN_NEW_EMPLOYEE = '/admin/employees/new';\r\nexport const ADMIN_SCHEDULES = '/admin/schedules';\r\nexport const ADMIN_REQUESTS = '/admin/requests';\r\nexport const ADMIN_STORE = '/admin/store';\r\n\r\nexport const USER_HOME = '/home';\r\nexport const USER_SCHEDULES = '/schedules';\r\nexport const USER_REQUESTS = '/requests';\r\nexport const USER_AVAILABILITY = '/availability';\r\nexport const USER_PROFILE = '/profile';","import axios from 'axios';\r\n\r\nexport const signIn = async (credentials) => {\r\n    try {\r\n        const res = await axios.post('/auth/signin', credentials);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createUser = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/auth/register', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const verifyUser = async (tokenConfig) => {\r\n    try {\r\n        const res = await axios.get('/auth/verify', tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response };\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        const tokenConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n        return tokenConfig;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport default function UserContextProvider({ children }) {\r\n    const [verifiedUser, setVerifiedUser] = useState(null);\r\n    return (\r\n        <UserContext.Provider value={{ verifiedUser, setVerifiedUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Header() {\r\n    const { verifiedUser, setVerifiedUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        sessionStorage.removeItem('token');\r\n        setVerifiedUser(null); // Remove verified user from context\r\n        if (verifiedUser.is_admin) history.push(ROUTES.ADMIN_SIGN_IN);\r\n        else history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            {\r\n                verifiedUser &&\r\n                <div className=\"flex\" style={{ marginRight: \"3%\" }}>\r\n                    <div className=\"mr-4\">\r\n                        <p className=\"off-white\">Welcome, {verifiedUser && verifiedUser.first_name}</p>\r\n                    </div>\r\n                    <div className=\"pointer-no-u\" style={{ marginTop: '2px' }} onClick={handleSignOut}>\r\n                        <p className=\"off-white\"><i className=\"fas fa-sign-out-alt text-5\"></i></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Navbar() {\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    // Navbar for large screens\r\n    const renderSideNav = () => (\r\n        <div className=\"navbar text-center\">\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_EMPLOYEES : ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Employees\" : \"Schedules\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"users\" : \"calendar-alt\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_SCHEDULES : ROUTES.USER_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Schedules\" : \"Requests\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"calendar-alt\" : \"inbox\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_REQUESTS : ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Requests\" : \"Availability\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"inbox\" : \"clock\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_STORE : ROUTES.USER_PROFILE} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Store\" : \"Profile\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-wrench\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    // Navbar for small screens\r\n    const renderDropDown = () => {\r\n        return (\r\n            <div className=\"dropdown off-white text-7 pointer\" onClick={() => setDropDown(!dropDown)}>\r\n                <i className=\"fas fa-bars\"></i>\r\n                {dropDown ? (\r\n                    <div className=\"navbar-top text-center\">\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_EMPLOYEES : ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Employees\" : \"Schedules\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_SCHEDULES : ROUTES.USER_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Schedules\" : \"Requests\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_REQUESTS : ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Requests\" : \"Availability\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_STORE : ROUTES.USER_PROFILE} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Store\" : \"Profile\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClick = () => setDropDown(!dropDown);\r\n\r\n        // Allows user to close dropdown menu when clicking elsewhere\r\n        if (dropDown) {\r\n            window.addEventListener(\"click\", handleClick);\r\n        }\r\n\r\n        return () => window.removeEventListener(\"click\", handleClick);\r\n    }, [dropDown])\r\n\r\n    if (!verifiedUser) return null;\r\n\r\n    return (\r\n        <div>\r\n            {renderDropDown()}\r\n            {renderSideNav()}\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                alert('Please sign in through the admin portal');\r\n                history.push(ROUTES.ADMIN_SIGN_IN);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.USER_HOME);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 l8-offset-2\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function AdminSignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.ADMIN_HOME);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                alert('Please sign in through the user portal');\r\n                history.push(ROUTES.SIGN_IN);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 l8-offset-2\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default function AdminHome() {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <p>HOME</p>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get('/users');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editPassword = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/reset-pw/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserGeneral = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserInfo = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/system/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUserAvailability = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/availability/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersAvailabilities = async () => {\r\n    try {\r\n        const res = await axios.get('/users/availability/all');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserAvailability = async (a_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/availability/${a_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllUsers } from '../../services/users';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployees() {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const handleClickUser = (u_id) => {\r\n        history.push(`${ROUTES.ADMIN_EMPLOYEES}/${u_id}`);\r\n    }\r\n\r\n    const handleAddEmployee = () => {\r\n        history.push(ROUTES.ADMIN_NEW_EMPLOYEE);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    const renderEmployees = () => (\r\n        <div>\r\n            <div className=\"mt-6 mb-4 flex flex-center\">\r\n                <button className=\"btn-x-lg btn-hovered\" onClick={handleAddEmployee}>\r\n                    <p>Add Employee</p>\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <table id=\"users-list\" className=\"border-collapse w-100 text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"p-3\">Role</th>\r\n                            <th className=\"p-3\">Name</th>\r\n                            <th className=\"p-3\">Email</th>\r\n                            <th className=\"p-3\">Phone</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users && users.map((user, i) => (\r\n                                <tr\r\n                                    key={i}\r\n                                    className=\"pointer\"\r\n                                    onClick={() => handleClickUser(user.u_id)}\r\n                                    style={i % 2 === 0\r\n                                        ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                                        : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                                >\r\n                                    <td className=\"p-3\">{width < 380 ? user.acn : user.title}</td>\r\n                                    <td className=\"p-3\">{user.first_name} {user.last_name}</td>\r\n                                    <td className=\"p-3\">{user.email}</td>\r\n                                    <td className=\"p-3\">{user.phone}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const users = await fetchAllUsers();\r\n            if (users) setUsers(users);\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth); // Set default width on page load\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        renderEmployees()\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const res = await axios.get('/roles');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { editPassword, editUserGeneral, editUserInfo, fetchUser } from '../../services/users';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployee() {\r\n    const { u_id } = useParams();\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n    const [showEditInfo, setShowEditInfo] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserInfo = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, hourly_pay, started_at, updated_at: new Date(Date.now()).toLocaleDateString() };\r\n\r\n        const res = await editUserInfo(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditInfo(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderUserInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Role</h4>\r\n                <p>{user.title}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Hourly Pay</h4>\r\n                <p>{verifiedUser.level <= user.level ? user.hourly_pay : '**'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Started At</h4>\r\n                <p>{new Date(user.started_at).toLocaleDateString()}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Updated At</h4>\r\n                <p>{user.updated_at ? new Date(user.updated_at).toLocaleDateString() : 'N/A'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button\r\n                    className={`btn-med ${verifiedUser.level > user.level ? '' : 'btn-hovered'}`}\r\n                    onClick={() => setShowEditInfo(true)}\r\n                    disabled={verifiedUser.level > user.level}\r\n                >\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>Role</p>\r\n                <select defaultValue={user.role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                    {\r\n                        roles && roles.map((role, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={role.role_id}\r\n                            >\r\n                                {role.title}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Hourly Pay</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={hourly_pay}\r\n                    onChange={({ target }) => setHourlyPay(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Started At</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={new Date(started_at).toLocaleDateString()}\r\n                    onChange={({ target }) => setStartedAt(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserInfo()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditInfo(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} className=\"\">\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(u_id);\r\n            const roles = await fetchRoles();\r\n            setUser(user);\r\n            setRoles(roles);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setRoleId(user.role_id);\r\n            setHourlyPay(user.hourly_pay);\r\n            setStartedAt(user.started_at);\r\n            setIsLoading(false);\r\n        }\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    showEditInfo\r\n                                        ? renderEditInfo()\r\n                                        : renderUserInfo()\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    verifiedUser && verifiedUser.u_id === user.u_id &&\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport { createUser } from '../../services/auth';\r\n\r\nexport default function AdminNewEmployee() {\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const [role_id, setRoleId] = useState(6);\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, first_name, last_name, email, phone, password, hourly_pay, started_at };\r\n\r\n        const res = await createUser(body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            setError('');\r\n            setRoleId('');\r\n            setFirstName('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setPhone('');\r\n            setPassword('');\r\n            setHourlyPay('');\r\n            setSuccess(true);\r\n        }\r\n    }\r\n\r\n    const renderEmployeeForm = () => (\r\n        <div className=\"grid2\">\r\n            <form onSubmit={handleSubmit} className=\"xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"my-2\">\r\n                    <p>First Name</p>\r\n                    <input type=\"text\" value={first_name} className=\"form-input\" onChange={({ target }) => setFirstName(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Last Name</p>\r\n                    <input type=\"text\" value={last_name} className=\"form-input\" onChange={({ target }) => setLastName(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Email</p>\r\n                    <input type=\"email\" value={email} className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Phone</p>\r\n                    <input type=\"text\" value={phone} className=\"form-input\" onChange={({ target }) => setPhone(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Password</p>\r\n                    <input type=\"password\" value={password} className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Hourly Pay</p>\r\n                    <input type=\"text\" value={hourly_pay} className=\"form-input\" onChange={({ target }) => setHourlyPay(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Starting Date</p>\r\n                    <input type=\"date\" value={started_at} className=\"form-input\" onChange={({ target }) => setStartedAt(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Role</p>\r\n                    <select value={role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                        {\r\n                            roles && roles.map((role, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={role.role_id}\r\n                                >\r\n                                    {role.title}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"text-center mt-5\">\r\n                    <button className=\"btn-med btn-hovered\">Submit</button>\r\n                </div>\r\n                {error ? <p className=\"red mt-3\">{error}</p> : null}\r\n                {success ? <p className=\"green mt-3\">Profile successfully added!</p> : null}\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getRoles() {\r\n            const roles = await fetchRoles();\r\n            setRoles(roles);\r\n        }\r\n\r\n        getRoles();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {renderEmployeeForm()}\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchTimes = async () => {\r\n    try {\r\n        const res = await axios.get('/presets/times');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createPreset = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/presets', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchPresets = async () => {\r\n    try {\r\n        const res = await axios.get('/presets');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deletePreset = async (p_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/presets/${p_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const createShift = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/shifts', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createCopyOfWeeklySchedule = async (body) => {\r\n    try {\r\n        const res = await axios.post('/shifts/copy', body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\n// Unused for now\r\nexport const fetchShiftsByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDateMobile = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/mobile/${start_date}/${end_date}`);\r\n        console.log(res.data)\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateShift = async (s_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/shifts/${s_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteShift = async (s_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/shifts/${s_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllRequests = async () => {\r\n    try {\r\n        const res = await axios.get('/requests');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchRequestsByUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/requests/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatus = async (status) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatusAndDate = async (status, weekStart, weekEnd) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}/${weekStart}/${weekEnd}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateRequestStatus = async (r_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/requests/${r_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createRequest = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/requests', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async (r_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/requests/${r_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchStoreHours = async () => {\r\n    try {\r\n        const res = await axios.get('/store');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const setStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { format, toDate } from \"date-fns\";\r\nimport { isAuthenticated } from \"../../services/auth\";\r\nimport { createShift, updateShift, deleteShift } from \"../../services/shifts\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function SchedulesMobile({ usersMobile, days, times, presets, store, getTimeValue, handleFetchSchedule }) {\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [editShiftIndex, setEditShiftIndex] = useState(null);\r\n    const [dayIndex, setDayIndex] = useState(null); // For saving a shift\r\n    const [shiftStartValue, setShiftStartValue] = useState(\"\");\r\n    const [shiftEndValue, setShiftEndValue] = useState(\"\");\r\n\r\n    const handleEditShift = (user, shiftIndex) => {\r\n        // Set specific shift time values to match with times array in the select inputs\r\n        setShiftStartValue(getTimeValue(user.shift_start));\r\n        setShiftEndValue(getTimeValue(user.shift_end));\r\n        // Enable edit shift component to render\r\n        setEditShiftIndex(shiftIndex);\r\n        // Get date to be saved when submitting\r\n        for (let i = 0; i < days.length; i++) {\r\n            // Use format for mobile, otherwise shifts will return one day after (ㆆ_ㆆ)\r\n            if (format(new Date(user.shift_start), \"yyyy-MM-dd\") === days[i].split(\"T\")[0]) {\r\n                setDayIndex(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSaveShift = async (u_id, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = toDate(new Date(days[dayIndex]));\r\n\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shiftStartValue.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shiftStartValue.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shiftEndValue.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shiftEndValue.split(' ')[1]);\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = toDate(new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute))\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }); // Local timezone\r\n\r\n        const shift_end = toDate(new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute))\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        await handleFetchSchedule();\r\n\r\n        setEditShiftIndex(null);\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            await handleFetchSchedule();\r\n            setEditShiftIndex(null);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const renderShift = (user, shiftIndex) => (\r\n        <div onClick={() => handleEditShift(user, shiftIndex)}>\r\n            <p>\r\n                {new Date(user.shift_start).toLocaleTimeString().replace(\":00 \", \" \")} -&nbsp;\r\n                {new Date(user.shift_end).toLocaleTimeString().replace(\":00 \", \" \")}\r\n            </p>\r\n            <p><strong>{user.first_name} {user.last_name}</strong></p>\r\n            <p><em>{user.title}</em></p>\r\n        </div>\r\n    )\r\n\r\n    const renderEditShift = (user) => (\r\n        <>\r\n            <div className=\"flex justify-evenly\">\r\n                <div className=\"flex flex-col flex-center text-center\">\r\n                    <p className=\"schedules-mobile-text\"><strong>{user.first_name} {user.last_name}</strong></p>\r\n                    <p className=\"schedules-mobile-text\"><em>{user.title}</em></p>\r\n                </div>\r\n                <div className=\"\"></div>\r\n                <div>\r\n                    <div className=\"flex justify-evenly mb-1\">\r\n                        <p>Preset</p>\r\n                        <select\r\n                            defaultValue='0 0'\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => handleSelectPreset(target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            {\r\n                                presets && presets.map((preset, i) => (\r\n                                    <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                        {preset.shift_start} - {preset.shift_end}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex justify-evenly mb-1\">\r\n                        <p>Start</p>\r\n                        <select\r\n                            value={shiftStartValue}\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                            {times && times.map((time, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={time.value}\r\n                                        disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                    >\r\n                                        {time.time}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex justify-evenly mb-1\">\r\n                        <p className=\"mr-1\">End</p>\r\n                        <select\r\n                            value={shiftEndValue}\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                            {times && times.map((time, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={time.value}\r\n                                        disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                    >\r\n                                        {time.time}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1 text-center\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"w-100 flex justify-evenly\">\r\n                        <div\r\n                            className=\"py-1 w-100 text-center pointer hovered border-solid-1\"\r\n                            onClick={() => handleSaveShift(user.u_id, user.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"py-1 w-100 text-center pointer hovered border-solid-1\"\r\n                            onClick={() => handleRemoveShift(user.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"py-1 w-100 text-center pointer hovered border-solid-1\"\r\n                            onClick={() => setEditShiftIndex(null)}\r\n                        >\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n    \r\n    return (\r\n        <div className=\"schedules-mobile\">\r\n            {\r\n                usersMobile.map((user, i) => (\r\n                    <div key={i}>\r\n                        {user.label ? (\r\n                            <div className=\"w-100 border-x bg-x-light-gray text-center\">\r\n                                <p><strong>{format(new Date(user.shift_start), \"PP\")}</strong></p>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex flex-col flex-center border-solid-1 p-1\" style={{ width: \"20%\" }}>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[0]}</strong></p>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[2]}</strong></p>\r\n                                </div>\r\n                                <div className=\"w-80 border-solid-1 p-1\">\r\n                                    {editShiftIndex === i\r\n                                        ? renderEditShift(user)\r\n                                        : renderShift(user, i)\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { createPreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { createShift, fetchAllUsersSchedulesByDate, fetchAllUsersSchedulesByDateMobile, deleteShift, updateShift, createCopyOfWeeklySchedule } from '../../services/shifts';\r\nimport { fetchAllUsersAvailabilities } from '../../services/users';\r\nimport { startOfToday, startOfWeek, addWeeks, subWeeks, parseISO, format } from 'date-fns';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllRequestsByStatusAndDate } from '../../services/requests';\r\nimport { fetchStoreHours } from '../../services/store';\r\nimport SchedulesMobile from './schedulesMobile';\r\n\r\nexport default function AdminSchedules() {\r\n    const [availabilities, setAvailabilities] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    const [usersMobile, setUsersMobile] = useState(null);\r\n    const [requests, setRequests] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isCopying, setIsCopying] = useState(false);\r\n    const [isLoadingSchedule, setIsLoadingSchedule] = useState(true);\r\n\r\n    // Used for datepicker\r\n    const [dateISO, setDateISO] = useState(startOfToday())\r\n    // Used for fetching data within dates in ISO string\r\n    const [weekStart, setWeekStart] = useState('');\r\n    const [weekEnd, setWeekEnd] = useState('');\r\n    // Used for getting time values when saving a shift\r\n    const [shift_start_value, setShiftStartValue] = useState('0 0');\r\n    const [shift_end_value, setShiftEndValue] = useState('0 0');\r\n    const [level, setLevel] = useState('');\r\n    // Used to render edit shift mode for selected date and employee only\r\n    const [userData, setUserData] = useState(null);\r\n    const [availabilityIndex, setAvailabilityIndex] = useState(null);\r\n\r\n    // For init load and datepicker\r\n    const getDatesOfTheWeek = async (selectedDate) => {\r\n        setIsLoadingSchedule(true);\r\n        let date;\r\n        if (selectedDate) {\r\n            date = startOfWeek(new Date(selectedDate), { weekStartsOn: 1 });\r\n            setDateISO(selectedDate); // For datepicker value\r\n        }\r\n        else {\r\n            date = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n        }\r\n\r\n        let daysArray = [];\r\n        let dateToAdd = date;\r\n        for (let i = 0; i < 7; i++) {\r\n            daysArray.push(dateToAdd.toISOString());\r\n            dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n        }\r\n\r\n        const weekStart = daysArray[0];\r\n        const weekEnd = daysArray[6];\r\n\r\n        setDays(daysArray);\r\n        setWeekStart(weekStart);\r\n        setWeekEnd(weekEnd);\r\n\r\n        // Refresh schedules after date change\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n        const requests = await fetchAllRequestsByStatusAndDate('Approved', weekStart, weekEnd);\r\n\r\n        // Add date labels for mobile schedules display\r\n        for (let i = 0; i < daysArray.length; i++) {\r\n            usersMobile.push({ shift_start: daysArray[i], label: true });\r\n        }\r\n        usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n        \r\n        setUsers(users);\r\n        setUsersMobile(usersMobile);\r\n        setRequests(requests);\r\n        setIsLoadingSchedule(false);\r\n    }\r\n\r\n    // Can create or update shift based on s_id being provided\r\n    const handleSaveShift = async (u_id, dayIndex, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = new Date(days[dayIndex]);\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shift_start_value.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shift_start_value.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shift_end_value.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shift_end_value.split(' ')[1]);\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }); // Local timezone\r\n\r\n        const shift_end = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        await handleFetchSchedule();\r\n\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleCopyWeeklySchedule = async () => {\r\n        const doCopy = window.confirm('Copy schedule to next week? Any shifts already saved will be overwritten.');\r\n        if (doCopy) {\r\n            setIsCopying(true);\r\n            setIsLoadingSchedule(true);\r\n\r\n            let shifts = [];\r\n            for (let i = 0; i < users.length; i++) {\r\n                for (let j = 0; j < users[i].shifts.length; j++) {\r\n                    if (users[i].shifts[j].shift_end !== null) {\r\n                        let shift = {\r\n                            u_id: users[i].u_id,\r\n                            shift_start: format(addWeeks(parseISO(users[i].shifts[j].shift_start), 1), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                            shift_end: format(addWeeks(parseISO(users[i].shifts[j].shift_end), 1), \"yyyy-MM-dd'T'HH:mm:ss\")\r\n                        }\r\n                        shifts.push(shift);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = {\r\n                shifts,\r\n                weekStart: addWeeks(parseISO(weekStart), 1),\r\n                weekEnd: addWeeks(parseISO(weekEnd), 1)\r\n            };\r\n\r\n\r\n            await createCopyOfWeeklySchedule(body);\r\n            const updatedUsers = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n            setUsers(updatedUsers);\r\n            setUsersMobile(usersMobile);\r\n            // Display following week after copying schedule\r\n            handleNextWeek();\r\n            setIsCopying(false);\r\n        }\r\n    }\r\n\r\n    // Refresh schedule after any changes are made\r\n    const handleFetchSchedule = async () => {\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n        // Add date labels for mobile schedules display\r\n        for (let i = 0; i < days.length; i++) {\r\n            usersMobile.push({ shift_start: days[i], label: true });\r\n        }\r\n        usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n        setUsers(users);\r\n        setUsersMobile(usersMobile);\r\n    }\r\n\r\n    const handleCancelShift = () => {\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    // Render edit shift (new)\r\n    const handleUserClick = (u_id, index) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(store.store_open_value);\r\n        setShiftEndValue(store.store_close_value);\r\n    }\r\n\r\n    // Render edit shift (update)\r\n    const handleEditShift = (u_id, index, startStartValue, endStartValue) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(startStartValue);\r\n        setShiftEndValue(endStartValue);\r\n        setLevel(level);\r\n    }\r\n\r\n    const handlePreviousWeek = () => {\r\n        let date = subWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleNextWeek = () => {\r\n        let date = addWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleSavePreset = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        let level;\r\n        let shift_start;\r\n        let shift_end;\r\n        for (let i = 0; i < presets.length; i++) {\r\n            if (shift_start_value === presets[i].shift_start_value\r\n                && shift_end_value === presets[i].shift_end_value) {\r\n                alert('Preset already saved');\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (shift_start_value === times[i].value) {\r\n                // Assign only start time level for sorting when displayed in the list\r\n                level = times[i].level;\r\n                shift_start = times[i].time;\r\n            }\r\n            if (shift_end_value === times[i].value) {\r\n                shift_end = times[i].time;\r\n            }\r\n        }\r\n\r\n        const body = { shift_start, shift_end, shift_start_value, shift_end_value, level };\r\n        await createPreset(body, tokenConfig);\r\n\r\n        const newPresets = await fetchPresets();\r\n        setPresets(newPresets);\r\n\r\n        alert('Preset saved')\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            await handleFetchSchedule();\r\n            setUserData('');\r\n            setAvailabilityIndex('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const getTimeValue = (shift) => {\r\n        const date = new Date(shift);\r\n        const hour = date.getHours();\r\n        const min = date.getMinutes();\r\n        const values = `${hour.toString()} ${min.toString()}`\r\n        return values;\r\n    }\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderShift = (u_id, a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"pointer schedules-text bg-x-light-green\"\r\n            onClick={() => handleEditShift(u_id, a_i, getTimeValue(shift_start), getTimeValue(shift_end))}\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderBlank = (u_id, a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`pointer ${time.start_time === 'N/A' ? 'bg-black' : 'hovered'}`}\r\n            onClick={() => handleUserClick(u_id, a_i)}\r\n        ></td>\r\n    )\r\n\r\n    const renderEditShift = (u_id, dayIndex, shift) => (\r\n        <td key={dayIndex}>\r\n            <div className=\"flex justify-evenly mt-1\">\r\n                <p>Preset</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    defaultValue='0 0'\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        presets && presets.map((preset, i) => (\r\n                            <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <hr className=\"my-1\" />\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p>Start</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_start_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"mr-1\">End</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_end_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"my-2 w-100 flex justify-evenly\">\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1\"\r\n                            onClick={() => handleSaveShift(u_id, dayIndex, shift.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check schedules-text\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1\"\r\n                            onClick={() => handleSavePreset()}\r\n                        >\r\n                            <i className=\"fas fa-star schedules-text\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1\"\r\n                            onClick={() => shift.s_id ? handleRemoveShift(shift.s_id) : handleCancelShift()}\r\n                        >\r\n                            {\r\n                                shift.shift_end === null\r\n                                    ? <i className=\"fas fa-times schedules-text\"></i>\r\n                                    : <i className=\"fas fa-trash-alt schedules-text\"></i>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </td>\r\n    )\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"availability\">\r\n            <h3 className=\"text-center\">Availability</h3>\r\n            <table className=\"border-collapse w-100 text-center schedules-text\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        {\r\n                            // Render the day only\r\n                            days && days.map((day, i) => (\r\n                                <th key={i}>\r\n                                    <p>{new Date(day).toString().split(' ')[0]}</p>\r\n                                </th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        availabilities && availabilities.map((user, i) => (\r\n                            <tr\r\n                                key={i}\r\n                                style={i % 2 === 0\r\n                                    ? { backgroundColor: 'rgb(235, 235, 235)' }\r\n                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                            >\r\n                                <td>\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.level === 2 ? \"A. Manager\" : user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, i) => (\r\n                                        <td key={i} className={`${time.start_time === 'N/A' && 'bg-black'}`}>\r\n                                            {(time.start_time === 'ANY' && time.end_time === 'ANY') ? 'ANY' : `${time.start_time} - ${time.end_time}`}\r\n                                        </td>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n    const renderController = () => (\r\n        <div className=\"schedules-controller\">\r\n            <div className=\"select-week\">\r\n                <div className=\"pointer\" onClick={() => handlePreviousWeek()}>\r\n                    <em className=\"text-3\">Prev&nbsp;week</em>\r\n                    <p>\r\n                        <i className=\"fas fa-angle-double-left\"></i>\r\n                    </p>\r\n                </div>\r\n                <div id=\"controller-date\" className=\"relative\">\r\n                    <input\r\n                        type=\"date\"\r\n                        value={new Date(dateISO).toISOString().split('T')[0]} // Init date must be yyyy-mm-dd format\r\n                        onChange={({ target }) => getDatesOfTheWeek(target.value)}\r\n                    />\r\n                    <div className=\"absolute\">&nbsp;</div>\r\n                </div>\r\n                <div className=\"pointer\" onClick={() => handleNextWeek()}>\r\n                    <em className=\"text-3\">Next&nbsp;week</em>\r\n                    <p>\r\n                        <i className=\"fas fa-angle-double-right\"></i>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"schedules-requests\">\r\n                <div className=\"mr-5\">\r\n                    <p className=\"text-3\">\r\n                        <strong>Approved Requests</strong>\r\n                    </p>\r\n                    {\r\n                        requests.length\r\n                            ? requests.map((request, i) => (\r\n                                <div key={i}>\r\n                                    <p className=\"text-3\">\r\n                                        {request.first_name} {request.last_name}:\r\n                                        {request.requested_dates.map((date, r_i) => (\r\n                                            <span key={r_i}>\r\n                                                &nbsp;\r\n                                                {\r\n                                                    r_i === request.requested_dates.length - 1\r\n                                                        ? new Date(date).toLocaleDateString()\r\n                                                        : `${new Date(date).toLocaleDateString()},`\r\n                                                }\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                </div>\r\n                            ))\r\n                            : <p className=\"text-3\">None</p>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className={`btn-med ${isCopying ? '' : 'btn-hovered'}`}\r\n                        onClick={() => handleCopyWeeklySchedule()}\r\n                        disabled={isCopying}\r\n                    >\r\n                        <i className=\"fas fa-share\" />&nbsp;Copy\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        isLoadingSchedule ? (\r\n            <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                <Loader\r\n                    type='Oval'\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            </div>\r\n        ) : (\r\n            <table className=\"schedules-table w-100 border-collapse text-center table-fixed schedules-text\">\r\n                <tbody>\r\n                        <tr>\r\n                            <td className=\"bg-x-light-gray\">\r\n                                <strong>Name</strong>\r\n                            </td>\r\n                            {\r\n                                days && days.map((day, i) => (\r\n                                    <td key={i} className=\"bg-x-light-gray\">\r\n                                        <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                        <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                    </td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            users && users.map((user, u_i) => (\r\n                                <tr key={u_i}>\r\n                                    <td className=\"py-1\">\r\n                                        <p>\r\n                                            <strong>{user.first_name} {user.last_name}</strong>\r\n                                        </p>\r\n                                        <em>{user.level === 2 ? \"A. Manager\" : user.title}</em>\r\n                                    </td>\r\n                                    {\r\n                                        user.availability.map((time, a_i) => (\r\n                                            // Only render edit mode for the selected date and employee\r\n                                            (userData === user.u_id && availabilityIndex === a_i)\r\n                                                ? renderEditShift(user.u_id, a_i, user.shifts[a_i])\r\n                                                // Render shifts if they exist during the selected week\r\n                                                : user.shifts[a_i].shift_end === null\r\n                                                    ? renderBlank(user.u_id, a_i, time)\r\n                                                    : renderShift(user.u_id, a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        )\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getDatesAndLoadData() {\r\n            const times = await fetchTimes();\r\n            const availabilities = await fetchAllUsersAvailabilities();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n            await getDatesOfTheWeek();\r\n\r\n            setTimes(times);\r\n            setAvailabilities(availabilities);\r\n            setPresets(presets);\r\n            setStore(store);\r\n            setShiftStartValue(store.store_open_value);\r\n            setShiftEndValue(store.store_close_value);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getDatesAndLoadData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {renderController()}\r\n                        {renderSchedule()}\r\n                        {renderAvailability()}\r\n                        <SchedulesMobile\r\n                            usersMobile={usersMobile}\r\n                            days={days}\r\n                            times={times}\r\n                            store={store}\r\n                            presets={presets}\r\n                            getTimeValue={getTimeValue}\r\n                            handleFetchSchedule={handleFetchSchedule}\r\n                        />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { fetchAllRequestsByStatus, fetchAllRequests, updateRequestStatus } from '../../services/requests';\r\nimport Loader from 'react-loader-spinner';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminRequests() {\r\n    const [requests, setRequests] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [status, setStatus] = useState('All');\r\n\r\n    const handleUpdateRequestStatus = async (r_id, status) => {\r\n        const update = window.confirm('Confirm decision?');\r\n        if (update) {\r\n            setIsUpdating(true);\r\n            const tokenConfig = isAuthenticated();\r\n            const body = { status };\r\n\r\n            await updateRequestStatus(r_id, body, tokenConfig);\r\n            const requests = await fetchAllRequests();\r\n\r\n            setRequests(requests);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSortRequests = async (status) => {\r\n        setIsLoading(true);\r\n        if (status === 'All') {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        } else {\r\n            const requests = await fetchAllRequestsByStatus(status);\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const renderFilters = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <p className=\"mb-2\">View by</p>\r\n            <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 grid2\">\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'All' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('All')}\r\n                >\r\n                    All\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Pending' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Pending')}\r\n                >\r\n                    Pending\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Approved' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Approved')}\r\n                >\r\n                    Approved\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Denied' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Denied')}\r\n                >\r\n                    Denied\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        <div className=\"mt-2 grid2\">\r\n            {requests.length ? requests.map((request, r_i) => (\r\n                    <div key={r_i} className=\"my-2 p-1 border-solid-1 border-smooth box-shadow flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                        <div className=\"my-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                        <div className=\"w-100 grid2\">\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>{request.first_name} {request.last_name}</strong>\r\n                                <p>{request.title}</p>\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Submission date</strong>\r\n                                <p>{new Date(request.requested_at).toDateString()}</p>\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Requested dates</strong>\r\n                                {\r\n                                    request.requested_dates.map((rd, rd_i) => (\r\n                                        <p key={rd_i}>\r\n                                            {\r\n                                                // Add commas if more than one date\r\n                                                rd_i === request.requested_dates.length - 1\r\n                                                    ? new Date(rd).toDateString()\r\n                                                    : `${new Date(rd).toDateString()},`\r\n                                            }\r\n                                        </p>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Notes</strong>\r\n                                <p>{request.notes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Approve\r\n                            </button>\r\n                            <button\r\n                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Deny\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                    : (\r\n                        <p className=\"l2-offset-5 text-center mt-3\">\r\n                            None\r\n                        </p>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getRequests() {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getRequests();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                {renderFilters()}\r\n                {isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        renderRequests()\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchStoreHours, setStoreHours, updateStoreHours } from '../../services/store';\r\nimport { deletePreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminStore() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isSettingStoreHours, setIsSettingStoreHours] = useState(false);\r\n    const [updatingId, setUpdatingId] = useState('');\r\n\r\n    const [store_open, setStoreOpen] = useState('');\r\n    const [store_close, setStoreClose] = useState('');\r\n    const [store_open_value, setStoreOpenValue] = useState('');\r\n    const [store_close_value, setStoreCloseValue] = useState('');\r\n    const [store_open_level, setStoreOpenLevel] = useState('');\r\n    const [store_close_level, setStoreCloseLevel] = useState('');\r\n    const [showEditHours, setShowEditHours] = useState(false);\r\n    const [storeFirstTime, setStoreFirstTime] = useState(null);\r\n\r\n    const handleSetStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await setStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n\r\n    }\r\n\r\n    const handleUpdateStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await updateStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n    }\r\n\r\n    const handleSelectStoreOpen = (store_open) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_open) {\r\n                setStoreOpen(times[i].time);\r\n                setStoreOpenValue(times[i].value);\r\n                setStoreOpenLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectStoreClose = (store_close) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_close) {\r\n                setStoreClose(times[i].time);\r\n                setStoreCloseValue(times[i].value);\r\n                setStoreCloseLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDeletePreset = async (p_id) => {\r\n        const doDelete = window.confirm('Delete preset?');\r\n        if (doDelete) {\r\n            setIsUpdating(true);\r\n            setUpdatingId(p_id);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deletePreset(p_id, tokenConfig);\r\n            const presets = await fetchPresets();\r\n\r\n            setPresets(presets);\r\n            setIsUpdating(false);\r\n            setUpdatingId('');\r\n        }\r\n    }\r\n\r\n    const renderStoreHours = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <div className=\"my-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <p>Open</p>\r\n                <select\r\n                    value={store_open}\r\n                    onChange={({ target }) => handleSelectStoreOpen(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <p>Close</p>\r\n                <select\r\n                    value={store_close}\r\n                    onChange={({ target }) => handleSelectStoreClose(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => storeFirstTime === true ? handleSetStoreHours() : handleUpdateStoreHours()}\r\n                >\r\n                    Save\r\n                </button>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => setShowEditHours(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n            {\r\n                isSettingStoreHours &&\r\n                <Loader\r\n                    type='ThreeDots'\r\n                    height={10}\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const renderPresets = () => (\r\n        <div>\r\n            <h3 className=\"my-2\">Manage presets</h3>\r\n            {\r\n                presets && presets.map((preset, i) => (\r\n                    isUpdating && updatingId === preset.p_id\r\n                        ? <div className=\"text-center\">\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                                height={20}\r\n                            />\r\n                        </div>\r\n                        : <div key={i} className=\"relative\" id=\"manage-presets\" onClick={() => handleDeletePreset(preset.p_id)}>\r\n                            <p className=\"border-solid-1 py-1\">\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </p>\r\n                            <div className=\"absolute w-100 h-100 bg-dark-gray flex flex-center white pointer-no-u\">\r\n                                <p><i className=\"fas fa-trash-alt\"></i> Delete?</p>\r\n                            </div>\r\n                        </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const times = await fetchTimes();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n\r\n            setTimes(times);\r\n            setPresets(presets);\r\n\r\n            if (store) {\r\n                setStoreOpen(store.store_open);\r\n                setStoreClose(store.store_close);\r\n                setStoreOpenValue(store.store_open_value);\r\n                setStoreCloseValue(store.store_close_value);\r\n                setStoreOpenLevel(store.store_open_level);\r\n                setStoreCloseLevel(store.store_close_level);\r\n                setStoreFirstTime(false);\r\n            } else {\r\n                setStoreFirstTime(true);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"grid2\">\r\n                            <div className=\"text-center border-solid-1 border-smooth box-shadow xs10-offset-1 m8-offset-2 l7-offset-3\">\r\n                                <h3 className=\"my-2\">Store Hours</h3>\r\n                                {\r\n                                    showEditHours\r\n                                        ? renderStoreHours()\r\n                                        : <div>\r\n                                            {\r\n                                                store_open && store_close\r\n                                                    ? <p className=\"my-2\">{store_open.toString()} - {store_close.toString()}</p>\r\n                                                    : <p className=\"my-2\">N/A</p>\r\n                                            }\r\n                                            <button className=\"btn-med btn-hovered mt-1 mb-2\" onClick={() => setShowEditHours(true)}>Edit</button>\r\n                                        </div>\r\n                                }\r\n\r\n                                <hr className=\"my-3\" />\r\n\r\n                                {\r\n                                    renderPresets()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function UserHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid2\">\r\n            <Link to={ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_REQUESTS} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Availability</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-clock\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_PROFILE} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Profile</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchUser, editPassword, editUserGeneral } from '../../services/users';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function UserProfile() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [u_id, setUid] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id, tokenConfig);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword}>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            // verifiedUser is null on init load so add as dependency and check it again to fetch data\r\n            if (verifiedUser) {\r\n                const user = await fetchUser(verifiedUser.u_id);\r\n                setUid(user.u_id);\r\n                setUser(user);\r\n                setFirstName(user.first_name);\r\n                setLastName(user.last_name);\r\n                setEmail(user.email);\r\n                setPhone(user.phone);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function EditAvailability({ day, dayStart, dayEnd, setDayStart, setDayEnd, times, store }) {\r\n    return (\r\n        <div className=\"w-100 text-center\">\r\n            <p className=\"mt-2\">{day}</p>\r\n            <div className=\"grid2\">\r\n                <div className=\"xs5-offset-1 s4-offset-2 l4-offset-2\">\r\n                    <p>From</p>\r\n                    <select value={dayStart} onChange={({ target }) => setDayStart(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"xs5 s4 l4\">\r\n                    <p>To</p>\r\n                    <select value={dayEnd} onChange={({ target }) => setDayEnd(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport EditAvailability from './editAvailability';\r\nimport { editUserAvailability, fetchUserAvailability } from '../../services/users';\r\nimport { fetchTimes } from '../../services/presets';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function UserAvailability() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [showEditAvailability, setShowEditAvailability] = useState(false);\r\n\r\n    const [availability, setAvailability] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n\r\n    const [monStart, setMonStart] = useState('');\r\n    const [monEnd, setMonEnd] = useState('');\r\n    const [tueStart, setTueStart] = useState('');\r\n    const [tueEnd, setTueEnd] = useState('');\r\n    const [wedStart, setWedStart] = useState('');\r\n    const [wedEnd, setWedEnd] = useState('');\r\n    const [thurStart, setThurStart] = useState('');\r\n    const [thurEnd, setThurEnd] = useState('');\r\n    const [friStart, setFriStart] = useState('');\r\n    const [friEnd, setFriEnd] = useState('');\r\n    const [satStart, setSatStart] = useState('');\r\n    const [satEnd, setSatEnd] = useState('');\r\n    const [sunStart, setSunStart] = useState('');\r\n    const [sunEnd, setSunEnd] = useState('');\r\n\r\n    const days = [\r\n        {\r\n            day: \"Monday\",\r\n            dayStart: monStart,\r\n            dayEnd: monEnd,\r\n            setDayStart: setMonStart,\r\n            setDayEnd: setMonEnd\r\n        },\r\n        {\r\n            day: \"Tuesday\",\r\n            dayStart: tueStart,\r\n            dayEnd: tueEnd,\r\n            setDayStart: setTueStart,\r\n            setDayEnd: setTueEnd\r\n        },\r\n        {\r\n            day: \"Wednesday\",\r\n            dayStart: wedStart,\r\n            dayEnd: wedEnd,\r\n            setDayStart: setWedStart,\r\n            setDayEnd: setWedEnd\r\n        },\r\n        {\r\n            day: \"Thursday\",\r\n            dayStart: thurStart,\r\n            dayEnd: thurEnd,\r\n            setDayStart: setThurStart,\r\n            setDayEnd: setThurEnd\r\n        },\r\n        {\r\n            day: \"Friday\",\r\n            dayStart: friStart,\r\n            dayEnd: friEnd,\r\n            setDayStart: setFriStart,\r\n            setDayEnd: setFriEnd\r\n        },\r\n        {\r\n            day: \"Saturday\",\r\n            dayStart: satStart,\r\n            dayEnd: satEnd,\r\n            setDayStart: setSatStart,\r\n            setDayEnd: setSatEnd\r\n        },\r\n        {\r\n            day: \"Sunday\",\r\n            dayStart: sunStart,\r\n            dayEnd: sunEnd,\r\n            setDayStart: setSunStart,\r\n            setDayEnd: setSunEnd\r\n        },\r\n    ]\r\n\r\n    const handleShowEditAvailability = () => {\r\n        for (let i = 0; i < availability.length; i++) {\r\n            switch (availability[i].day) {\r\n                case 'Monday':\r\n                    setMonStart(availability[i].start_time);\r\n                    setMonEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Tuesday':\r\n                    setTueStart(availability[i].start_time);\r\n                    setTueEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Wednesday':\r\n                    setWedStart(availability[i].start_time);\r\n                    setWedEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Thursday':\r\n                    setThurStart(availability[i].start_time);\r\n                    setThurEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Friday':\r\n                    setFriStart(availability[i].start_time);\r\n                    setFriEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Saturday':\r\n                    setSatStart(availability[i].start_time);\r\n                    setSatEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Sunday':\r\n                    setSunStart(availability[i].start_time);\r\n                    setSunEnd(availability[i].end_time);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setShowEditAvailability(true);\r\n    }\r\n\r\n    const handleSaveAvailability = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        let data = [];\r\n        let counter = 1;\r\n\r\n        for (let i = 0; i < days.length; i++) {\r\n            let obj = {\r\n                u_id: verifiedUser.u_id,\r\n                day: days[i].day,\r\n                start_time: days[i].dayStart,\r\n                end_time: days[i].dayEnd,\r\n                level: counter++\r\n            }\r\n\r\n            data.push(obj);\r\n        }\r\n\r\n        // Check if N/A is paired with a time value\r\n        for (let i = 0; i < data.length; i++) {\r\n            if ((data[i].start_time === 'N/A' && data[i].end_time !== 'N/A') ||\r\n                (data[i].start_time !== 'N/A' && data[i].end_time === 'N/A')) {\r\n                setIsUpdating(false);\r\n                return alert('N/A must only be N/A');\r\n            }\r\n        }\r\n\r\n        // Availability for each day is one record per update in db\r\n        for (let i = 0; i < data.length; i++) {\r\n            await editUserAvailability(availability[i].a_id, data[i], tokenConfig);\r\n        }\r\n\r\n        const newAvail = await fetchUserAvailability(verifiedUser.u_id);\r\n        setAvailability(newAvail);\r\n        setIsUpdating(false);\r\n        setShowEditAvailability(false);\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3\">\r\n                <div>\r\n                    {\r\n                        availability && availability.map((avail, i) => (\r\n                            <div key={i} className=\"text-center my-2\">\r\n                                <p className=\"my-1\"><strong>{avail.day}</strong></p>\r\n                                <p>{avail.start_time} - {avail.end_time}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center my-5\">\r\n                    <button className=\"btn-sm btn-hovered\" onClick={handleShowEditAvailability}>Edit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3 text-center\">\r\n                {days.map(({ day, dayStart, dayEnd, setDayStart, setDayEnd }, i) => (\r\n                    <div key={i}>\r\n                        <EditAvailability\r\n                            day={day}\r\n                            dayStart={dayStart}\r\n                            dayEnd={dayEnd}\r\n                            setDayStart={setDayStart}\r\n                            setDayEnd={setDayEnd}\r\n                            times={times}\r\n                            store={store}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <div className=\"m-2\">\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => handleSaveAvailability()}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => setShowEditAvailability(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n\r\n                {\r\n                    isUpdating &&\r\n                    <div className=\"text-center my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            height={10}\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const availability = await fetchUserAvailability(verifiedUser.u_id);\r\n                const times = await fetchTimes();\r\n                const store = await fetchStoreHours();\r\n\r\n                setAvailability(availability);\r\n                setTimes(times);\r\n                setStore(store);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <>\r\n                        {\r\n                            showEditAvailability\r\n                                ? renderEditAvailability()\r\n                                : renderAvailability()\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createRequest, deleteRequest, fetchRequestsByUser } from '../../services/requests';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserRequests() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [createNewRequest, setCreateNewRequest] = useState(false);\r\n    const [requests, setRequests] = useState(null);\r\n\r\n    const [notes, setNotes] = useState('');\r\n    const [dates, setDates] = useState([]);\r\n    const [didUpdate, setDidUpdate] = useState(false); // Used to refresh date inputs after selection\r\n    const [numOfDateInputs, setNumOfDateInputs] = useState(1);\r\n\r\n    const handleDeleteRequest = async (r_id) => {\r\n        const doDelete = window.confirm('Delete request?');\r\n        if (doDelete) {\r\n            setIsDeleting(true);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deleteRequest(r_id, tokenConfig);\r\n\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            setRequests(requests);\r\n            setIsDeleting(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateRequest = async () => {\r\n        const request = window.confirm('Submit request?');\r\n        if (request) {\r\n            setIsSubmitting(true);\r\n            const tokenConfig = isAuthenticated();\r\n            let datesArr = dates;\r\n\r\n            for (let i = 0; i < datesArr.length; i++) {\r\n                datesArr[i] = new Date(datesArr[i]).toISOString();\r\n            }\r\n\r\n            const body = {\r\n                u_id: verifiedUser.u_id,\r\n                requested_at: format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                notes,\r\n                requested_dates: datesArr\r\n            }\r\n\r\n            await createRequest(body, tokenConfig);\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n\r\n            setRequests(requests);\r\n            setCreateNewRequest(false);\r\n            clearForm();\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelCreateNewRequest = () => {\r\n        setCreateNewRequest(false);\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNumOfDateInputs(1);\r\n        setDates([]);\r\n        setNotes('');\r\n    }\r\n\r\n    const handleAddDate = (index, newDate) => {\r\n        if (dates[index] !== undefined) {\r\n            let arrCopy = dates;\r\n            // eslint-disable-next-line\r\n            // let removed = dates.splice(index, 1, newDate); // Replace old date with selected date\r\n            arrCopy.push(newDate)\r\n            setDates(arrCopy);\r\n            setDidUpdate(!didUpdate); // Refresh date input values\r\n        }\r\n        else {\r\n            setDates([...dates, newDate]);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDate = (index) => {\r\n        let arrCopy = dates;\r\n        // eslint-disable-next-line\r\n        let removed = arrCopy.splice(index, 1); // Remove selected date from dates array\r\n        // let removed = arrCopy.pop();\r\n        setDates(arrCopy);\r\n        setNumOfDateInputs(numOfDateInputs - 1);\r\n    }\r\n\r\n    // First date input\r\n    const DateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Additional date inputs\r\n    const XDateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n                <button className=\"btn-sm btn-hovered mt-2\" onClick={() => handleRemoveDate(index)}>\r\n                    <i className=\"fas fa-minus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Render date inputs based on numOfDateInputs\r\n    const renderDateElements = () => {\r\n        let dateElements = [];\r\n        for (let i = 0; i < numOfDateInputs; i++) {\r\n            if (numOfDateInputs > 1 && i === numOfDateInputs - 1) {\r\n                // Render additional date inputs\r\n                dateElements.push(<XDateElement key={i} index={i} />)\r\n            } else {\r\n                // Render initial date input\r\n                dateElements.push(<DateElement key={i} index={i} />)\r\n            }\r\n        }\r\n\r\n        return dateElements; // Return date inputs to render\r\n    }\r\n\r\n    const renderNewRequest = () => (\r\n        <div className=\"border-solid-1 border-smooth my-2 flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n            <div className=\"w-50\">\r\n                {\r\n                    // Render custom date elements and functions from above\r\n                    renderDateElements()\r\n                }\r\n                <button\r\n                    className={`btn-sm mb-2 ${dates.length === numOfDateInputs && 'btn-hovered'}`}\r\n                    disabled={dates.length !== numOfDateInputs} // Disable if next date is not yet selected\r\n                    onClick={() => setNumOfDateInputs(numOfDateInputs + 1)}\r\n                >\r\n                    <i className=\"fas fa-plus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <p>Notes</p>\r\n                <textarea className=\"h-10 p-1\" onChange={({ target }) => setNotes(target.value)}></textarea>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCreateRequest()}>Submit</button>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCancelCreateNewRequest()}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        requests && requests.map((request, i) => (\r\n            <div key={i} className=\"border-solid-1 border-smooth my-2 text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"flex\">\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Submission date</strong>\r\n                            <p>{new Date(request.requested_at).toLocaleDateString()}</p>\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Requested dates</strong>\r\n                            {\r\n                                request.requested_dates.map((rd, rd_i) => (\r\n                                    <p key={rd_i}>\r\n                                        {\r\n                                            rd_i === request.requested_dates.length - 1\r\n                                                ? new Date(rd).toDateString()\r\n                                                : `${new Date(rd).toDateString()},`\r\n                                        }\r\n                                    </p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <strong>Notes</strong>\r\n                            <p>{request.notes}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className=\"btn-sm btn-hovered\"\r\n                        onClick={() => handleDeleteRequest(request.r_id)}\r\n                        disabled={isDeleting}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n                setRequests(requests);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"grid2\">\r\n                        {renderRequests()}\r\n                        {\r\n                            createNewRequest\r\n                                ? renderNewRequest()\r\n                                : <div className=\"mt-4 xs12 s10-offset-1 m8-offset-2 l6-offset-3 text-center\">\r\n                                    <button className=\"btn-lg btn-hovered\" onClick={() => setCreateNewRequest(true)}>\r\n                                        <p><i className=\"fas fa-plus\"></i> New Request</p>\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllUsersSchedulesByDate, fetchAllUsersSchedulesByDateMobile } from '../../services/shifts';\r\nimport { startOfWeek, format } from 'date-fns';\r\n\r\nexport default function UserSchedules() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const [usersMobile, setUsersMobile] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderBlank = (a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`${time.start_time === 'N/A' && 'bg-black'}`}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"bg-x-light-green\"\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        <div className=\"mt-5\">\r\n            <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"bg-x-light-gray\">\r\n                            <strong>Name</strong>\r\n                        </td>\r\n                        {\r\n                            days && days.map((day, i) => (\r\n                                <td key={i} className=\"bg-x-light-gray\">\r\n                                    <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                    <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                </td>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                    {\r\n                        users && users.map((user, u_i) => (\r\n                            <tr key={u_i}>\r\n                                <td className=\"py-1\">\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, a_i) => (\r\n                                        user.shifts[a_i].shift_end === null\r\n                                            ? renderBlank(a_i, time)\r\n                                            : renderShift(a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n    const renderMobileSchedules = () => (\r\n        <div className=\"schedules-mobile\">\r\n            {\r\n                isLoading ? (\r\n                    <Loader\r\n                        type='Oval'\r\n                        color='rgb(50, 110, 150)'\r\n                        className=\"text-center mt-4\"\r\n                    />\r\n                ) : (\r\n                    usersMobile.map((user, i) => (\r\n                        <div key={i} className=\"flex\">\r\n                            {user.label ? (\r\n                                <div className=\"w-100 border-x bg-x-light-gray text-center\">\r\n                                    <p><strong>{format(new Date(user.shift_start), \"PP\")}</strong></p>\r\n                                </div>\r\n                            ) : (\r\n                            <>\r\n                                <div className=\"flex flex-col flex-center border-solid-1 p-1\" style={{ width: \"20%\" }}>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[0]}</strong></p>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[2]}</strong></p>\r\n                                </div>\r\n                                <div className=\"w-80 border-solid-1 p-1\">\r\n                                    <p>\r\n                                        {new Date(user.shift_start).toLocaleTimeString().replace(\":00 \", \" \")} -\r\n                                        {new Date(user.shift_end).toLocaleTimeString().replace(\":00 \", \" \")}\r\n                                    </p>\r\n                                    <p><strong>{user.first_name} {user.last_name}</strong></p>\r\n                                    <p><em>{user.title}</em></p>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let daysArray = [];\r\n            let dateToAdd = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n            for (let i = 0; i < 7; i++) {\r\n                daysArray.push(dateToAdd.toISOString());\r\n                dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n            }\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(daysArray[0], daysArray[6]);\r\n            const usersMobile = await fetchAllUsersSchedulesByDateMobile(daysArray[0], daysArray[6]);\r\n\r\n            // Add date labels for mobile schedules display\r\n            for (let i = 0; i < daysArray.length; i++) {\r\n                usersMobile.push({ shift_start: daysArray[i], label: true });\r\n            }\r\n            usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n\r\n            setDays(daysArray);\r\n            setUsers(users);\r\n            setUsersMobile(usersMobile);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <div>\r\n                            {renderSchedule()}\r\n                            {renderMobileSchedules()}\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        // ...rest is the path from props\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function UserRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function AuthRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.USER_HOME,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            } \r\n            else if (user && user.is_admin) {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_HOME,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n            else {\r\n                return <Component />;\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","// Return blank page during page load\r\n// Prevents the flashing of the sign in page during page reload\r\nconst IsLoaded = ({ isLoading, children }) => {\r\n    while (isLoading) return null\r\n    return children\r\n}\r\n\r\nexport default IsLoaded;","import './App.css';\nimport { useEffect, useContext, useState } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { isAuthenticated, verifyUser } from './services/auth';\nimport { UserContext } from './contexts/userContext';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Header from './components/header';\nimport Navbar from './components/navbar';\nimport SignIn from './components/signIn';\nimport AdminSignIn from './components/adminSignIn';\n\nimport AdminHome from './components/admin/home';\nimport AdminEmployees from './components/admin/employees';\nimport AdminEmployee from './components/admin/employee';\nimport AdminNewEmployee from './components/admin/newEmployee';\nimport AdminSchedules from './components/admin/schedules';\nimport AdminRequests from './components/admin/requests';\nimport AdminStore from './components/admin/store';\n\nimport UserHome from './components/user/home';\nimport UserProfile from './components/user/profile';\nimport UserAvailability from './components/user/availability';\nimport UserRequests from './components/user/requests';\nimport UserSchedules from './components/user/schedules';\n\nimport ProtectedRoute from './helpers/protectedRoute';\nimport UserRoute from './helpers/userRoute';\nimport AuthRoute from './helpers/authRoute';\nimport IsLoaded from './isLoaded';\n\nfunction App() {\n  const { verifiedUser, setVerifiedUser } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function getVerifiedUser() {\n      const tokenConfig = isAuthenticated();\n      if (tokenConfig) {\n        const verifiedUser = await verifyUser(tokenConfig);\n        setVerifiedUser(verifiedUser); // Set verified user in context for header\n      }\n      setIsLoading(false);\n    }\n\n    getVerifiedUser();\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Router>\n      <IsLoaded isLoading={isLoading} children>\n        <Header />\n        <div className={`relative ${verifiedUser && \"container-grid\"}`}>\n          <Navbar />\n          <div className=\"container\">\n            <div className=\"container-inner\">\n              <Switch>\n                <AuthRoute user={verifiedUser} exact path={ROUTES.SIGN_IN} component={SignIn} />\n                <AuthRoute user={verifiedUser} exact path={ROUTES.ADMIN_SIGN_IN} component={AdminSignIn} />\n\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_HOME} component={AdminHome} />\n                <ProtectedRoute exact user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEES} component={AdminEmployees} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_NEW_EMPLOYEE} component={AdminNewEmployee} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEE} component={AdminEmployee} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_SCHEDULES} component={AdminSchedules} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_REQUESTS} component={AdminRequests} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_STORE} component={AdminStore} />\n\n                <UserRoute user={verifiedUser} path={ROUTES.USER_HOME} component={UserHome} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_PROFILE} component={UserProfile} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_AVAILABILITY} component={UserAvailability} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_REQUESTS} component={UserRequests} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_SCHEDULES} component={UserSchedules} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </IsLoaded>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createContext, useState, useEffect } from 'react';\r\n\r\nexport const DimensionContext = createContext();\r\n\r\nexport default function DimensionContextProvider({ children }) {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [isMobile, setIsMobile] = useState(false);\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth);\r\n\r\n        if (window.innerWidth < 740) setIsMobile(true);\r\n        else setIsMobile(false);\r\n\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [width])\r\n\r\n    return (\r\n        <DimensionContext.Provider value={{ isMobile }}>\r\n            {children}\r\n        </DimensionContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport DimensionContextProvider from './contexts/dimensionContext';\nimport UserContextProvider from './contexts/userContext';\n\nReactDOM.render(\n  <UserContextProvider>\n    <DimensionContextProvider>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n    </DimensionContextProvider>\n  </UserContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}