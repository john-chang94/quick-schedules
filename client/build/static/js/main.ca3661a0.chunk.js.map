{"version":3,"sources":["constants/routes.js","services/auth.js","contexts/userContext.js","contexts/dimensionContext.js","components/header.js","components/admin/navbar.js","components/signIn.js","components/adminSignIn.js","components/admin/home.js","services/users.js","components/admin/employees.js","services/roles.js","components/admin/employee.js","components/admin/newEmployee.js","services/presets.js","services/shifts.js","services/requests.js","services/store.js","components/admin/schedules.js","components/admin/requests.js","components/admin/store.js","components/user/home.js","components/user/profile.js","components/user/editAvailability.js","components/user/availability.js","components/user/requests.js","components/user/schedules.js","helpers/protectedRoute.js","helpers/userRoute.js","isLoaded.js","App.js","index.js"],"names":["SIGN_IN","ADMIN_SIGN_IN","ADMIN_HOME","ADMIN_EMPLOYEES","ADMIN_NEW_EMPLOYEE","ADMIN_SCHEDULES","ADMIN_REQUESTS","ADMIN_STORE","USER_HOME","USER_SCHEDULES","USER_REQUESTS","USER_AVAILABILITY","USER_PROFILE","signIn","credentials","a","axios","post","res","data","error","response","createUser","body","tokenConfig","verifyUser","get","isAuthenticated","token","sessionStorage","getItem","headers","UserContext","createContext","UserContextProvider","children","useState","verifiedUser","setVerifiedUser","Provider","value","DimensionContext","DimensionContextProvider","window","innerWidth","width","setWidth","isMobile","setIsMobile","setWindowWidth","useEffect","addEventListener","removeEventListener","Header","useContext","history","useHistory","className","style","marginRight","first_name","marginTop","onClick","removeItem","is_admin","push","ROUTES","Navbar","dropDown","setDropDown","handleClick","to","SignIn","email","setEmail","password","setPassword","setError","isInvalid","handleSignIn","e","preventDefault","user","alert","setItem","onSubmit","type","onChange","target","disabled","AdminSignIn","AdminHome","id","fetchAllUsers","fetchUser","u_id","editPassword","put","editUserGeneral","editUserInfo","fetchUserAvailability","fetchAllUsersAvailabilities","editUserAvailability","a_id","AdminEmployees","users","setUsers","isLoading","setIsLoading","getUsers","color","map","i","backgroundColor","acn","title","last_name","phone","fetchRoles","AdminEmployee","useParams","setUser","roles","setRoles","success","setSuccess","isUpdating","setIsUpdating","setFirstName","setLastName","setPhone","role_id","setRoleId","hourly_pay","setHourlyPay","started_at","setStartedAt","showEditGeneral","setShowEditGeneral","showEditInfo","setShowEditInfo","new_password","setNewPassword","confirm_new_password","setConfirmNewPassword","handleUpdatePassword","handleUpdateUserGeneral","handleUpdateUserInfo","updated_at","Date","now","toLocaleDateString","getData","defaultValue","parseInt","role","level","placeholder","AdminNewEmployee","handleSubmit","getRoles","fetchTimes","createPreset","fetchPresets","deletePreset","p_id","delete","createShift","createCopyOfWeeklySchedule","fetchAllUsersSchedulesByDate","start_date","end_date","updateShift","s_id","deleteShift","fetchAllRequests","fetchRequestsByUser","fetchAllRequestsByStatus","status","fetchAllRequestsByStatusAndDate","weekStart","weekEnd","updateRequestStatus","r_id","createRequest","deleteRequest","fetchStoreHours","setStoreHours","updateStoreHours","AdminSchedules","availabilities","setAvailabilities","requests","setRequests","days","setDays","times","setTimes","presets","setPresets","store","setStore","isCopying","setIsCopying","isLoadingSchedule","setIsLoadingSchedule","startOfToday","dateISO","setDateISO","setWeekStart","setWeekEnd","shift_start_value","setShiftStartValue","shift_end_value","setShiftEndValue","setLevel","userData","setUserData","availabilityIndex","setAvailabilityIndex","getDatesOfTheWeek","selectedDate","date","startOfWeek","weekStartsOn","daysArray","dateToAdd","toISOString","setDate","getDate","handleSaveShift","dayIndex","startTimeHour","split","startTimeMinute","endTimeHour","endTimeMinute","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","shift_start","getFullYear","getMonth","toLocaleString","shift_end","handleCopyWeeklySchedule","confirm","shifts","length","j","shift","format","addWeeks","parseISO","updated","handleNextWeek","handleSavePreset","time","newPresets","handleRemoveShift","getTimeValue","hour","getHours","min","getMinutes","toString","getTime","toLocaleTimeString","replace","renderShift","a_i","index","startStartValue","endStartValue","handleEditShift","renderBlank","start_time","store_open_value","store_close_value","handleUserClick","renderEditShift","shiftValue","preset","parseFloat","store_open_level","store_close_level","height","border","getDatesAndLoadData","day","availability","end_time","subWeeks","handlePreviousWeek","request","requested_dates","r_i","u_i","AdminRequests","setStatus","handleUpdateRequestStatus","handleSortRequests","getRequests","requested_at","toDateString","rd","rd_i","notes","AdminStore","isSettingStoreHours","setIsSettingStoreHours","updatingId","setUpdatingId","store_open","setStoreOpen","store_close","setStoreClose","setStoreOpenValue","setStoreCloseValue","setStoreOpenLevel","setStoreCloseLevel","showEditHours","setShowEditHours","storeFirstTime","setStoreFirstTime","handleSetStoreHours","setTimeout","saveData","handleUpdateStoreHours","handleDeletePreset","handleSelectStoreOpen","handleSelectStoreClose","UserHome","UserProfile","setUid","EditAvailability","dayStart","dayEnd","setDayStart","setDayEnd","UserAvailability","showEditAvailability","setShowEditAvailability","setAvailability","monStart","setMonStart","monEnd","setMonEnd","tueStart","setTueStart","tueEnd","setTueEnd","wedStart","setWedStart","wedEnd","setWedEnd","thurStart","setThurStart","thurEnd","setThurEnd","friStart","setFriStart","friEnd","setFriEnd","satStart","setSatStart","satEnd","setSatEnd","sunStart","setSunStart","sunEnd","setSunEnd","handleShowEditAvailability","handleSaveAvailability","counter","obj","newAvail","avail","UserRequests","isDeleting","setIsDeleting","isSubmitting","setIsSubmitting","createNewRequest","setCreateNewRequest","setNotes","dates","setDates","didUpdate","setDidUpdate","numOfDateInputs","setNumOfDateInputs","handleDeleteRequest","handleCreateRequest","datesArr","clearForm","handleAddDate","newDate","undefined","arrCopy","DateElement","XDateElement","splice","handleRemoveDate","renderDateElements","dateElements","UserSchedules","ProtectedRoute","Component","component","rest","render","location","pathname","state","from","UserRoute","IsLoaded","App","getVerifiedUser","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca3661a0.chunk.js","sourcesContent":["export const SIGN_IN = '/';\r\nexport const ADMIN_SIGN_IN = '/admin'\r\n\r\nexport const ADMIN_HOME = '/admin/home';\r\nexport const ADMIN_EMPLOYEES = '/admin/employees'; // Need 'exact' for path in App.js\r\nexport const ADMIN_EMPLOYEE = '/admin/employees/:u_id';\r\nexport const ADMIN_NEW_EMPLOYEE = '/admin/employees/new';\r\nexport const ADMIN_SCHEDULES = '/admin/schedules';\r\nexport const ADMIN_REQUESTS = '/admin/requests';\r\nexport const ADMIN_STORE = '/admin/store';\r\n\r\nexport const USER_HOME = '/home';\r\nexport const USER_SCHEDULES = '/schedules';\r\nexport const USER_REQUESTS = '/requests';\r\nexport const USER_AVAILABILITY = '/availability';\r\nexport const USER_PROFILE = '/profile';","import axios from 'axios';\r\n\r\nexport const signIn = async (credentials) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/auth/signin', credentials);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createUser = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/auth/register', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const verifyUser = async (tokenConfig) => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/auth/verify', tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response };\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        const tokenConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n        return tokenConfig;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport default function UserContextProvider({ children }) {\r\n    const [verifiedUser, setVerifiedUser] = useState(null);\r\n    return (\r\n        <UserContext.Provider value={{ verifiedUser, setVerifiedUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import { createContext, useState, useEffect } from 'react';\r\n\r\nexport const DimensionContext = createContext();\r\n\r\nexport default function DimensionContextProvider({ children }) {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [isMobile, setIsMobile] = useState(false);\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth);\r\n\r\n        if (window.innerWidth < 740) setIsMobile(true);\r\n        else setIsMobile(false);\r\n\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [width])\r\n\r\n    return (\r\n        <DimensionContext.Provider value={{ isMobile }}>\r\n            {children}\r\n        </DimensionContext.Provider>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Header() {\r\n    const { verifiedUser, setVerifiedUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        sessionStorage.removeItem('token');\r\n        setVerifiedUser(null); // Remove verified user from context\r\n        if (verifiedUser.is_admin) history.push(ROUTES.ADMIN_SIGN_IN);\r\n        else history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            {\r\n                verifiedUser &&\r\n                <div className=\"flex\" style={{ marginRight: \"2%\" }}>\r\n                    <div className=\"mr-5\">\r\n                        <p className=\"off-white\">Welcome, {verifiedUser && verifiedUser.first_name}</p>\r\n                    </div>\r\n                    <div className=\"pointer-no-u\" style={{ marginTop: '2px' }} onClick={handleSignOut}>\r\n                        <p className=\"off-white\"><i className=\"fas fa-sign-out-alt text-6\"></i></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { DimensionContext } from '../../contexts/dimensionContext';\r\n\r\nexport default function Navbar() {\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const { verifiedUser } = useContext(UserContext);\r\n    const { isMobile } = useContext(DimensionContext);\r\n\r\n    // Navbar for large screens\r\n    const renderSideNav = () => (\r\n        <div className=\"navbar text-center\">\r\n            <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <h4>Employees</h4>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-users\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <h4>Schedules</h4>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-calendar-alt\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <h4>Requests</h4>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-inbox\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_STORE} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <h4>Store</h4>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-wrench\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    // Navbar for small screens\r\n    const renderTopNav = () => {\r\n        return dropDown ? (\r\n            <div className=\"navbar-top px-7 py-1 text-center\">\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"s12 m6 l3 text-no-u\">\r\n                    <div className=\"py-4 off-white\">\r\n                        <p className=\"text-6\">Employees</p>\r\n                    </div>\r\n                </Link>\r\n                <Link to={ROUTES.ADMIN_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                    <div className=\"py-4 off-white\">\r\n                        <p className=\"text-6\">Schedules</p>\r\n                    </div>\r\n                </Link>\r\n                <Link to={ROUTES.ADMIN_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                    <div className=\"py-4 off-white\">\r\n                        <p className=\"text-6\">Requests</p>\r\n                    </div>\r\n                </Link>\r\n                <Link to={ROUTES.ADMIN_STORE} className=\"s12 m6 l3 text-no-u\">\r\n                    <div className=\"py-4 off-white\">\r\n                        <p className=\"text-6\">Store</p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        ) : (\r\n            null\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClick = () => setDropDown(!dropDown);\r\n\r\n        // Allows user to close dropdown menu when clicking elsewhere\r\n        if (dropDown) {\r\n            window.addEventListener(\"click\", handleClick);\r\n        }\r\n\r\n        return () => window.removeEventListener(\"click\", handleClick);\r\n    }, [dropDown])\r\n\r\n    if (!verifiedUser) return null;\r\n\r\n    return isMobile ? (\r\n        <div className=\"dropdown off-white text-7 pointer\" onClick={() => setDropDown(!dropDown)}>\r\n            <i className=\"fas fa-bars\"></i>\r\n            {renderTopNav()}\r\n        </div>\r\n    ) : (\r\n        renderSideNav()\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                alert('Please sign in through the admin portal');\r\n                history.push(ROUTES.ADMIN_SIGN_IN);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.USER_HOME);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 l8-offset-2\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function AdminSignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.ADMIN_HOME);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                alert('Please sign in through the user portal');\r\n                history.push(ROUTES.SIGN_IN);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 l8-offset-2\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function AdminHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid2\">\r\n            <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Employees</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-users\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_SCHEDULES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_REQUESTS} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_STORE} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Store</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/users');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/users/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editPassword = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/reset-pw/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserGeneral = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserInfo = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/system/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUserAvailability = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/users/availability/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersAvailabilities = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/users/availability/all');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserAvailability = async (a_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/availability/${a_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllUsers } from '../../services/users';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployees() {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const handleClickUser = (u_id) => {\r\n        history.push(`${ROUTES.ADMIN_EMPLOYEES}/${u_id}`);\r\n    }\r\n\r\n    const handleAddEmployee = () => {\r\n        history.push(ROUTES.ADMIN_NEW_EMPLOYEE);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const users = await fetchAllUsers();\r\n            if (users) setUsers(users);\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth); // Set default width on page load\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <div className=\"mt-6 mb-4 flex flex-center\">\r\n                            <button className=\"btn-x-lg btn-hovered\" onClick={handleAddEmployee}>\r\n                                <p>Add Employee</p>\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <table id=\"users-list\" className=\"border-collapse w-100 text-center\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"p-3\">Role</th>\r\n                                        <th className=\"p-3\">Name</th>\r\n                                        <th className=\"p-3\">Email</th>\r\n                                        <th className=\"p-3\">Phone</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users && users.map((user, i) => (\r\n                                            <tr\r\n                                                key={i}\r\n                                                className=\"pointer\"\r\n                                                onClick={() => handleClickUser(user.u_id)}\r\n                                                style={i % 2 === 0\r\n                                                    ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                                            >\r\n                                                <td className=\"p-3\">{width < 380 ? user.acn : user.title}</td>\r\n                                                <td className=\"p-3\">{user.first_name} {user.last_name}</td>\r\n                                                <td className=\"p-3\">{user.email}</td>\r\n                                                <td className=\"p-3\">{user.phone}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/roles');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { editPassword, editUserGeneral, editUserInfo, fetchUser } from '../../services/users';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployee() {\r\n    const { u_id } = useParams();\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n    const [showEditInfo, setShowEditInfo] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserInfo = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, hourly_pay, started_at, updated_at: new Date(Date.now()).toLocaleDateString() };\r\n\r\n        const res = await editUserInfo(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditInfo(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderUserInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Role</h4>\r\n                <p>{user.title}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Hourly Pay</h4>\r\n                <p>{verifiedUser.level <= user.level ? user.hourly_pay : '**'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Started At</h4>\r\n                <p>{new Date(user.started_at).toLocaleDateString()}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Updated At</h4>\r\n                <p>{user.updated_at ? new Date(user.updated_at).toLocaleDateString() : 'N/A'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button\r\n                    className={`btn-med ${verifiedUser.level > user.level ? '' : 'btn-hovered'}`}\r\n                    onClick={() => setShowEditInfo(true)}\r\n                    disabled={verifiedUser.level > user.level}\r\n                >\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>Role</p>\r\n                <select defaultValue={user.role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                    {\r\n                        roles && roles.map((role, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={role.role_id}\r\n                            >\r\n                                {role.title}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Hourly Pay</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={hourly_pay}\r\n                    onChange={({ target }) => setHourlyPay(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Started At</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={new Date(started_at).toLocaleDateString()}\r\n                    onChange={({ target }) => setStartedAt(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserInfo()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditInfo(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} className=\"\">\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(u_id);\r\n            const roles = await fetchRoles();\r\n            setUser(user);\r\n            setRoles(roles);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setRoleId(user.role_id);\r\n            setHourlyPay(user.hourly_pay);\r\n            setStartedAt(user.started_at);\r\n            setIsLoading(false);\r\n        }\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    showEditInfo\r\n                                        ? renderEditInfo()\r\n                                        : renderUserInfo()\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    verifiedUser && verifiedUser.u_id === user.u_id &&\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport { createUser } from '../../services/auth';\r\n\r\nexport default function AdminNewEmployee() {\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const [role_id, setRoleId] = useState(6);\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, first_name, last_name, email, phone, password, hourly_pay, started_at };\r\n\r\n        const res = await createUser(body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            setError('');\r\n            setRoleId('');\r\n            setFirstName('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setPhone('');\r\n            setPassword('');\r\n            setHourlyPay('');\r\n            setSuccess(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRoles() {\r\n            const roles = await fetchRoles();\r\n            setRoles(roles);\r\n        }\r\n\r\n        getRoles();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            <div className=\"grid2\">\r\n                <form onSubmit={handleSubmit} className=\"xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                    <div className=\"my-2\">\r\n                        <p>First Name</p>\r\n                        <input type=\"text\" value={first_name} className=\"form-input\" onChange={({ target }) => setFirstName(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Last Name</p>\r\n                        <input type=\"text\" value={last_name} className=\"form-input\" onChange={({ target }) => setLastName(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" value={email} className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Phone</p>\r\n                        <input type=\"text\" value={phone} className=\"form-input\" onChange={({ target }) => setPhone(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" value={password} className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Hourly Pay</p>\r\n                        <input type=\"text\" value={hourly_pay} className=\"form-input\" onChange={({ target }) => setHourlyPay(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Starting Date</p>\r\n                        <input type=\"date\" value={started_at} className=\"form-input\" onChange={({ target }) => setStartedAt(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Role</p>\r\n                        <select value={role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                            {\r\n                                roles && roles.map((role, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={role.role_id}\r\n                                    >\r\n                                        {role.title}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"text-center mt-5\">\r\n                        <button className=\"btn-med btn-hovered\">Submit</button>\r\n                    </div>\r\n                    {error ? <p className=\"red mt-3\">{error}</p> : null}\r\n                    {success ? <p className=\"green mt-3\">Profile successfully added!</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchTimes = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/presets/times');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createPreset = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/presets', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchPresets = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/presets');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deletePreset = async (p_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:5000/presets/${p_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const createShift = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/shifts', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createCopyOfWeeklySchedule = async (body) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/shifts/copy', body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchShiftsByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/shifts/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/shifts/all/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateShift = async (s_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/shifts/${s_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteShift = async (s_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:5000/shifts/${s_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllRequests = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/requests');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchRequestsByUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/requests/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatus = async (status) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/requests/status/${status}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatusAndDate = async (status, weekStart, weekEnd) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/requests/status/${status}/${weekStart}/${weekEnd}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateRequestStatus = async (r_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/requests/${r_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createRequest = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/requests', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async (r_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:5000/requests/${r_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchStoreHours = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/store');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const setStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put('http://localhost:5000/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { createPreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { createShift, fetchAllUsersSchedulesByDate, deleteShift, updateShift, createCopyOfWeeklySchedule } from '../../services/shifts';\r\nimport { fetchAllUsersAvailabilities } from '../../services/users';\r\nimport { startOfToday, startOfWeek, addWeeks, subWeeks, parseISO, format } from 'date-fns';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllRequestsByStatusAndDate } from '../../services/requests';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function AdminSchedules() {\r\n    const [availabilities, setAvailabilities] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    const [requests, setRequests] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isCopying, setIsCopying] = useState(false);\r\n    const [isLoadingSchedule, setIsLoadingSchedule] = useState(false);\r\n\r\n    // Used for datepicker\r\n    const [dateISO, setDateISO] = useState(startOfToday())\r\n    // Used for fetching data within dates in ISO string\r\n    const [weekStart, setWeekStart] = useState('');\r\n    const [weekEnd, setWeekEnd] = useState('');\r\n    // Used for getting time values when saving a shift\r\n    const [shift_start_value, setShiftStartValue] = useState('0 0');\r\n    const [shift_end_value, setShiftEndValue] = useState('0 0');\r\n    const [level, setLevel] = useState('');\r\n    // Used to render edit shift mode for selected date and employee only\r\n    const [userData, setUserData] = useState(null);\r\n    const [availabilityIndex, setAvailabilityIndex] = useState(null);\r\n\r\n    // For init load and datepicker\r\n    const getDatesOfTheWeek = async (selectedDate) => {\r\n        setIsLoadingSchedule(true);\r\n        let date;\r\n        if (selectedDate) {\r\n            date = startOfWeek(new Date(selectedDate), { weekStartsOn: 1 });\r\n            setDateISO(selectedDate);\r\n        }\r\n        else {\r\n            date = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n        }\r\n\r\n        let daysArray = [];\r\n        let dateToAdd = date;\r\n        for (let i = 0; i < 7; i++) {\r\n            daysArray.push(dateToAdd.toISOString());\r\n            dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n        }\r\n\r\n        const weekStart = daysArray[0];\r\n        const weekEnd = daysArray[6];\r\n\r\n        setDays(daysArray);\r\n        setWeekStart(weekStart);\r\n        setWeekEnd(weekEnd);\r\n\r\n        // Refresh schedules after date change\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const requests = await fetchAllRequestsByStatusAndDate('Approved', weekStart, weekEnd);\r\n        setUsers(users);\r\n        setRequests(requests);\r\n        setIsLoadingSchedule(false);\r\n    }\r\n\r\n    // Can create or update shift based on s_id being provided\r\n    const handleSaveShift = async (u_id, dayIndex, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = new Date(days[dayIndex]);\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shift_start_value.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shift_start_value.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shift_end_value.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shift_end_value.split(' ')[1]);\r\n        // Get local timezone\r\n        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: timezone });\r\n\r\n        const shift_end = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: timezone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        setUsers(users);\r\n\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleCopyWeeklySchedule = async () => {\r\n        const doCopy = window.confirm('Copy schedule to next week? Any shifts already saved will be overwritten.');\r\n        if (doCopy) {\r\n            setIsCopying(true);\r\n            setIsLoadingSchedule(true);\r\n\r\n            let shifts = [];\r\n            for (let i = 0; i < users.length; i++) {\r\n                for (let j = 0; j < users[i].shifts.length; j++) {\r\n                    if (users[i].shifts[j].shift_end !== null) {\r\n                        let shift = {\r\n                            u_id: users[i].u_id,\r\n                            shift_start: format(addWeeks(parseISO(users[i].shifts[j].shift_start), 1), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                            shift_end: format(addWeeks(parseISO(users[i].shifts[j].shift_end), 1), \"yyyy-MM-dd'T'HH:mm:ss\")\r\n                        }\r\n                        shifts.push(shift);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = {\r\n                shifts,\r\n                weekStart: addWeeks(parseISO(weekStart), 1),\r\n                weekEnd: addWeeks(parseISO(weekEnd), 1)\r\n            };\r\n\r\n\r\n            await createCopyOfWeeklySchedule(body);\r\n            const updated = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            setUsers(updated);\r\n            // Display following week after copying schedule\r\n            handleNextWeek();\r\n            setIsCopying(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelShift = () => {\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    // Render edit shift (new)\r\n    const handleUserClick = (u_id, index) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(store.store_open_value);\r\n        setShiftEndValue(store.store_close_value);\r\n    }\r\n\r\n    // Render edit shift (update)\r\n    const handleEditShift = (u_id, index, startStartValue, endStartValue) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(startStartValue);\r\n        setShiftEndValue(endStartValue);\r\n        setLevel(level);\r\n    }\r\n\r\n    const handlePreviousWeek = () => {\r\n        let date = subWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleNextWeek = () => {\r\n        let date = addWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleSavePreset = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        let level;\r\n        let shift_start;\r\n        let shift_end;\r\n        for (let i = 0; i < presets.length; i++) {\r\n            if (shift_start_value === presets[i].shift_start_value\r\n                && shift_end_value === presets[i].shift_end_value) {\r\n                alert('Preset already saved');\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (shift_start_value === times[i].value) {\r\n                // Assign only start time level for sorting when displayed in the list\r\n                level = times[i].level;\r\n                shift_start = times[i].time;\r\n            }\r\n            if (shift_end_value === times[i].value) {\r\n                shift_end = times[i].time;\r\n            }\r\n        }\r\n\r\n        const body = { shift_start, shift_end, shift_start_value, shift_end_value, level };\r\n        await createPreset(body, tokenConfig);\r\n\r\n        const newPresets = await fetchPresets();\r\n        setPresets(newPresets);\r\n\r\n        alert('Preset saved')\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            setUsers(users);\r\n            setUserData('');\r\n            setAvailabilityIndex('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const getTimeValue = (shift) => {\r\n        const date = new Date(shift);\r\n        const hour = date.getHours();\r\n        const min = date.getMinutes();\r\n        const values = `${hour.toString()} ${min.toString()}`\r\n        return values;\r\n    }\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderShift = (u_id, a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"pointer schedules-text hovered\"\r\n            onClick={() => handleEditShift(u_id, a_i, getTimeValue(shift_start), getTimeValue(shift_end))}\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderBlank = (u_id, a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`pointer ${time.start_time === 'N/A' ? 'bg-black' : 'hovered'}`}\r\n            onClick={() => handleUserClick(u_id, a_i)}\r\n        ></td>\r\n    )\r\n\r\n    const renderAvailability = () => (\r\n        <>\r\n            <h3 className=\"text-center\">Availability</h3>\r\n            <table id=\"availability-table\" className=\"border-collapse w-100 text-center schedules-text\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"pt-2 pb-1\">Name</th>\r\n                        {\r\n                            // Render the day only\r\n                            days && days.map((day, i) => (\r\n                                <th key={i} className=\"pt-2 pb-1\">\r\n                                    <p>{new Date(day).toString().split(' ')[0]}</p>\r\n                                </th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        availabilities && availabilities.map((user, i) => (\r\n                            <tr\r\n                                key={i}\r\n                                style={i % 2 === 0\r\n                                    ? { backgroundColor: 'rgb(235, 235, 235)' }\r\n                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                            >\r\n                                <td className=\"py-1\">\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, i) => (\r\n                                        <td key={i} className={` ${time.start_time === 'N/A' && 'bg-black'}`}>\r\n                                            {(time.start_time === 'ANY' && time.end_time === 'ANY') ? 'ANY' : `${time.start_time} - ${time.end_time}`}\r\n                                        </td>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n    const renderController = () => (\r\n        <>\r\n            <div className=\"flex flex-center mt-5 mb-3\" id=\"select-week\">\r\n                <div className=\"grid xl-3-6-3 xs-1-12f align-center\">\r\n                    <div className=\"pointer text-center my-2\" onClick={() => handlePreviousWeek()}>\r\n                        <em className=\"text-3\">Previous&nbsp;week</em>\r\n                        <p>\r\n                            <i className=\"fas fa-angle-double-left\"></i>\r\n                            <i className=\"fas fa-angle-double-left\"></i>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"relative mx-3\">\r\n                        <input\r\n                            type=\"date\"\r\n                            value={new Date(dateISO).toISOString().split('T')[0]}\r\n                            // Creating a new date obj with yyyy-mm-dd rolls back one day so create with year, month, and date\r\n                            onChange={({ target }) => getDatesOfTheWeek(new Date(target.value.split('-'[0], target.value.split('-')[1], target.value.split('-')[2])))}\r\n                        />\r\n                        <div className=\"absolute\">&nbsp;</div>\r\n                    </div>\r\n                    <div className=\"pointer text-center my-2\" onClick={() => handleNextWeek()}>\r\n                        <em className=\"text-3\">Next&nbsp;week</em>\r\n                        <p>\r\n                            <i className=\"fas fa-angle-double-right\"></i>\r\n                            <i className=\"fas fa-angle-double-right\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex align-center justify-evenly sm-flex-col\">\r\n                <div className=\"my-2\">\r\n                    <strong>Approved Requests</strong>\r\n                    {\r\n                        requests.length\r\n                            ? requests.map((request, i) => (\r\n                                <div key={i}>\r\n                                    <p>\r\n                                        {request.first_name} {request.last_name}:\r\n                                        {request.requested_dates.map((date, r_i) => (\r\n                                            <span key={r_i}>\r\n                                                &nbsp;\r\n                                                {\r\n                                                    r_i === request.requested_dates.length - 1\r\n                                                        ? new Date(date).toLocaleDateString()\r\n                                                        : `${new Date(date).toLocaleDateString()},`\r\n                                                }\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                </div>\r\n                            ))\r\n                            : <p className=\"text-center\">N/A</p>\r\n                    }\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className={`btn-x-lg ${isCopying ? '' : 'btn-hovered'}`}\r\n                        onClick={() => handleCopyWeeklySchedule()}\r\n                        disabled={isCopying}\r\n                    >\r\n                        Copy to Next Week\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n            {\r\n                isLoadingSchedule\r\n                    ? <Loader\r\n                        type='ThreeDots'\r\n                        height={20}\r\n                        color='rgb(50, 110, 150)'\r\n                    />\r\n                    : <tbody>\r\n                        <tr>\r\n                            <td><strong>Name</strong></td>\r\n                            {\r\n                                days && days.map((day, i) => (\r\n                                    <td key={i}>\r\n                                        <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                        <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                    </td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            users && users.map((user, u_i) => (\r\n                                <tr\r\n                                    key={u_i}\r\n                                    className=\"bg-x-light-gray\"\r\n                                >\r\n                                    <td className=\"py-1\">\r\n                                        <p>\r\n                                            <strong>{user.first_name} {user.last_name}</strong>\r\n                                        </p>\r\n                                        <em>{user.title}</em>\r\n                                    </td>\r\n                                    {\r\n                                        user.availability.map((time, a_i) => (\r\n                                            // Only render edit mode for the selected date and employee\r\n                                            (userData === user.u_id && availabilityIndex === a_i)\r\n                                                ? renderEditShift(user.u_id, a_i, user.shifts[a_i])\r\n                                                // Render shifts if they exist during the selected week\r\n                                                : user.shifts[a_i].shift_end === null\r\n                                                    ? renderBlank(user.u_id, a_i, time)\r\n                                                    : renderShift(user.u_id, a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n            }\r\n        </table>\r\n    )\r\n\r\n    const renderEditShift = (u_id, dayIndex, shift) => (\r\n        <td key={dayIndex}>\r\n            <div className=\"flex justify-evenly mt-1\">\r\n                <p>Preset</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    defaultValue='0 0'\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        presets && presets.map((preset, i) => (\r\n                            <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <hr className=\"my-1\" />\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p>Start</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_start_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"mr-1\">End</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_end_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"my-2 w-100 flex justify-evenly\">\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => handleSaveShift(u_id, dayIndex, shift.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check schedules-text\"></i>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => handleSavePreset()}\r\n                        >\r\n                            <i className=\"fas fa-star schedules-text\"></i>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => shift.s_id ? handleRemoveShift(shift.s_id) : handleCancelShift()}\r\n                        >\r\n                            {\r\n                                shift.shift_end === null\r\n                                    ? <i className=\"fas fa-times schedules-text\"></i>\r\n                                    : <i className=\"fas fa-trash-alt schedules-text\"></i>\r\n                            }\r\n                        </button>\r\n                    </div>\r\n            }\r\n        </td>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getDatesAndLoadData() {\r\n            const times = await fetchTimes();\r\n            const availabilities = await fetchAllUsersAvailabilities();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n            await getDatesOfTheWeek();\r\n\r\n            setTimes(times);\r\n            setAvailabilities(availabilities);\r\n            setPresets(presets);\r\n            setStore(store);\r\n            setShiftStartValue(store.store_open_value);\r\n            setShiftEndValue(store.store_close_value);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getDatesAndLoadData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            {\r\n                isLoading ?\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {renderAvailability()}\r\n                        {renderController()}\r\n                        {renderSchedule()}\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { fetchAllRequestsByStatus, fetchAllRequests, updateRequestStatus } from '../../services/requests';\r\nimport Loader from 'react-loader-spinner';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminRequests() {\r\n    const [requests, setRequests] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [status, setStatus] = useState('All');\r\n\r\n    const handleUpdateRequestStatus = async (r_id, status) => {\r\n        const update = window.confirm('Confirm decision?');\r\n        if (update) {\r\n            setIsUpdating(true);\r\n            const tokenConfig = isAuthenticated();\r\n            const body = { status };\r\n\r\n            await updateRequestStatus(r_id, body, tokenConfig);\r\n            const requests = await fetchAllRequests();\r\n\r\n            setRequests(requests);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSortRequests = async (status) => {\r\n        setIsLoading(true);\r\n        if (status === 'All') {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        } else {\r\n            const requests = await fetchAllRequestsByStatus(status);\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRequests() {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getRequests();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                <div className=\"flex flex-col align-center\">\r\n                    <p className=\"mb-2\">View by</p>\r\n                    <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 grid2\">\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'All' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('All')}\r\n                        >\r\n                            All\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'Pending' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Pending')}\r\n                        >\r\n                            Pending\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'Approved' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Approved')}\r\n                        >\r\n                            Approved\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'Denied' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Denied')}\r\n                        >\r\n                            Denied\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"mt-2 grid2\">\r\n                            {\r\n                                requests.length ? requests.map((request, r_i) => (\r\n                                    <div key={r_i} className=\"my-2 p-1 border-solid-1 border-smooth box-shadow flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                                        <div className=\"my-2\">\r\n                                            <p><strong>Status</strong></p>\r\n                                            <em\r\n                                                className={\r\n                                                    request.status === 'Pending'\r\n                                                        ? 'blue'\r\n                                                        : request.status === 'Approved'\r\n                                                            ? 'green'\r\n                                                            : request.status === 'Denied'\r\n                                                                ? 'red'\r\n                                                                : ''}>\r\n                                                {request.status}\r\n                                            </em>\r\n                                        </div>\r\n                                        <div className=\"w-100 grid2\">\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>{request.first_name} {request.last_name}</strong>\r\n                                                <p>{request.title}</p>\r\n                                            </div>\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>Submission date</strong>\r\n                                                <p>{new Date(request.requested_at).toDateString()}</p>\r\n                                            </div>\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>Requested dates</strong>\r\n                                                {\r\n                                                    request.requested_dates.map((rd, rd_i) => (\r\n                                                        <p key={rd_i}>\r\n                                                            {\r\n                                                                // Add commas if more than one date\r\n                                                                rd_i === request.requested_dates.length - 1\r\n                                                                    ? new Date(rd).toDateString()\r\n                                                                    : `${new Date(rd).toDateString()},`\r\n                                                            }\r\n                                                        </p>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>Notes</strong>\r\n                                                <p>{request.notes}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button\r\n                                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                                disabled={isUpdating}\r\n                                            >\r\n                                                Approve\r\n                                            </button>\r\n                                            <button\r\n                                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                                disabled={isUpdating}\r\n                                            >\r\n                                                Deny\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchStoreHours, setStoreHours, updateStoreHours } from '../../services/store';\r\nimport { deletePreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminStore() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isSettingStoreHours, setIsSettingStoreHours] = useState(false);\r\n    const [updatingId, setUpdatingId] = useState('');\r\n\r\n    const [store_open, setStoreOpen] = useState('');\r\n    const [store_close, setStoreClose] = useState('');\r\n    const [store_open_value, setStoreOpenValue] = useState('');\r\n    const [store_close_value, setStoreCloseValue] = useState('');\r\n    const [store_open_level, setStoreOpenLevel] = useState('');\r\n    const [store_close_level, setStoreCloseLevel] = useState('');\r\n    const [showEditHours, setShowEditHours] = useState(false);\r\n    const [storeFirstTime, setStoreFirstTime] = useState(null);\r\n\r\n    const handleSetStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await setStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n\r\n    }\r\n\r\n    const handleUpdateStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await updateStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n    }\r\n\r\n    const handleSelectStoreOpen = (store_open) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_open) {\r\n                setStoreOpen(times[i].time);\r\n                setStoreOpenValue(times[i].value);\r\n                setStoreOpenLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectStoreClose = (store_close) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_close) {\r\n                setStoreClose(times[i].time);\r\n                setStoreCloseValue(times[i].value);\r\n                setStoreCloseLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDeletePreset = async (p_id) => {\r\n        const doDelete = window.confirm('Delete preset?');\r\n        if (doDelete) {\r\n            setIsUpdating(true);\r\n            setUpdatingId(p_id);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deletePreset(p_id, tokenConfig);\r\n            const presets = await fetchPresets();\r\n\r\n            setPresets(presets);\r\n            setIsUpdating(false);\r\n            setUpdatingId('');\r\n        }\r\n    }\r\n\r\n    const renderStoreHours = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <div className=\"my-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <p>Open</p>\r\n                <select\r\n                    value={store_open}\r\n                    onChange={({ target }) => handleSelectStoreOpen(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <p>Close</p>\r\n                <select\r\n                    value={store_close}\r\n                    onChange={({ target }) => handleSelectStoreClose(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => storeFirstTime === true ? handleSetStoreHours() : handleUpdateStoreHours()}\r\n                >\r\n                    Save\r\n                </button>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => setShowEditHours(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n            {\r\n                isSettingStoreHours &&\r\n                <Loader\r\n                    type='ThreeDots'\r\n                    height={10}\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const renderPresets = () => (\r\n        <div>\r\n            <h3 className=\"my-2\">Manage presets</h3>\r\n            {\r\n                presets && presets.map((preset, i) => (\r\n                    isUpdating && updatingId === preset.p_id\r\n                        ? <div className=\"text-center\">\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                                height={20}\r\n                            />\r\n                        </div>\r\n                        : <div key={i} className=\"relative\" id=\"manage-presets\" onClick={() => handleDeletePreset(preset.p_id)}>\r\n                            <p className=\"border-solid-1 py-1\">\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </p>\r\n                            <div className=\"absolute w-100 h-100 bg-dark-gray flex flex-center white pointer-no-u\">\r\n                                <p><i className=\"fas fa-trash-alt\"></i> Delete?</p>\r\n                            </div>\r\n                        </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const times = await fetchTimes();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n\r\n            setTimes(times);\r\n            setPresets(presets);\r\n\r\n            if (store) {\r\n                setStoreOpen(store.store_open);\r\n                setStoreClose(store.store_close);\r\n                setStoreOpenValue(store.store_open_value);\r\n                setStoreCloseValue(store.store_close_value);\r\n                setStoreOpenLevel(store.store_open_level);\r\n                setStoreCloseLevel(store.store_close_level);\r\n                setStoreFirstTime(false);\r\n            } else {\r\n                setStoreFirstTime(true);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"grid2\">\r\n                            <div className=\"text-center border-solid-1 border-smooth box-shadow xs10-offset-1 m8-offset-2 l7-offset-3\">\r\n                                <h3 className=\"my-2\">Store Hours</h3>\r\n                                {\r\n                                    showEditHours\r\n                                        ? renderStoreHours()\r\n                                        : <div>\r\n                                            {\r\n                                                store_open && store_close\r\n                                                    ? <p className=\"my-2\">{store_open.toString()} - {store_close.toString()}</p>\r\n                                                    : <p className=\"my-2\">N/A</p>\r\n                                            }\r\n                                            <button className=\"btn-med btn-hovered mt-1 mb-2\" onClick={() => setShowEditHours(true)}>Edit</button>\r\n                                        </div>\r\n                                }\r\n\r\n                                <hr className=\"my-3\" />\r\n\r\n                                {\r\n                                    renderPresets()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function UserHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid2\">\r\n            <Link to={ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_REQUESTS} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Availability</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-clock\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_PROFILE} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Profile</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchUser, editPassword, editUserGeneral } from '../../services/users';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function UserProfile() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [u_id, setUid] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id, tokenConfig);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword}>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            // verifiedUser is null on init load so add as dependency and check it again to fetch data\r\n            if (verifiedUser) {\r\n                const user = await fetchUser(verifiedUser.u_id);\r\n                setUid(user.u_id);\r\n                setUser(user);\r\n                setFirstName(user.first_name);\r\n                setLastName(user.last_name);\r\n                setEmail(user.email);\r\n                setPhone(user.phone);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function EditAvailability({ day, dayStart, dayEnd, setDayStart, setDayEnd, times, store }) {\r\n    return (\r\n        <div className=\"w-100 text-center\">\r\n            <p className=\"mt-2\">{day}</p>\r\n            <div className=\"grid2\">\r\n                <div className=\"xs5-offset-1 s4-offset-2 l4-offset-2\">\r\n                    <p>From</p>\r\n                    <select value={dayStart} onChange={({ target }) => setDayStart(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"xs5 s4 l4\">\r\n                    <p>To</p>\r\n                    <select value={dayEnd} onChange={({ target }) => setDayEnd(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport EditAvailability from './editAvailability';\r\nimport { editUserAvailability, fetchUserAvailability } from '../../services/users';\r\nimport { fetchTimes } from '../../services/presets';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function UserAvailability() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [showEditAvailability, setShowEditAvailability] = useState(false);\r\n\r\n    const [availability, setAvailability] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n\r\n    const [monStart, setMonStart] = useState('');\r\n    const [monEnd, setMonEnd] = useState('');\r\n    const [tueStart, setTueStart] = useState('');\r\n    const [tueEnd, setTueEnd] = useState('');\r\n    const [wedStart, setWedStart] = useState('');\r\n    const [wedEnd, setWedEnd] = useState('');\r\n    const [thurStart, setThurStart] = useState('');\r\n    const [thurEnd, setThurEnd] = useState('');\r\n    const [friStart, setFriStart] = useState('');\r\n    const [friEnd, setFriEnd] = useState('');\r\n    const [satStart, setSatStart] = useState('');\r\n    const [satEnd, setSatEnd] = useState('');\r\n    const [sunStart, setSunStart] = useState('');\r\n    const [sunEnd, setSunEnd] = useState('');\r\n\r\n    const days = [\r\n        {\r\n            day: \"Monday\",\r\n            dayStart: monStart,\r\n            dayEnd: monEnd,\r\n            setDayStart: setMonStart,\r\n            setDayEnd: setMonEnd\r\n        },\r\n        {\r\n            day: \"Tuesday\",\r\n            dayStart: tueStart,\r\n            dayEnd: tueEnd,\r\n            setDayStart: setTueStart,\r\n            setDayEnd: setTueEnd\r\n        },\r\n        {\r\n            day: \"Wednesday\",\r\n            dayStart: wedStart,\r\n            dayEnd: wedEnd,\r\n            setDayStart: setWedStart,\r\n            setDayEnd: setWedEnd\r\n        },\r\n        {\r\n            day: \"Thursday\",\r\n            dayStart: thurStart,\r\n            dayEnd: thurEnd,\r\n            setDayStart: setThurStart,\r\n            setDayEnd: setThurEnd\r\n        },\r\n        {\r\n            day: \"Friday\",\r\n            dayStart: friStart,\r\n            dayEnd: friEnd,\r\n            setDayStart: setFriStart,\r\n            setDayEnd: setFriEnd\r\n        },\r\n        {\r\n            day: \"Saturday\",\r\n            dayStart: satStart,\r\n            dayEnd: satEnd,\r\n            setDayStart: setSatStart,\r\n            setDayEnd: setSatEnd\r\n        },\r\n        {\r\n            day: \"Sunday\",\r\n            dayStart: sunStart,\r\n            dayEnd: sunEnd,\r\n            setDayStart: setSunStart,\r\n            setDayEnd: setSunEnd\r\n        },\r\n    ]\r\n\r\n    const handleShowEditAvailability = () => {\r\n        for (let i = 0; i < availability.length; i++) {\r\n            switch (availability[i].day) {\r\n                case 'Monday':\r\n                    setMonStart(availability[i].start_time);\r\n                    setMonEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Tuesday':\r\n                    setTueStart(availability[i].start_time);\r\n                    setTueEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Wednesday':\r\n                    setWedStart(availability[i].start_time);\r\n                    setWedEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Thursday':\r\n                    setThurStart(availability[i].start_time);\r\n                    setThurEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Friday':\r\n                    setFriStart(availability[i].start_time);\r\n                    setFriEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Saturday':\r\n                    setSatStart(availability[i].start_time);\r\n                    setSatEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Sunday':\r\n                    setSunStart(availability[i].start_time);\r\n                    setSunEnd(availability[i].end_time);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setShowEditAvailability(true);\r\n    }\r\n\r\n    const handleSaveAvailability = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        let data = [];\r\n        let counter = 1;\r\n\r\n        for (let i = 0; i < days.length; i++) {\r\n            let obj = {\r\n                u_id: verifiedUser.u_id,\r\n                day: days[i].day,\r\n                start_time: days[i].dayStart,\r\n                end_time: days[i].dayEnd,\r\n                level: counter++\r\n            }\r\n\r\n            data.push(obj);\r\n        }\r\n\r\n        // Check if N/A is paired with a time value\r\n        for (let i = 0; i < data.length; i++) {\r\n            if ((data[i].start_time === 'N/A' && data[i].end_time !== 'N/A') ||\r\n                (data[i].start_time !== 'N/A' && data[i].end_time === 'N/A')) {\r\n                setIsUpdating(false);\r\n                return alert('N/A must only be N/A');\r\n            }\r\n        }\r\n\r\n        // Availability for each day is one record per update in db\r\n        for (let i = 0; i < data.length; i++) {\r\n            await editUserAvailability(availability[i].a_id, data[i], tokenConfig);\r\n        }\r\n\r\n        const newAvail = await fetchUserAvailability(verifiedUser.u_id);\r\n        setAvailability(newAvail);\r\n        setIsUpdating(false);\r\n        setShowEditAvailability(false);\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3\">\r\n                <div>\r\n                    {\r\n                        availability && availability.map((avail, i) => (\r\n                            <div key={i} className=\"text-center my-2\">\r\n                                <p className=\"my-1\"><strong>{avail.day}</strong></p>\r\n                                <p>{avail.start_time} - {avail.end_time}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center my-5\">\r\n                    <button className=\"btn-sm btn-hovered\" onClick={handleShowEditAvailability}>Edit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3 text-center\">\r\n                {days.map(({ day, dayStart, dayEnd, setDayStart, setDayEnd }, i) => (\r\n                    <>\r\n                        <EditAvailability\r\n                            day={day}\r\n                            dayStart={dayStart}\r\n                            dayEnd={dayEnd}\r\n                            setDayStart={setDayStart}\r\n                            setDayEnd={setDayEnd}\r\n                            times={times}\r\n                            store={store}\r\n                        />\r\n                    </>\r\n                ))}\r\n\r\n                <div className=\"m-2\">\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => handleSaveAvailability()}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => setShowEditAvailability(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n\r\n                {\r\n                    isUpdating &&\r\n                    <div className=\"text-center my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            height={10}\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const availability = await fetchUserAvailability(verifiedUser.u_id);\r\n                const times = await fetchTimes();\r\n                const store = await fetchStoreHours();\r\n\r\n                setAvailability(availability);\r\n                setTimes(times);\r\n                setStore(store);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <>\r\n                        {\r\n                            showEditAvailability\r\n                                ? renderEditAvailability()\r\n                                : renderAvailability()\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createRequest, deleteRequest, fetchRequestsByUser } from '../../services/requests';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserRequests() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [createNewRequest, setCreateNewRequest] = useState(false);\r\n    const [requests, setRequests] = useState(null);\r\n\r\n    const [notes, setNotes] = useState('');\r\n    const [dates, setDates] = useState([]);\r\n    const [didUpdate, setDidUpdate] = useState(false); // Used to refresh date inputs after selection\r\n    const [numOfDateInputs, setNumOfDateInputs] = useState(1);\r\n\r\n    const handleDeleteRequest = async (r_id) => {\r\n        const doDelete = window.confirm('Delete request?');\r\n        if (doDelete) {\r\n            setIsDeleting(true);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deleteRequest(r_id, tokenConfig);\r\n\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            setRequests(requests);\r\n            setIsDeleting(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateRequest = async () => {\r\n        const request = window.confirm('Submit request?');\r\n        if (request) {\r\n            setIsSubmitting(true);\r\n            const tokenConfig = isAuthenticated();\r\n            let datesArr = dates;\r\n\r\n            for (let i = 0; i < datesArr.length; i++) {\r\n                datesArr[i] = new Date(datesArr[i]).toISOString();\r\n            }\r\n\r\n            const body = {\r\n                u_id: verifiedUser.u_id,\r\n                requested_at: format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                notes,\r\n                requested_dates: datesArr\r\n            }\r\n\r\n            await createRequest(body, tokenConfig);\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n\r\n            setRequests(requests);\r\n            setCreateNewRequest(false);\r\n            clearForm();\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelCreateNewRequest = () => {\r\n        setCreateNewRequest(false);\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNumOfDateInputs(1);\r\n        setDates([]);\r\n        setNotes('');\r\n    }\r\n\r\n    const handleAddDate = (index, newDate) => {\r\n        if (dates[index] !== undefined) {\r\n            let arrCopy = dates;\r\n            // eslint-disable-next-line\r\n            // let removed = dates.splice(index, 1, newDate); // Replace old date with selected date\r\n            arrCopy.push(newDate)\r\n            setDates(arrCopy);\r\n            setDidUpdate(!didUpdate); // Refresh date input values\r\n        }\r\n        else {\r\n            setDates([...dates, newDate]);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDate = (index) => {\r\n        let arrCopy = dates;\r\n        // eslint-disable-next-line\r\n        let removed = arrCopy.splice(index, 1); // Remove selected date from dates array\r\n        // let removed = arrCopy.pop();\r\n        setDates(arrCopy);\r\n        setNumOfDateInputs(numOfDateInputs - 1);\r\n    }\r\n\r\n    // First date input\r\n    const DateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Additional date inputs\r\n    const XDateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n                <button className=\"btn-sm btn-hovered mt-2\" onClick={() => handleRemoveDate(index)}>\r\n                    <i className=\"fas fa-minus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Render date inputs based on numOfDateInputs\r\n    const renderDateElements = () => {\r\n        let dateElements = [];\r\n        for (let i = 0; i < numOfDateInputs; i++) {\r\n            if (numOfDateInputs > 1 && i === numOfDateInputs - 1) {\r\n                // Render additional date inputs\r\n                dateElements.push(<XDateElement key={i} index={i} />)\r\n            } else {\r\n                // Render initial date input\r\n                dateElements.push(<DateElement key={i} index={i} />)\r\n            }\r\n        }\r\n\r\n        return dateElements; // Return date inputs to render\r\n    }\r\n\r\n    const renderNewRequest = () => (\r\n        <div className=\"border-solid-1 border-smooth my-2 flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n            <div className=\"w-50\">\r\n                {\r\n                    // Render custom date elements and functions from above\r\n                    renderDateElements()\r\n                }\r\n                <button\r\n                    className={`btn-sm mb-2 ${dates.length === numOfDateInputs && 'btn-hovered'}`}\r\n                    disabled={dates.length !== numOfDateInputs} // Disable if next date is not yet selected\r\n                    onClick={() => setNumOfDateInputs(numOfDateInputs + 1)}\r\n                >\r\n                    <i className=\"fas fa-plus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <p>Notes</p>\r\n                <textarea className=\"h-10 p-1\" onChange={({ target }) => setNotes(target.value)}></textarea>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCreateRequest()}>Submit</button>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCancelCreateNewRequest()}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        requests && requests.map((request, i) => (\r\n            <div key={i} className=\"border-solid-1 border-smooth my-2 text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"flex\">\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Submission date</strong>\r\n                            <p>{new Date(request.requested_at).toLocaleDateString()}</p>\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Requested dates</strong>\r\n                            {\r\n                                request.requested_dates.map((rd, rd_i) => (\r\n                                    <p key={rd_i}>\r\n                                        {\r\n                                            rd_i === request.requested_dates.length - 1\r\n                                                ? new Date(rd).toDateString()\r\n                                                : `${new Date(rd).toDateString()},`\r\n                                        }\r\n                                    </p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <strong>Notes</strong>\r\n                            <p>{request.notes}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className=\"btn-sm btn-hovered\"\r\n                        onClick={() => handleDeleteRequest(request.r_id)}\r\n                        disabled={isDeleting}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n                setRequests(requests);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"grid2\">\r\n                        {renderRequests()}\r\n                        {\r\n                            createNewRequest\r\n                                ? renderNewRequest()\r\n                                : <div className=\"mt-4 xs12 s10-offset-1 m8-offset-2 l6-offset-3 text-center\">\r\n                                    <button className=\"btn-lg btn-hovered\" onClick={() => setCreateNewRequest(true)}>\r\n                                        <p><i className=\"fas fa-plus\"></i> New Request</p>\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllUsersSchedulesByDate } from '../../services/shifts';\r\nimport { startOfWeek } from 'date-fns';\r\n\r\nexport default function UserSchedules() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderBlank = (a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`${time.start_time === 'N/A' ? 'bg-black' : 'bg-x-light-gray'}`}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"bg-x-light-gray\"\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let daysArray = [];\r\n            let dateToAdd = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n            for (let i = 0; i < 7; i++) {\r\n                daysArray.push(dateToAdd.toISOString());\r\n                dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n            }\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(daysArray[0], daysArray[6]);\r\n            setDays(daysArray);\r\n            setUsers(users);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"mt-5\">\r\n                        <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><strong>Name</strong></td>\r\n                                    {\r\n                                        days && days.map((day, i) => (\r\n                                            <td key={i}>\r\n                                                <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                                <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                            </td>\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                                {\r\n                                    users && users.map((user, u_i) => (\r\n                                        <tr\r\n                                            key={u_i}\r\n                                            className=\"bg-x-light-gray\"\r\n                                        >\r\n                                            <td className=\"py-1\">\r\n                                                <p>\r\n                                                    <strong>{user.first_name} {user.last_name}</strong>\r\n                                                </p>\r\n                                                <em>{user.title}</em>\r\n                                            </td>\r\n                                            {\r\n                                                user.availability.map((time, a_i) => (\r\n                                                    user.shifts[a_i].shift_end === null\r\n                                                        ? renderBlank(a_i, time)\r\n                                                        : renderShift(a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                                ))\r\n                                            }\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function ProtectedRoute({ user, component: Component, ...rest }) {\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n    \r\n    return (\r\n        // ...rest is the path from props\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                sessionStorage.removeItem('token');\r\n                setVerifiedUser(null);\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function UserRoute({ user, component: Component, ...rest }) {\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                sessionStorage.removeItem('token');\r\n                setVerifiedUser(null);\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","// Return blank page during page load\r\n// Prevents the flashing of the sign in page during page reload\r\nconst IsLoaded = ({ isLoading, children }) => {\r\n    while (isLoading) return null\r\n    return children\r\n}\r\n\r\nexport default IsLoaded;","import './App.css';\nimport { useEffect, useContext, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { isAuthenticated, verifyUser } from './services/auth';\nimport { UserContext } from './contexts/userContext';\nimport { DimensionContext } from './contexts/dimensionContext';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Header from './components/header';\nimport Navbar from './components/admin/navbar';\nimport SignIn from './components/signIn';\nimport AdminSignIn from './components/adminSignIn';\n\nimport AdminHome from './components/admin/home';\nimport AdminEmployees from './components/admin/employees';\nimport AdminEmployee from './components/admin/employee';\nimport AdminNewEmployee from './components/admin/newEmployee';\nimport AdminSchedules from './components/admin/schedules';\nimport AdminRequests from './components/admin/requests';\nimport AdminStore from './components/admin/store';\n\nimport UserHome from './components/user/home';\nimport UserProfile from './components/user/profile';\nimport UserAvailability from './components/user/availability';\nimport UserRequests from './components/user/requests';\nimport UserSchedules from './components/user/schedules';\n\nimport ProtectedRoute from './helpers/protectedRoute';\nimport UserRoute from './helpers/userRoute';\nimport IsLoaded from './isLoaded';\n\nfunction App() {\n  const { verifiedUser, setVerifiedUser } = useContext(UserContext);\n  const { isMobile } = useContext(DimensionContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function getVerifiedUser() {\n      const tokenConfig = isAuthenticated();\n      if (tokenConfig) {\n        const verifiedUser = await verifyUser(tokenConfig);\n        setVerifiedUser(verifiedUser); // Set verified user in context for header\n      }\n      setIsLoading(false);\n    }\n\n    getVerifiedUser();\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Router>\n      <IsLoaded isLoading={isLoading} children>\n        <Header />\n        <div className={`relative ${(verifiedUser && !isMobile) && \"container-grid\"}`}>\n          <Navbar />\n          <div className=\"container\">\n            <div className=\"m-2\">\n              <Switch>\n                <Route exact path={ROUTES.SIGN_IN} component={SignIn} />\n                <Route exact path={ROUTES.ADMIN_SIGN_IN} component={AdminSignIn} />\n\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_HOME} component={AdminHome} />\n                <ProtectedRoute exact user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEES} component={AdminEmployees} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_NEW_EMPLOYEE} component={AdminNewEmployee} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEE} component={AdminEmployee} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_SCHEDULES} component={AdminSchedules} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_REQUESTS} component={AdminRequests} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_STORE} component={AdminStore} />\n\n                <UserRoute user={verifiedUser} path={ROUTES.USER_HOME} component={UserHome} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_PROFILE} component={UserProfile} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_AVAILABILITY} component={UserAvailability} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_REQUESTS} component={UserRequests} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_SCHEDULES} component={UserSchedules} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </IsLoaded>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport DimensionContextProvider from './contexts/dimensionContext';\nimport UserContextProvider from './contexts/userContext';\n\nReactDOM.render(\n  <UserContextProvider>\n    <DimensionContextProvider>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n    </DimensionContextProvider>\n  </UserContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}