{"version":3,"sources":["constants/routes.js","services/auth.js","contexts/userContext.js","components/header.js","components/signIn.js","components/admin/home.js","services/users.js","components/admin/employees.js","services/roles.js","components/admin/employee.js","components/admin/newEmployee.js","services/presets.js","services/shifts.js","services/requests.js","services/store.js","components/admin/schedules.js","components/admin/requests.js","components/admin/store.js","components/user/home.js","components/user/profile.js","components/user/editAvailability.js","components/user/availability.js","components/user/requests.js","components/user/schedules.js","components/adminSignIn.js","helpers/protectedRoute.js","helpers/userRoute.js","isLoaded.js","components/admin/navbar.js","App.js","index.js"],"names":["SIGN_IN","ADMIN_SIGN_IN","ADMIN_HOME","ADMIN_EMPLOYEES","ADMIN_NEW_EMPLOYEE","ADMIN_SCHEDULES","ADMIN_REQUESTS","ADMIN_STORE","USER_HOME","USER_SCHEDULES","USER_REQUESTS","USER_AVAILABILITY","USER_PROFILE","signIn","credentials","a","axios","post","res","data","error","response","createUser","body","tokenConfig","verifyUser","get","isAuthenticated","token","sessionStorage","getItem","headers","UserContext","createContext","UserContextProvider","children","useState","verifiedUser","setVerifiedUser","Provider","value","Header","setWidth","useContext","history","useHistory","setWindowWidth","window","innerWidth","useEffect","addEventListener","removeEventListener","className","style","marginRight","first_name","marginTop","onClick","removeItem","is_admin","push","ROUTES","SignIn","email","setEmail","password","setPassword","setError","isInvalid","handleSignIn","e","preventDefault","user","alert","setItem","onSubmit","type","onChange","target","disabled","AdminHome","id","to","fetchAllUsers","fetchUser","u_id","editPassword","put","editUserGeneral","editUserInfo","fetchUserAvailability","fetchAllUsersAvailabilities","editUserAvailability","a_id","AdminEmployees","users","setUsers","width","isLoading","setIsLoading","getUsers","color","map","i","backgroundColor","acn","title","last_name","phone","fetchRoles","AdminEmployee","useParams","setUser","roles","setRoles","success","setSuccess","isUpdating","setIsUpdating","setFirstName","setLastName","setPhone","role_id","setRoleId","hourly_pay","setHourlyPay","started_at","setStartedAt","showEditGeneral","setShowEditGeneral","showEditInfo","setShowEditInfo","new_password","setNewPassword","confirm_new_password","setConfirmNewPassword","handleUpdatePassword","handleUpdateUserGeneral","handleUpdateUserInfo","updated_at","Date","now","toLocaleDateString","getData","defaultValue","parseInt","role","level","placeholder","AdminNewEmployee","handleSubmit","getRoles","fetchTimes","createPreset","fetchPresets","deletePreset","p_id","delete","createShift","createCopyOfWeeklySchedule","fetchAllUsersSchedulesByDate","start_date","end_date","updateShift","s_id","deleteShift","fetchAllRequests","fetchRequestsByUser","fetchAllRequestsByStatus","status","fetchAllRequestsByStatusAndDate","weekStart","weekEnd","updateRequestStatus","r_id","createRequest","deleteRequest","fetchStoreHours","setStoreHours","updateStoreHours","AdminSchedules","availabilities","setAvailabilities","requests","setRequests","days","setDays","times","setTimes","presets","setPresets","store","setStore","isCopying","setIsCopying","isLoadingSchedule","setIsLoadingSchedule","startOfToday","dateISO","setDateISO","setWeekStart","setWeekEnd","shift_start_value","setShiftStartValue","shift_end_value","setShiftEndValue","setLevel","userData","setUserData","availabilityIndex","setAvailabilityIndex","getDatesOfTheWeek","selectedDate","date","startOfWeek","weekStartsOn","daysArray","dateToAdd","toISOString","setDate","getDate","handleSaveShift","dayIndex","startTimeHour","split","startTimeMinute","endTimeHour","endTimeMinute","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","shift_start","getFullYear","getMonth","toLocaleString","shift_end","handleCopyWeeklySchedule","confirm","shifts","length","j","shift","format","addWeeks","parseISO","updated","handleNextWeek","handleSavePreset","time","newPresets","handleRemoveShift","getTimeValue","hour","getHours","min","getMinutes","toString","getTime","toLocaleTimeString","replace","renderShift","a_i","index","startStartValue","endStartValue","handleEditShift","renderBlank","start_time","store_open_value","store_close_value","handleUserClick","renderEditShift","shiftValue","preset","parseFloat","store_open_level","store_close_level","height","border","getDatesAndLoadData","day","availability","end_time","subWeeks","handlePreviousWeek","request","requested_dates","r_i","u_i","AdminRequests","setStatus","handleUpdateRequestStatus","handleSortRequests","getRequests","requested_at","toDateString","rd","rd_i","notes","AdminStore","isSettingStoreHours","setIsSettingStoreHours","updatingId","setUpdatingId","store_open","setStoreOpen","store_close","setStoreClose","setStoreOpenValue","setStoreCloseValue","setStoreOpenLevel","setStoreCloseLevel","showEditHours","setShowEditHours","storeFirstTime","setStoreFirstTime","handleSetStoreHours","setTimeout","saveData","handleUpdateStoreHours","handleDeletePreset","handleSelectStoreOpen","handleSelectStoreClose","UserHome","UserProfile","setUid","EditAvailability","dayStart","dayEnd","setDayStart","setDayEnd","UserAvailability","showEditAvailability","setShowEditAvailability","setAvailability","monStart","setMonStart","monEnd","setMonEnd","tueStart","setTueStart","tueEnd","setTueEnd","wedStart","setWedStart","wedEnd","setWedEnd","thurStart","setThurStart","thurEnd","setThurEnd","friStart","setFriStart","friEnd","setFriEnd","satStart","setSatStart","satEnd","setSatEnd","sunStart","setSunStart","sunEnd","setSunEnd","handleShowEditAvailability","handleSaveAvailability","counter","obj","newAvail","avail","UserRequests","isDeleting","setIsDeleting","isSubmitting","setIsSubmitting","createNewRequest","setCreateNewRequest","setNotes","dates","setDates","didUpdate","setDidUpdate","numOfDateInputs","setNumOfDateInputs","handleDeleteRequest","handleCreateRequest","datesArr","clearForm","handleAddDate","newDate","undefined","arrCopy","DateElement","XDateElement","splice","handleRemoveDate","renderDateElements","dateElements","UserSchedules","AdminSignIn","ProtectedRoute","Component","component","rest","render","location","pathname","state","from","UserRoute","IsLoaded","Navbar","App","getVerifiedUser","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0272f3fd.chunk.js","sourcesContent":["export const SIGN_IN = '/';\r\nexport const ADMIN_SIGN_IN = '/admin'\r\n\r\nexport const ADMIN_HOME = '/admin/home';\r\nexport const ADMIN_EMPLOYEES = '/admin/employees'; // Need 'exact' for path in App.js\r\nexport const ADMIN_EMPLOYEE = '/admin/employees/:u_id';\r\nexport const ADMIN_NEW_EMPLOYEE = '/admin/employees/new';\r\nexport const ADMIN_SCHEDULES = '/admin/schedules';\r\nexport const ADMIN_REQUESTS = '/admin/requests';\r\nexport const ADMIN_STORE = '/admin/store';\r\n\r\nexport const USER_HOME = '/home';\r\nexport const USER_SCHEDULES = '/schedules';\r\nexport const USER_REQUESTS = '/requests';\r\nexport const USER_AVAILABILITY = '/availability';\r\nexport const USER_PROFILE = '/profile';","import axios from 'axios';\r\n\r\nexport const signIn = async (credentials) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/auth/signin', credentials);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createUser = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/auth/register', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const verifyUser = async (tokenConfig) => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/auth/verify', tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response };\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        const tokenConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n        return tokenConfig;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport default function UserContextProvider({ children }) {\r\n    const [verifiedUser, setVerifiedUser] = useState(null);\r\n    return (\r\n        <UserContext.Provider value={{ verifiedUser, setVerifiedUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import { useContext, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Header() {\r\n    const [width, setWidth] = useState(null);\r\n    const { verifiedUser, setVerifiedUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        sessionStorage.removeItem('token');\r\n        setVerifiedUser(null); // Remove verified user from context\r\n        if (verifiedUser.is_admin) history.push(ROUTES.ADMIN_SIGN_IN);\r\n        else history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth);\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <header>\r\n            {\r\n                verifiedUser &&\r\n                <div className=\"flex\" style={{ marginRight: \"2%\" }}>\r\n                    <div className=\"mr-5\">\r\n                        <p className=\"off-white\">Welcome, {verifiedUser && verifiedUser.first_name}</p>\r\n                    </div>\r\n                    <div className=\"pointer-no-u\" style={{ marginTop: '2px' }} onClick={handleSignOut}>\r\n                        <p className=\"off-white\"><i className=\"fas fa-sign-out-alt text-6\"></i></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                alert('Please sign in through the admin portal');\r\n                history.push(ROUTES.ADMIN_SIGN_IN);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.USER_HOME);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 l8-offset-2\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function AdminHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid2\">\r\n            <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Employees</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-users\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_SCHEDULES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_REQUESTS} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_STORE} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Store</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/users');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/users/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editPassword = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/reset-pw/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserGeneral = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserInfo = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/system/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUserAvailability = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/users/availability/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersAvailabilities = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/users/availability/all');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserAvailability = async (a_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/users/availability/${a_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllUsers } from '../../services/users';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployees() {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const handleClickUser = (u_id) => {\r\n        history.push(`${ROUTES.ADMIN_EMPLOYEES}/${u_id}`);\r\n    }\r\n\r\n    const handleAddEmployee = () => {\r\n        history.push(ROUTES.ADMIN_NEW_EMPLOYEE);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const users = await fetchAllUsers();\r\n            if (users) setUsers(users);\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth); // Set default width on page load\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <div className=\"mt-6 mb-4 flex flex-center\">\r\n                            <button className=\"btn-x-lg btn-hovered\" onClick={handleAddEmployee}>\r\n                                <p>Add Employee</p>\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <table id=\"users-list\" className=\"border-collapse w-100 text-center\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"p-3\">Role</th>\r\n                                        <th className=\"p-3\">Name</th>\r\n                                        <th className=\"p-3\">Email</th>\r\n                                        <th className=\"p-3\">Phone</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users && users.map((user, i) => (\r\n                                            <tr\r\n                                                key={i}\r\n                                                className=\"pointer\"\r\n                                                onClick={() => handleClickUser(user.u_id)}\r\n                                                style={i % 2 === 0\r\n                                                    ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                                            >\r\n                                                <td className=\"p-3\">{width < 380 ? user.acn : user.title}</td>\r\n                                                <td className=\"p-3\">{user.first_name} {user.last_name}</td>\r\n                                                <td className=\"p-3\">{user.email}</td>\r\n                                                <td className=\"p-3\">{user.phone}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/roles');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { editPassword, editUserGeneral, editUserInfo, fetchUser } from '../../services/users';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployee() {\r\n    const { u_id } = useParams();\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n    const [showEditInfo, setShowEditInfo] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserInfo = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, hourly_pay, started_at, updated_at: new Date(Date.now()).toLocaleDateString() };\r\n\r\n        const res = await editUserInfo(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditInfo(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderUserInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Role</h4>\r\n                <p>{user.title}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Hourly Pay</h4>\r\n                <p>{verifiedUser.level <= user.level ? user.hourly_pay : '**'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Started At</h4>\r\n                <p>{new Date(user.started_at).toLocaleDateString()}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Updated At</h4>\r\n                <p>{user.updated_at ? new Date(user.updated_at).toLocaleDateString() : 'N/A'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button\r\n                    className={`btn-med ${verifiedUser.level > user.level ? '' : 'btn-hovered'}`}\r\n                    onClick={() => setShowEditInfo(true)}\r\n                    disabled={verifiedUser.level > user.level}\r\n                >\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>Role</p>\r\n                <select defaultValue={user.role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                    {\r\n                        roles && roles.map((role, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={role.role_id}\r\n                            >\r\n                                {role.title}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Hourly Pay</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={hourly_pay}\r\n                    onChange={({ target }) => setHourlyPay(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Started At</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={new Date(started_at).toLocaleDateString()}\r\n                    onChange={({ target }) => setStartedAt(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserInfo()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditInfo(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} className=\"\">\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(u_id);\r\n            const roles = await fetchRoles();\r\n            setUser(user);\r\n            setRoles(roles);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setRoleId(user.role_id);\r\n            setHourlyPay(user.hourly_pay);\r\n            setStartedAt(user.started_at);\r\n            setIsLoading(false);\r\n        }\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    showEditInfo\r\n                                        ? renderEditInfo()\r\n                                        : renderUserInfo()\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    verifiedUser && verifiedUser.u_id === user.u_id &&\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport { createUser } from '../../services/auth';\r\n\r\nexport default function AdminNewEmployee() {\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const [role_id, setRoleId] = useState(6);\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, first_name, last_name, email, phone, password, hourly_pay, started_at };\r\n\r\n        const res = await createUser(body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            setError('');\r\n            setRoleId('');\r\n            setFirstName('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setPhone('');\r\n            setPassword('');\r\n            setHourlyPay('');\r\n            setSuccess(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRoles() {\r\n            const roles = await fetchRoles();\r\n            setRoles(roles);\r\n        }\r\n\r\n        getRoles();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            <div className=\"grid2\">\r\n                <form onSubmit={handleSubmit} className=\"xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                    <div className=\"my-2\">\r\n                        <p>First Name</p>\r\n                        <input type=\"text\" value={first_name} className=\"form-input\" onChange={({ target }) => setFirstName(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Last Name</p>\r\n                        <input type=\"text\" value={last_name} className=\"form-input\" onChange={({ target }) => setLastName(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" value={email} className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Phone</p>\r\n                        <input type=\"text\" value={phone} className=\"form-input\" onChange={({ target }) => setPhone(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" value={password} className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Hourly Pay</p>\r\n                        <input type=\"text\" value={hourly_pay} className=\"form-input\" onChange={({ target }) => setHourlyPay(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Starting Date</p>\r\n                        <input type=\"date\" value={started_at} className=\"form-input\" onChange={({ target }) => setStartedAt(target.value)} />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <p>Role</p>\r\n                        <select value={role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                            {\r\n                                roles && roles.map((role, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={role.role_id}\r\n                                    >\r\n                                        {role.title}\r\n                                    </option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"text-center mt-5\">\r\n                        <button className=\"btn-med btn-hovered\">Submit</button>\r\n                    </div>\r\n                    {error ? <p className=\"red mt-3\">{error}</p> : null}\r\n                    {success ? <p className=\"green mt-3\">Profile successfully added!</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchTimes = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/presets/times');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createPreset = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/presets', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchPresets = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/presets');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deletePreset = async (p_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:5000/presets/${p_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const createShift = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/shifts', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createCopyOfWeeklySchedule = async (body) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/shifts/copy', body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchShiftsByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/shifts/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/shifts/all/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateShift = async (s_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/shifts/${s_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteShift = async (s_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:5000/shifts/${s_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllRequests = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/requests');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchRequestsByUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/requests/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatus = async (status) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/requests/status/${status}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatusAndDate = async (status, weekStart, weekEnd) => {\r\n    try {\r\n        const res = await axios.get(`http://localhost:5000/requests/status/${status}/${weekStart}/${weekEnd}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateRequestStatus = async (r_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`http://localhost:5000/requests/${r_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createRequest = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/requests', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async (r_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`http://localhost:5000/requests/${r_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchStoreHours = async () => {\r\n    try {\r\n        const res = await axios.get('http://localhost:5000/store');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const setStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('http://localhost:5000/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put('http://localhost:5000/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { createPreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { createShift, fetchAllUsersSchedulesByDate, deleteShift, updateShift, createCopyOfWeeklySchedule } from '../../services/shifts';\r\nimport { fetchAllUsersAvailabilities } from '../../services/users';\r\nimport { startOfToday, startOfWeek, addWeeks, subWeeks, parseISO, format } from 'date-fns';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllRequestsByStatusAndDate } from '../../services/requests';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function AdminSchedules() {\r\n    const [availabilities, setAvailabilities] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    const [requests, setRequests] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isCopying, setIsCopying] = useState(false);\r\n    const [isLoadingSchedule, setIsLoadingSchedule] = useState(false);\r\n\r\n    // Used for datepicker\r\n    const [dateISO, setDateISO] = useState(startOfToday())\r\n    // Used for fetching data within dates in ISO string\r\n    const [weekStart, setWeekStart] = useState('');\r\n    const [weekEnd, setWeekEnd] = useState('');\r\n    // Used for getting time values when saving a shift\r\n    const [shift_start_value, setShiftStartValue] = useState('0 0');\r\n    const [shift_end_value, setShiftEndValue] = useState('0 0');\r\n    const [level, setLevel] = useState('');\r\n    // Used to render edit shift mode for selected date and employee only\r\n    const [userData, setUserData] = useState(null);\r\n    const [availabilityIndex, setAvailabilityIndex] = useState(null);\r\n\r\n    // For init load and datepicker\r\n    const getDatesOfTheWeek = async (selectedDate) => {\r\n        setIsLoadingSchedule(true);\r\n        let date;\r\n        if (selectedDate) {\r\n            date = startOfWeek(new Date(selectedDate), { weekStartsOn: 1 });\r\n            setDateISO(selectedDate);\r\n        }\r\n        else {\r\n            date = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n        }\r\n\r\n        let daysArray = [];\r\n        let dateToAdd = date;\r\n        for (let i = 0; i < 7; i++) {\r\n            daysArray.push(dateToAdd.toISOString());\r\n            dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n        }\r\n\r\n        const weekStart = daysArray[0];\r\n        const weekEnd = daysArray[6];\r\n\r\n        setDays(daysArray);\r\n        setWeekStart(weekStart);\r\n        setWeekEnd(weekEnd);\r\n\r\n        // Refresh schedules after date change\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const requests = await fetchAllRequestsByStatusAndDate('Approved', weekStart, weekEnd);\r\n        setUsers(users);\r\n        setRequests(requests);\r\n        setIsLoadingSchedule(false);\r\n    }\r\n\r\n    // Can create or update shift based on s_id being provided\r\n    const handleSaveShift = async (u_id, dayIndex, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = new Date(days[dayIndex]);\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shift_start_value.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shift_start_value.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shift_end_value.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shift_end_value.split(' ')[1]);\r\n        // Get local timezone\r\n        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: timezone });\r\n\r\n        const shift_end = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: timezone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        setUsers(users);\r\n\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleCopyWeeklySchedule = async () => {\r\n        const doCopy = window.confirm('Copy schedule to next week? Any shifts already saved will be overwritten.');\r\n        if (doCopy) {\r\n            setIsCopying(true);\r\n            setIsLoadingSchedule(true);\r\n\r\n            let shifts = [];\r\n            for (let i = 0; i < users.length; i++) {\r\n                for (let j = 0; j < users[i].shifts.length; j++) {\r\n                    if (users[i].shifts[j].shift_end !== null) {\r\n                        let shift = {\r\n                            u_id: users[i].u_id,\r\n                            shift_start: format(addWeeks(parseISO(users[i].shifts[j].shift_start), 1), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                            shift_end: format(addWeeks(parseISO(users[i].shifts[j].shift_end), 1), \"yyyy-MM-dd'T'HH:mm:ss\")\r\n                        }\r\n                        shifts.push(shift);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = {\r\n                shifts,\r\n                weekStart: addWeeks(parseISO(weekStart), 1),\r\n                weekEnd: addWeeks(parseISO(weekEnd), 1)\r\n            };\r\n\r\n\r\n            await createCopyOfWeeklySchedule(body);\r\n            const updated = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            setUsers(updated);\r\n            // Display following week after copying schedule\r\n            handleNextWeek();\r\n            setIsCopying(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelShift = () => {\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    // Render edit shift (new)\r\n    const handleUserClick = (u_id, index) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(store.store_open_value);\r\n        setShiftEndValue(store.store_close_value);\r\n    }\r\n\r\n    // Render edit shift (update)\r\n    const handleEditShift = (u_id, index, startStartValue, endStartValue) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(startStartValue);\r\n        setShiftEndValue(endStartValue);\r\n        setLevel(level);\r\n    }\r\n\r\n    const handlePreviousWeek = () => {\r\n        let date = subWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleNextWeek = () => {\r\n        let date = addWeeks(new Date(dateISO), 1);\r\n        setDateISO(date);\r\n        getDatesOfTheWeek(date);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleSavePreset = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        let level;\r\n        let shift_start;\r\n        let shift_end;\r\n        for (let i = 0; i < presets.length; i++) {\r\n            if (shift_start_value === presets[i].shift_start_value\r\n                && shift_end_value === presets[i].shift_end_value) {\r\n                alert('Preset already saved');\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (shift_start_value === times[i].value) {\r\n                // Assign only start time level for sorting when displayed in the list\r\n                level = times[i].level;\r\n                shift_start = times[i].time;\r\n            }\r\n            if (shift_end_value === times[i].value) {\r\n                shift_end = times[i].time;\r\n            }\r\n        }\r\n\r\n        const body = { shift_start, shift_end, shift_start_value, shift_end_value, level };\r\n        await createPreset(body, tokenConfig);\r\n\r\n        const newPresets = await fetchPresets();\r\n        setPresets(newPresets);\r\n\r\n        alert('Preset saved')\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n            setUsers(users);\r\n            setUserData('');\r\n            setAvailabilityIndex('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const getTimeValue = (shift) => {\r\n        const date = new Date(shift);\r\n        const hour = date.getHours();\r\n        const min = date.getMinutes();\r\n        const values = `${hour.toString()} ${min.toString()}`\r\n        return values;\r\n    }\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderShift = (u_id, a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"pointer schedules-text hovered\"\r\n            onClick={() => handleEditShift(u_id, a_i, getTimeValue(shift_start), getTimeValue(shift_end))}\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderBlank = (u_id, a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`pointer ${time.start_time === 'N/A' ? 'bg-black' : 'hovered'}`}\r\n            onClick={() => handleUserClick(u_id, a_i)}\r\n        ></td>\r\n    )\r\n\r\n    const renderAvailability = () => (\r\n        <>\r\n            <h3 className=\"text-center\">Availability</h3>\r\n            <table id=\"availability-table\" className=\"border-collapse w-100 text-center schedules-text\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"pt-2 pb-1\">Name</th>\r\n                        {\r\n                            // Render the day only\r\n                            days && days.map((day, i) => (\r\n                                <th key={i} className=\"pt-2 pb-1\">\r\n                                    <p>{new Date(day).toString().split(' ')[0]}</p>\r\n                                </th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        availabilities && availabilities.map((user, i) => (\r\n                            <tr\r\n                                key={i}\r\n                                style={i % 2 === 0\r\n                                    ? { backgroundColor: 'rgb(235, 235, 235)' }\r\n                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                            >\r\n                                <td className=\"py-1\">\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, i) => (\r\n                                        <td key={i} className={` ${time.start_time === 'N/A' && 'bg-black'}`}>\r\n                                            {(time.start_time === 'ANY' && time.end_time === 'ANY') ? 'ANY' : `${time.start_time} - ${time.end_time}`}\r\n                                        </td>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n    const renderController = () => (\r\n        <>\r\n            <div className=\"flex flex-center mt-5 mb-3\" id=\"select-week\">\r\n                <div className=\"grid xl-3-6-3 xs-1-12f align-center\">\r\n                    <div className=\"pointer text-center my-2\" onClick={() => handlePreviousWeek()}>\r\n                        <em className=\"text-3\">Previous&nbsp;week</em>\r\n                        <p>\r\n                            <i className=\"fas fa-angle-double-left\"></i>\r\n                            <i className=\"fas fa-angle-double-left\"></i>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"relative mx-3\">\r\n                        <input\r\n                            type=\"date\"\r\n                            value={new Date(dateISO).toISOString().split('T')[0]}\r\n                            // Creating a new date obj with yyyy-mm-dd rolls back one day so create with year, month, and date\r\n                            onChange={({ target }) => getDatesOfTheWeek(new Date(target.value.split('-'[0], target.value.split('-')[1], target.value.split('-')[2])))}\r\n                        />\r\n                        <div className=\"absolute\">&nbsp;</div>\r\n                    </div>\r\n                    <div className=\"pointer text-center my-2\" onClick={() => handleNextWeek()}>\r\n                        <em className=\"text-3\">Next&nbsp;week</em>\r\n                        <p>\r\n                            <i className=\"fas fa-angle-double-right\"></i>\r\n                            <i className=\"fas fa-angle-double-right\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex align-center justify-evenly sm-flex-col\">\r\n                <div className=\"my-2\">\r\n                    <strong>Approved Requests</strong>\r\n                    {\r\n                        requests.length\r\n                            ? requests.map((request, i) => (\r\n                                <div key={i}>\r\n                                    <p>\r\n                                        {request.first_name} {request.last_name}:\r\n                                        {request.requested_dates.map((date, r_i) => (\r\n                                            <span key={r_i}>\r\n                                                &nbsp;\r\n                                                {\r\n                                                    r_i === request.requested_dates.length - 1\r\n                                                        ? new Date(date).toLocaleDateString()\r\n                                                        : `${new Date(date).toLocaleDateString()},`\r\n                                                }\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                </div>\r\n                            ))\r\n                            : <p className=\"text-center\">N/A</p>\r\n                    }\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className={`btn-x-lg ${isCopying ? '' : 'btn-hovered'}`}\r\n                        onClick={() => handleCopyWeeklySchedule()}\r\n                        disabled={isCopying}\r\n                    >\r\n                        Copy to Next Week\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n            {\r\n                isLoadingSchedule\r\n                    ? <Loader\r\n                        type='ThreeDots'\r\n                        height={20}\r\n                        color='rgb(50, 110, 150)'\r\n                    />\r\n                    : <tbody>\r\n                        <tr>\r\n                            <td><strong>Name</strong></td>\r\n                            {\r\n                                days && days.map((day, i) => (\r\n                                    <td key={i}>\r\n                                        <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                        <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                    </td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            users && users.map((user, u_i) => (\r\n                                <tr\r\n                                    key={u_i}\r\n                                    className=\"bg-x-light-gray\"\r\n                                >\r\n                                    <td className=\"py-1\">\r\n                                        <p>\r\n                                            <strong>{user.first_name} {user.last_name}</strong>\r\n                                        </p>\r\n                                        <em>{user.title}</em>\r\n                                    </td>\r\n                                    {\r\n                                        user.availability.map((time, a_i) => (\r\n                                            // Only render edit mode for the selected date and employee\r\n                                            (userData === user.u_id && availabilityIndex === a_i)\r\n                                                ? renderEditShift(user.u_id, a_i, user.shifts[a_i])\r\n                                                // Render shifts if they exist during the selected week\r\n                                                : user.shifts[a_i].shift_end === null\r\n                                                    ? renderBlank(user.u_id, a_i, time)\r\n                                                    : renderShift(user.u_id, a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n            }\r\n        </table>\r\n    )\r\n\r\n    const renderEditShift = (u_id, dayIndex, shift) => (\r\n        <td key={dayIndex}>\r\n            <div className=\"flex justify-evenly mt-1\">\r\n                <p>Preset</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    defaultValue='0 0'\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        presets && presets.map((preset, i) => (\r\n                            <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <hr className=\"my-1\" />\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p>Start</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_start_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"mr-1\">End</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_end_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"my-2 w-100 flex justify-evenly\">\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => handleSaveShift(u_id, dayIndex, shift.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check schedules-text\"></i>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => handleSavePreset()}\r\n                        >\r\n                            <i className=\"fas fa-star schedules-text\"></i>\r\n                        </button>\r\n                        <button\r\n                            className=\"btn-x-sm btn-hovered\"\r\n                            style={{ border: 'solid 1px gray' }}\r\n                            onClick={() => shift.s_id ? handleRemoveShift(shift.s_id) : handleCancelShift()}\r\n                        >\r\n                            {\r\n                                shift.shift_end === null\r\n                                    ? <i className=\"fas fa-times schedules-text\"></i>\r\n                                    : <i className=\"fas fa-trash-alt schedules-text\"></i>\r\n                            }\r\n                        </button>\r\n                    </div>\r\n            }\r\n        </td>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getDatesAndLoadData() {\r\n            const times = await fetchTimes();\r\n            const availabilities = await fetchAllUsersAvailabilities();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n            await getDatesOfTheWeek();\r\n\r\n            setTimes(times);\r\n            setAvailabilities(availabilities);\r\n            setPresets(presets);\r\n            setStore(store);\r\n            setShiftStartValue(store.store_open_value);\r\n            setShiftEndValue(store.store_close_value);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getDatesAndLoadData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            {\r\n                isLoading ?\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {renderAvailability()}\r\n                        {renderController()}\r\n                        {renderSchedule()}\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { fetchAllRequestsByStatus, fetchAllRequests, updateRequestStatus } from '../../services/requests';\r\nimport Loader from 'react-loader-spinner';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminRequests() {\r\n    const [requests, setRequests] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [status, setStatus] = useState('All');\r\n\r\n    const handleUpdateRequestStatus = async (r_id, status) => {\r\n        const update = window.confirm('Confirm decision?');\r\n        if (update) {\r\n            setIsUpdating(true);\r\n            const tokenConfig = isAuthenticated();\r\n            const body = { status };\r\n\r\n            await updateRequestStatus(r_id, body, tokenConfig);\r\n            const requests = await fetchAllRequests();\r\n\r\n            setRequests(requests);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSortRequests = async (status) => {\r\n        setIsLoading(true);\r\n        if (status === 'All') {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        } else {\r\n            const requests = await fetchAllRequestsByStatus(status);\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function getRequests() {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getRequests();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                <div className=\"flex flex-col align-center\">\r\n                    <p className=\"mb-2\">View by</p>\r\n                    <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 grid2\">\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'All' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('All')}\r\n                        >\r\n                            All\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'Pending' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Pending')}\r\n                        >\r\n                            Pending\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'Approved' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Approved')}\r\n                        >\r\n                            Approved\r\n                        </button>\r\n                        <button\r\n                            className={`border-solid-1 border-oval pointer-no-u py-1 bg-light-gray-hovered s6 l3\r\n                                ${status === 'Denied' && 'bg-light-gray'}`}\r\n                            onClick={() => handleSortRequests('Denied')}\r\n                        >\r\n                            Denied\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"mt-2 grid2\">\r\n                            {\r\n                                requests.length ? requests.map((request, r_i) => (\r\n                                    <div key={r_i} className=\"my-2 p-1 border-solid-1 border-smooth box-shadow flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                                        <div className=\"my-2\">\r\n                                            <p><strong>Status</strong></p>\r\n                                            <em\r\n                                                className={\r\n                                                    request.status === 'Pending'\r\n                                                        ? 'blue'\r\n                                                        : request.status === 'Approved'\r\n                                                            ? 'green'\r\n                                                            : request.status === 'Denied'\r\n                                                                ? 'red'\r\n                                                                : ''}>\r\n                                                {request.status}\r\n                                            </em>\r\n                                        </div>\r\n                                        <div className=\"w-100 grid2\">\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>{request.first_name} {request.last_name}</strong>\r\n                                                <p>{request.title}</p>\r\n                                            </div>\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>Submission date</strong>\r\n                                                <p>{new Date(request.requested_at).toDateString()}</p>\r\n                                            </div>\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>Requested dates</strong>\r\n                                                {\r\n                                                    request.requested_dates.map((rd, rd_i) => (\r\n                                                        <p key={rd_i}>\r\n                                                            {\r\n                                                                // Add commas if more than one date\r\n                                                                rd_i === request.requested_dates.length - 1\r\n                                                                    ? new Date(rd).toDateString()\r\n                                                                    : `${new Date(rd).toDateString()},`\r\n                                                            }\r\n                                                        </p>\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"my-1 s12 l6\">\r\n                                                <strong>Notes</strong>\r\n                                                <p>{request.notes}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button\r\n                                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                                disabled={isUpdating}\r\n                                            >\r\n                                                Approve\r\n                                            </button>\r\n                                            <button\r\n                                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                                disabled={isUpdating}\r\n                                            >\r\n                                                Deny\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchStoreHours, setStoreHours, updateStoreHours } from '../../services/store';\r\nimport { deletePreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminStore() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isSettingStoreHours, setIsSettingStoreHours] = useState(false);\r\n    const [updatingId, setUpdatingId] = useState('');\r\n\r\n    const [store_open, setStoreOpen] = useState('');\r\n    const [store_close, setStoreClose] = useState('');\r\n    const [store_open_value, setStoreOpenValue] = useState('');\r\n    const [store_close_value, setStoreCloseValue] = useState('');\r\n    const [store_open_level, setStoreOpenLevel] = useState('');\r\n    const [store_close_level, setStoreCloseLevel] = useState('');\r\n    const [showEditHours, setShowEditHours] = useState(false);\r\n    const [storeFirstTime, setStoreFirstTime] = useState(null);\r\n\r\n    const handleSetStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await setStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n\r\n    }\r\n\r\n    const handleUpdateStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await updateStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n    }\r\n\r\n    const handleSelectStoreOpen = (store_open) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_open) {\r\n                setStoreOpen(times[i].time);\r\n                setStoreOpenValue(times[i].value);\r\n                setStoreOpenLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectStoreClose = (store_close) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_close) {\r\n                setStoreClose(times[i].time);\r\n                setStoreCloseValue(times[i].value);\r\n                setStoreCloseLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDeletePreset = async (p_id) => {\r\n        const doDelete = window.confirm('Delete preset?');\r\n        if (doDelete) {\r\n            setIsUpdating(true);\r\n            setUpdatingId(p_id);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deletePreset(p_id, tokenConfig);\r\n            const presets = await fetchPresets();\r\n\r\n            setPresets(presets);\r\n            setIsUpdating(false);\r\n            setUpdatingId('');\r\n        }\r\n    }\r\n\r\n    const renderStoreHours = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <div className=\"my-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <p>Open</p>\r\n                <select\r\n                    value={store_open}\r\n                    onChange={({ target }) => handleSelectStoreOpen(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-1 w-50 lg-w-60 med-w-80 xs-w-90\">\r\n                <p>Close</p>\r\n                <select\r\n                    value={store_close}\r\n                    onChange={({ target }) => handleSelectStoreClose(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => storeFirstTime === true ? handleSetStoreHours() : handleUpdateStoreHours()}\r\n                >\r\n                    Save\r\n                </button>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => setShowEditHours(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n            {\r\n                isSettingStoreHours &&\r\n                <Loader\r\n                    type='ThreeDots'\r\n                    height={10}\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const renderPresets = () => (\r\n        <div>\r\n            <h3 className=\"my-2\">Manage presets</h3>\r\n            {\r\n                presets && presets.map((preset, i) => (\r\n                    isUpdating && updatingId === preset.p_id\r\n                        ? <div className=\"text-center\">\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                                height={20}\r\n                            />\r\n                        </div>\r\n                        : <div key={i} className=\"relative\" id=\"manage-presets\" onClick={() => handleDeletePreset(preset.p_id)}>\r\n                            <p className=\"border-solid-1 py-1\">\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </p>\r\n                            <div className=\"absolute w-100 h-100 bg-dark-gray flex flex-center white pointer-no-u\">\r\n                                <p><i className=\"fas fa-trash-alt\"></i> Delete?</p>\r\n                            </div>\r\n                        </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const times = await fetchTimes();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n\r\n            setTimes(times);\r\n            setPresets(presets);\r\n\r\n            if (store) {\r\n                setStoreOpen(store.store_open);\r\n                setStoreClose(store.store_close);\r\n                setStoreOpenValue(store.store_open_value);\r\n                setStoreCloseValue(store.store_close_value);\r\n                setStoreOpenLevel(store.store_open_level);\r\n                setStoreCloseLevel(store.store_close_level);\r\n                setStoreFirstTime(false);\r\n            } else {\r\n                setStoreFirstTime(true);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n                {\r\n                    isLoading\r\n                        ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                        : <div className=\"grid2\">\r\n                            <div className=\"text-center border-solid-1 border-smooth box-shadow xs10-offset-1 m8-offset-2 l7-offset-3\">\r\n                                <h3 className=\"my-2\">Store Hours</h3>\r\n                                {\r\n                                    showEditHours\r\n                                        ? renderStoreHours()\r\n                                        : <div>\r\n                                            {\r\n                                                store_open && store_close\r\n                                                    ? <p className=\"my-2\">{store_open.toString()} - {store_close.toString()}</p>\r\n                                                    : <p className=\"my-2\">N/A</p>\r\n                                            }\r\n                                            <button className=\"btn-med btn-hovered mt-1 mb-2\" onClick={() => setShowEditHours(true)}>Edit</button>\r\n                                        </div>\r\n                                }\r\n\r\n                                <hr className=\"my-3\" />\r\n\r\n                                {\r\n                                    renderPresets()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nexport default function UserHome() {\r\n    return (\r\n        <div id=\"home\" className=\"grid2\">\r\n            <Link to={ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Schedules</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_REQUESTS} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Requests</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Availability</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-clock\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.USER_PROFILE} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"border-solid-1 border-smooth box-shadow bg-x-light-gray-hovered py-8\">\r\n                    <div className=\"flex flex-col flex-center\">\r\n                        <h2>Profile</h2>\r\n                        <p className=\"text-10\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchUser, editPassword, editUserGeneral } from '../../services/users';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function UserProfile() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [u_id, setUid] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id, tokenConfig);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword}>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            // verifiedUser is null on init load so add as dependency and check it again to fetch data\r\n            if (verifiedUser) {\r\n                const user = await fetchUser(verifiedUser.u_id);\r\n                setUid(user.u_id);\r\n                setUser(user);\r\n                setFirstName(user.first_name);\r\n                setLastName(user.last_name);\r\n                setEmail(user.email);\r\n                setPhone(user.phone);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function EditAvailability({ day, dayStart, dayEnd, setDayStart, setDayEnd, times, store }) {\r\n    return (\r\n        <div className=\"w-100 text-center\">\r\n            <p className=\"mt-2\">{day}</p>\r\n            <div className=\"grid2\">\r\n                <div className=\"xs5-offset-1 s4-offset-2 l4-offset-2\">\r\n                    <p>From</p>\r\n                    <select value={dayStart} onChange={({ target }) => setDayStart(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"xs5 s4 l4\">\r\n                    <p>To</p>\r\n                    <select value={dayEnd} onChange={({ target }) => setDayEnd(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport EditAvailability from './editAvailability';\r\nimport { editUserAvailability, fetchUserAvailability } from '../../services/users';\r\nimport { fetchTimes } from '../../services/presets';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function UserAvailability() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [showEditAvailability, setShowEditAvailability] = useState(false);\r\n\r\n    const [availability, setAvailability] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n\r\n    const [monStart, setMonStart] = useState('');\r\n    const [monEnd, setMonEnd] = useState('');\r\n    const [tueStart, setTueStart] = useState('');\r\n    const [tueEnd, setTueEnd] = useState('');\r\n    const [wedStart, setWedStart] = useState('');\r\n    const [wedEnd, setWedEnd] = useState('');\r\n    const [thurStart, setThurStart] = useState('');\r\n    const [thurEnd, setThurEnd] = useState('');\r\n    const [friStart, setFriStart] = useState('');\r\n    const [friEnd, setFriEnd] = useState('');\r\n    const [satStart, setSatStart] = useState('');\r\n    const [satEnd, setSatEnd] = useState('');\r\n    const [sunStart, setSunStart] = useState('');\r\n    const [sunEnd, setSunEnd] = useState('');\r\n\r\n    const days = [\r\n        {\r\n            day: \"Monday\",\r\n            dayStart: monStart,\r\n            dayEnd: monEnd,\r\n            setDayStart: setMonStart,\r\n            setDayEnd: setMonEnd\r\n        },\r\n        {\r\n            day: \"Tuesday\",\r\n            dayStart: tueStart,\r\n            dayEnd: tueEnd,\r\n            setDayStart: setTueStart,\r\n            setDayEnd: setTueEnd\r\n        },\r\n        {\r\n            day: \"Wednesday\",\r\n            dayStart: wedStart,\r\n            dayEnd: wedEnd,\r\n            setDayStart: setWedStart,\r\n            setDayEnd: setWedEnd\r\n        },\r\n        {\r\n            day: \"Thursday\",\r\n            dayStart: thurStart,\r\n            dayEnd: thurEnd,\r\n            setDayStart: setThurStart,\r\n            setDayEnd: setThurEnd\r\n        },\r\n        {\r\n            day: \"Friday\",\r\n            dayStart: friStart,\r\n            dayEnd: friEnd,\r\n            setDayStart: setFriStart,\r\n            setDayEnd: setFriEnd\r\n        },\r\n        {\r\n            day: \"Saturday\",\r\n            dayStart: satStart,\r\n            dayEnd: satEnd,\r\n            setDayStart: setSatStart,\r\n            setDayEnd: setSatEnd\r\n        },\r\n        {\r\n            day: \"Sunday\",\r\n            dayStart: sunStart,\r\n            dayEnd: sunEnd,\r\n            setDayStart: setSunStart,\r\n            setDayEnd: setSunEnd\r\n        },\r\n    ]\r\n\r\n    const handleShowEditAvailability = () => {\r\n        for (let i = 0; i < availability.length; i++) {\r\n            switch (availability[i].day) {\r\n                case 'Monday':\r\n                    setMonStart(availability[i].start_time);\r\n                    setMonEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Tuesday':\r\n                    setTueStart(availability[i].start_time);\r\n                    setTueEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Wednesday':\r\n                    setWedStart(availability[i].start_time);\r\n                    setWedEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Thursday':\r\n                    setThurStart(availability[i].start_time);\r\n                    setThurEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Friday':\r\n                    setFriStart(availability[i].start_time);\r\n                    setFriEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Saturday':\r\n                    setSatStart(availability[i].start_time);\r\n                    setSatEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Sunday':\r\n                    setSunStart(availability[i].start_time);\r\n                    setSunEnd(availability[i].end_time);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setShowEditAvailability(true);\r\n    }\r\n\r\n    const handleSaveAvailability = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        let data = [];\r\n        let counter = 1;\r\n\r\n        for (let i = 0; i < days.length; i++) {\r\n            let obj = {\r\n                u_id: verifiedUser.u_id,\r\n                day: days[i].day,\r\n                start_time: days[i].dayStart,\r\n                end_time: days[i].dayEnd,\r\n                level: counter++\r\n            }\r\n\r\n            data.push(obj);\r\n        }\r\n\r\n        // Check if N/A is paired with a time value\r\n        for (let i = 0; i < data.length; i++) {\r\n            if ((data[i].start_time === 'N/A' && data[i].end_time !== 'N/A') ||\r\n                (data[i].start_time !== 'N/A' && data[i].end_time === 'N/A')) {\r\n                setIsUpdating(false);\r\n                return alert('N/A must only be N/A');\r\n            }\r\n        }\r\n\r\n        // Availability for each day is one record per update in db\r\n        for (let i = 0; i < data.length; i++) {\r\n            await editUserAvailability(availability[i].a_id, data[i], tokenConfig);\r\n        }\r\n\r\n        const newAvail = await fetchUserAvailability(verifiedUser.u_id);\r\n        setAvailability(newAvail);\r\n        setIsUpdating(false);\r\n        setShowEditAvailability(false);\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3\">\r\n                <div>\r\n                    {\r\n                        availability && availability.map((avail, i) => (\r\n                            <div key={i} className=\"text-center my-2\">\r\n                                <p className=\"my-1\"><strong>{avail.day}</strong></p>\r\n                                <p>{avail.start_time} - {avail.end_time}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center my-5\">\r\n                    <button className=\"btn-sm btn-hovered\" onClick={handleShowEditAvailability}>Edit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3 text-center\">\r\n                {days.map(({ day, dayStart, dayEnd, setDayStart, setDayEnd }, i) => (\r\n                    <>\r\n                        <EditAvailability\r\n                            day={day}\r\n                            dayStart={dayStart}\r\n                            dayEnd={dayEnd}\r\n                            setDayStart={setDayStart}\r\n                            setDayEnd={setDayEnd}\r\n                            times={times}\r\n                            store={store}\r\n                        />\r\n                    </>\r\n                ))}\r\n\r\n                <div className=\"m-2\">\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => handleSaveAvailability()}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => setShowEditAvailability(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n\r\n                {\r\n                    isUpdating &&\r\n                    <div className=\"text-center my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            height={10}\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const availability = await fetchUserAvailability(verifiedUser.u_id);\r\n                const times = await fetchTimes();\r\n                const store = await fetchStoreHours();\r\n\r\n                setAvailability(availability);\r\n                setTimes(times);\r\n                setStore(store);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <>\r\n                        {\r\n                            showEditAvailability\r\n                                ? renderEditAvailability()\r\n                                : renderAvailability()\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createRequest, deleteRequest, fetchRequestsByUser } from '../../services/requests';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserRequests() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [createNewRequest, setCreateNewRequest] = useState(false);\r\n    const [requests, setRequests] = useState(null);\r\n\r\n    const [notes, setNotes] = useState('');\r\n    const [dates, setDates] = useState([]);\r\n    const [didUpdate, setDidUpdate] = useState(false); // Used to refresh date inputs after selection\r\n    const [numOfDateInputs, setNumOfDateInputs] = useState(1);\r\n\r\n    const handleDeleteRequest = async (r_id) => {\r\n        const doDelete = window.confirm('Delete request?');\r\n        if (doDelete) {\r\n            setIsDeleting(true);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deleteRequest(r_id, tokenConfig);\r\n\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            setRequests(requests);\r\n            setIsDeleting(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateRequest = async () => {\r\n        const request = window.confirm('Submit request?');\r\n        if (request) {\r\n            setIsSubmitting(true);\r\n            const tokenConfig = isAuthenticated();\r\n            let datesArr = dates;\r\n\r\n            for (let i = 0; i < datesArr.length; i++) {\r\n                datesArr[i] = new Date(datesArr[i]).toISOString();\r\n            }\r\n\r\n            const body = {\r\n                u_id: verifiedUser.u_id,\r\n                requested_at: format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                notes,\r\n                requested_dates: datesArr\r\n            }\r\n\r\n            await createRequest(body, tokenConfig);\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n\r\n            setRequests(requests);\r\n            setCreateNewRequest(false);\r\n            clearForm();\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelCreateNewRequest = () => {\r\n        setCreateNewRequest(false);\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNumOfDateInputs(1);\r\n        setDates([]);\r\n        setNotes('');\r\n    }\r\n\r\n    const handleAddDate = (index, newDate) => {\r\n        if (dates[index] !== undefined) {\r\n            let arrCopy = dates;\r\n            // eslint-disable-next-line\r\n            // let removed = dates.splice(index, 1, newDate); // Replace old date with selected date\r\n            arrCopy.push(newDate)\r\n            setDates(arrCopy);\r\n            setDidUpdate(!didUpdate); // Refresh date input values\r\n        }\r\n        else {\r\n            setDates([...dates, newDate]);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDate = (index) => {\r\n        let arrCopy = dates;\r\n        // eslint-disable-next-line\r\n        let removed = arrCopy.splice(index, 1); // Remove selected date from dates array\r\n        // let removed = arrCopy.pop();\r\n        setDates(arrCopy);\r\n        setNumOfDateInputs(numOfDateInputs - 1);\r\n    }\r\n\r\n    // First date input\r\n    const DateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Additional date inputs\r\n    const XDateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n                <button className=\"btn-sm btn-hovered mt-2\" onClick={() => handleRemoveDate(index)}>\r\n                    <i className=\"fas fa-minus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Render date inputs based on numOfDateInputs\r\n    const renderDateElements = () => {\r\n        let dateElements = [];\r\n        for (let i = 0; i < numOfDateInputs; i++) {\r\n            if (numOfDateInputs > 1 && i === numOfDateInputs - 1) {\r\n                // Render additional date inputs\r\n                dateElements.push(<XDateElement key={i} index={i} />)\r\n            } else {\r\n                // Render initial date input\r\n                dateElements.push(<DateElement key={i} index={i} />)\r\n            }\r\n        }\r\n\r\n        return dateElements; // Return date inputs to render\r\n    }\r\n\r\n    const renderNewRequest = () => (\r\n        <div className=\"border-solid-1 border-smooth my-2 flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n            <div className=\"w-50\">\r\n                {\r\n                    // Render custom date elements and functions from above\r\n                    renderDateElements()\r\n                }\r\n                <button\r\n                    className={`btn-sm mb-2 ${dates.length === numOfDateInputs && 'btn-hovered'}`}\r\n                    disabled={dates.length !== numOfDateInputs} // Disable if next date is not yet selected\r\n                    onClick={() => setNumOfDateInputs(numOfDateInputs + 1)}\r\n                >\r\n                    <i className=\"fas fa-plus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <p>Notes</p>\r\n                <textarea className=\"h-10 p-1\" onChange={({ target }) => setNotes(target.value)}></textarea>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCreateRequest()}>Submit</button>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCancelCreateNewRequest()}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        requests && requests.map((request, i) => (\r\n            <div key={i} className=\"border-solid-1 border-smooth my-2 text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"flex\">\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Submission date</strong>\r\n                            <p>{new Date(request.requested_at).toLocaleDateString()}</p>\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Requested dates</strong>\r\n                            {\r\n                                request.requested_dates.map((rd, rd_i) => (\r\n                                    <p key={rd_i}>\r\n                                        {\r\n                                            rd_i === request.requested_dates.length - 1\r\n                                                ? new Date(rd).toDateString()\r\n                                                : `${new Date(rd).toDateString()},`\r\n                                        }\r\n                                    </p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <strong>Notes</strong>\r\n                            <p>{request.notes}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className=\"btn-sm btn-hovered\"\r\n                        onClick={() => handleDeleteRequest(request.r_id)}\r\n                        disabled={isDeleting}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n                setRequests(requests);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"grid2\">\r\n                        {renderRequests()}\r\n                        {\r\n                            createNewRequest\r\n                                ? renderNewRequest()\r\n                                : <div className=\"mt-4 xs12 s10-offset-1 m8-offset-2 l6-offset-3 text-center\">\r\n                                    <button className=\"btn-lg btn-hovered\" onClick={() => setCreateNewRequest(true)}>\r\n                                        <p><i className=\"fas fa-plus\"></i> New Request</p>\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllUsersSchedulesByDate } from '../../services/shifts';\r\nimport { startOfWeek } from 'date-fns';\r\n\r\nexport default function UserSchedules() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderBlank = (a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`${time.start_time === 'N/A' ? 'bg-black' : 'bg-x-light-gray'}`}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"bg-x-light-gray\"\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let daysArray = [];\r\n            let dateToAdd = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n            for (let i = 0; i < 7; i++) {\r\n                daysArray.push(dateToAdd.toISOString());\r\n                dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n            }\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(daysArray[0], daysArray[6]);\r\n            setDays(daysArray);\r\n            setUsers(users);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={ROUTES.USER_HOME} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Home\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"mt-5\">\r\n                        <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><strong>Name</strong></td>\r\n                                    {\r\n                                        days && days.map((day, i) => (\r\n                                            <td key={i}>\r\n                                                <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                                <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                            </td>\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                                {\r\n                                    users && users.map((user, u_i) => (\r\n                                        <tr\r\n                                            key={u_i}\r\n                                            className=\"bg-x-light-gray\"\r\n                                        >\r\n                                            <td className=\"py-1\">\r\n                                                <p>\r\n                                                    <strong>{user.first_name} {user.last_name}</strong>\r\n                                                </p>\r\n                                                <em>{user.title}</em>\r\n                                            </td>\r\n                                            {\r\n                                                user.availability.map((time, a_i) => (\r\n                                                    user.shifts[a_i].shift_end === null\r\n                                                        ? renderBlank(a_i, time)\r\n                                                        : renderShift(a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                                ))\r\n                                            }\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function AdminSignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.ADMIN_HOME);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                alert('Please sign in through the user portal');\r\n                history.push(ROUTES.SIGN_IN);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 l8-offset-2\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function ProtectedRoute({ user, component: Component, ...rest }) {\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n    \r\n    return (\r\n        // ...rest is the path from props\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                sessionStorage.removeItem('token');\r\n                setVerifiedUser(null);\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function UserRoute({ user, component: Component, ...rest }) {\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n    \r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                sessionStorage.removeItem('token');\r\n                setVerifiedUser(null);\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","// Return blank page during page load\r\n// Prevents the flashing of the sign in page during page reload\r\nconst IsLoaded = ({ isLoading, children }) => {\r\n    while (isLoading) return null\r\n    return children\r\n}\r\n\r\nexport default IsLoaded;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"hovered py-2\">\r\n                    <div className=\"flex flex-col flex-center off-white\">\r\n                        <h3>Employees</h3>\r\n                        <p className=\"text-7\">\r\n                            <i className=\"fas fa-users\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_SCHEDULES} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"hovered py-2\">\r\n                    <div className=\"flex flex-col flex-center off-white\">\r\n                        <h3>Schedules</h3>\r\n                        <p className=\"text-7\">\r\n                            <i className=\"fas fa-calendar-alt\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_REQUESTS} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"hovered py-2\">\r\n                    <div className=\"flex flex-col flex-center off-white\">\r\n                        <h3>Requests</h3>\r\n                        <p className=\"text-7\">\r\n                            <i className=\"fas fa-inbox\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <Link to={ROUTES.ADMIN_STORE} className=\"s12 m6 l3 black text-no-u\">\r\n                <div className=\"hovered py-2\">\r\n                    <div className=\"flex flex-col flex-center off-white\">\r\n                        <h3>Store</h3>\r\n                        <p className=\"text-7\">\r\n                            <i className=\"fas fa-wrench\"></i>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport { useEffect, useContext, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { isAuthenticated, verifyUser } from './services/auth';\nimport { UserContext } from './contexts/userContext';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Header from './components/header';\nimport SignIn from './components/signIn';\n\nimport AdminHome from './components/admin/home';\nimport AdminEmployees from './components/admin/employees';\nimport AdminEmployee from './components/admin/employee';\nimport AdminNewEmployee from './components/admin/newEmployee';\nimport AdminSchedules from './components/admin/schedules';\nimport AdminRequests from './components/admin/requests';\nimport AdminStore from './components/admin/store';\n\nimport UserHome from './components/user/home';\nimport UserProfile from './components/user/profile';\nimport UserAvailability from './components/user/availability';\nimport UserRequests from './components/user/requests';\nimport UserSchedules from './components/user/schedules';\nimport AdminSignIn from './components/adminSignIn';\n\nimport ProtectedRoute from './helpers/protectedRoute';\nimport UserRoute from './helpers/userRoute';\nimport IsLoaded from './isLoaded';\nimport Navbar from './components/admin/navbar';\n\nfunction App() {\n  const { verifiedUser, setVerifiedUser } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function getVerifiedUser() {\n      const tokenConfig = isAuthenticated();\n      if (tokenConfig) {\n        const verifiedUser = await verifyUser(tokenConfig);\n        setVerifiedUser(verifiedUser); // Set verified user in context for header\n      }\n      setIsLoading(false);\n    }\n\n    getVerifiedUser();\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    // <div>\n      <Router>\n        <IsLoaded isLoading={isLoading} children>\n          <Header />\n          <div className=\"container-grid\">\n            <Navbar />\n            <div className=\"container\">\n              <div className=\"m-2\">\n                <Switch>\n                  <Route exact path={ROUTES.SIGN_IN} component={SignIn} />\n                  <Route exact path={ROUTES.ADMIN_SIGN_IN} component={AdminSignIn} />\n\n                  <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_HOME} component={AdminHome} />\n                  <ProtectedRoute exact user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEES} component={AdminEmployees} />\n                  <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_NEW_EMPLOYEE} component={AdminNewEmployee} />\n                  <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEE} component={AdminEmployee} />\n                  <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_SCHEDULES} component={AdminSchedules} />\n                  <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_REQUESTS} component={AdminRequests} />\n                  <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_STORE} component={AdminStore} />\n\n                  <UserRoute user={verifiedUser} path={ROUTES.USER_HOME} component={UserHome} />\n                  <UserRoute user={verifiedUser} path={ROUTES.USER_PROFILE} component={UserProfile} />\n                  <UserRoute user={verifiedUser} path={ROUTES.USER_AVAILABILITY} component={UserAvailability} />\n                  <UserRoute user={verifiedUser} path={ROUTES.USER_REQUESTS} component={UserRequests} />\n                  <UserRoute user={verifiedUser} path={ROUTES.USER_SCHEDULES} component={UserSchedules} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </IsLoaded>\n      </Router>\n    // </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserContextProvider from './contexts/userContext';\n\nReactDOM.render(\n  <UserContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </UserContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}