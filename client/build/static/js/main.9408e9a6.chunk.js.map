{"version":3,"sources":["constants/routes.js","services/auth.js","contexts/userContext.js","components/header.js","components/navbar.js","components/signIn.js","components/adminSignIn.js","services/users.js","components/admin/employees.js","services/roles.js","components/admin/employee.js","components/admin/newEmployee.js","services/presets.js","services/shifts.js","services/requests.js","services/store.js","components/admin/schedulesMobile.js","components/admin/schedules.js","components/admin/requests.js","components/admin/store.js","components/user/profile.js","components/user/editAvailability.js","components/user/availability.js","components/user/requests.js","components/user/schedules.js","helpers/protectedRoute.js","helpers/userRoute.js","helpers/authRoute.js","isLoaded.js","App.js","contexts/dimensionContext.js","index.js"],"names":["SIGN_IN","ADMIN_SIGN_IN","ADMIN_EMPLOYEES","ADMIN_NEW_EMPLOYEE","ADMIN_SCHEDULES","ADMIN_REQUESTS","ADMIN_STORE","USER_SCHEDULES","USER_REQUESTS","USER_AVAILABILITY","USER_PROFILE","signIn","credentials","a","axios","post","res","data","error","response","createUser","body","tokenConfig","verifyUser","get","isAuthenticated","token","sessionStorage","getItem","headers","UserContext","createContext","UserContextProvider","children","useState","verifiedUser","setVerifiedUser","Provider","value","Header","useContext","history","useHistory","className","style","marginRight","first_name","marginTop","onClick","removeItem","is_admin","push","ROUTES","Navbar","dropDown","setDropDown","useEffect","handleClick","window","addEventListener","removeEventListener","to","SignIn","email","setEmail","password","setPassword","setError","isInvalid","handleSignIn","e","preventDefault","user","alert","setItem","onSubmit","type","onChange","target","disabled","AdminSignIn","fetchAllUsers","fetchUser","u_id","editPassword","put","editUserGeneral","editUserInfo","fetchUserAvailability","fetchAllUsersAvailabilities","editUserAvailability","a_id","deleteUser","delete","AdminEmployees","users","setUsers","width","setWidth","isLoading","setIsLoading","handleAddEmployee","setWindowWidth","innerWidth","getUsers","color","id","map","i","backgroundColor","acn","title","last_name","phone","fetchRoles","AdminEmployee","useParams","setUser","roles","setRoles","success","setSuccess","isUpdating","setIsUpdating","setFirstName","setLastName","setPhone","role_id","setRoleId","hourly_pay","setHourlyPay","started_at","setStartedAt","showEditGeneral","setShowEditGeneral","showEditInfo","setShowEditInfo","new_password","setNewPassword","confirm_new_password","setConfirmNewPassword","handleUpdatePassword","handleUpdateUserGeneral","handleUpdateUserInfo","updated_at","Date","now","toLocaleDateString","handleRemoveUser","confirm","getData","defaultValue","parseInt","role","level","placeholder","AdminNewEmployee","isSubmitting","setIsSubmitting","handleSubmit","getRoles","fetchTimes","createPreset","fetchPresets","deletePreset","p_id","createShift","createCopyOfWeeklySchedule","clearWeeklySchedule","weekStart","weekEnd","fetchAllUsersSchedulesByDate","start_date","end_date","fetchAllUsersSchedulesByDateMobile","updateShift","s_id","deleteShift","fetchAllRequests","fetchRequestsByUser","fetchAllRequestsByStatus","status","fetchAllRequestsByStatusAndDate","updateRequestStatus","r_id","createRequest","deleteRequest","fetchStoreHours","setStoreHours","updateStoreHours","SchedulesMobile","usersMobile","days","times","presets","store","getTimeValue","handleFetchSchedule","editShiftIndex","setEditShiftIndex","dayIndex","setDayIndex","setUId","date","setDate","shiftStartValue","setShiftStartValue","shiftEndValue","setShiftEndValue","showAddShift","setShowAddShift","handleCreateShift","newDate","toDate","parseISO","startTimeHour","split","startTimeMinute","endTimeHour","endTimeMinute","shift_start","getFullYear","getMonth","getDate","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","shift_end","handleSaveShift","handleRemoveShift","handleSelectPreset","shiftValue","handleCancelAddShift","renderShift","shiftIndex","length","format","handleEditShift","toLocaleTimeString","replace","renderEditShift","preset","shift_start_value","shift_end_value","time","parseFloat","store_open_level","store_close_level","height","customStyles","content","top","left","right","bottom","transform","isOpen","onRequestClose","shouldCloseOnOverlayClick","label","toDateString","AdminSchedules","availabilities","setAvailabilities","setUsersMobile","requests","setRequests","setDays","setTimes","setPresets","setStore","isModifying","setIsModifying","isLoadingSchedule","setIsLoadingSchedule","startOfToday","dateISO","setDateISO","setWeekStart","setWeekEnd","setLevel","userData","setUserData","availabilityIndex","setAvailabilityIndex","getDatesOfTheWeek","selectedDate","year","month","day","startOfWeek","subMonths","weekStartsOn","daysArray","dateToAdd","toISOString","sort","b","handleCopyWeeklySchedule","shifts","j","shift","addWeeks","handleNextWeek","handleClearWeeklySchedule","formattedDate","handleSavePreset","newPresets","hour","getHours","min","getMinutes","toString","getTime","a_i","index","startStartValue","endStartValue","renderBlank","start_time","store_open_value","store_close_value","handleUserClick","RenderAvailability","availability","end_time","RenderController","subWeeks","handlePreviousWeek","request","requested_dates","r_i","RenderSchedule","u_i","getDatesAndLoadData","AdminRequests","setStatus","handleUpdateRequestStatus","handleSortRequests","getRequests","rd","rd_i","notes","requested_at","AdminStore","isSettingStoreHours","setIsSettingStoreHours","updatingId","setUpdatingId","store_open","setStoreOpen","store_close","setStoreClose","setStoreOpenValue","setStoreCloseValue","setStoreOpenLevel","setStoreCloseLevel","showEditHours","setShowEditHours","storeFirstTime","setStoreFirstTime","handleSetStoreHours","setTimeout","saveData","handleUpdateStoreHours","handleDeletePreset","handleSelectStoreOpen","handleSelectStoreClose","UserProfile","setUid","EditAvailability","dayStart","dayEnd","setDayStart","setDayEnd","UserAvailability","showEditAvailability","setShowEditAvailability","setAvailability","monStart","setMonStart","monEnd","setMonEnd","tueStart","setTueStart","tueEnd","setTueEnd","wedStart","setWedStart","wedEnd","setWedEnd","thurStart","setThurStart","thurEnd","setThurEnd","friStart","setFriStart","friEnd","setFriEnd","satStart","setSatStart","satEnd","setSatEnd","sunStart","setSunStart","sunEnd","setSunEnd","handleShowEditAvailability","handleSaveAvailability","counter","obj","newAvail","avail","Modal","setAppElement","UserRequests","isDeleting","setIsDeleting","createNewRequest","setCreateNewRequest","setNotes","dates","setDates","didUpdate","setDidUpdate","numOfDateInputs","setNumOfDateInputs","handleDeleteRequest","handleCreateRequest","datesArr","clearForm","handleAddDate","undefined","arrCopy","DateElement","XDateElement","splice","handleRemoveDate","renderDateElements","dateElements","UserSchedules","ProtectedRoute","Component","component","rest","render","location","pathname","state","from","UserRoute","AuthRoute","IsLoaded","App","getVerifiedUser","exact","path","DimensionContext","DimensionContextProvider","isMobile","setIsMobile","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9408e9a6.chunk.js","sourcesContent":["export const SIGN_IN = '/';\r\nexport const ADMIN_SIGN_IN = '/admin'\r\n\r\nexport const ADMIN_EMPLOYEES = '/admin/employees'; // Need 'exact' for path in App.js\r\nexport const ADMIN_EMPLOYEE = '/admin/employees/:u_id';\r\nexport const ADMIN_NEW_EMPLOYEE = '/admin/employees/new';\r\nexport const ADMIN_SCHEDULES = '/admin/schedules';\r\nexport const ADMIN_REQUESTS = '/admin/requests';\r\nexport const ADMIN_STORE = '/admin/store';\r\n\r\nexport const USER_SCHEDULES = '/user/schedules';\r\nexport const USER_REQUESTS = '/user/requests';\r\nexport const USER_AVAILABILITY = '/user/availability';\r\nexport const USER_PROFILE = '/user/profile';","import axios from 'axios';\r\n\r\nexport const signIn = async (credentials) => {\r\n    try {\r\n        const res = await axios.post('/auth/signin', credentials);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createUser = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/auth/register', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const verifyUser = async (tokenConfig) => {\r\n    try {\r\n        const res = await axios.get('/auth/verify', tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response };\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        const tokenConfig = { headers: { 'Authorization': `Bearer ${token}` } };\r\n        return tokenConfig;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport default function UserContextProvider({ children }) {\r\n    const [verifiedUser, setVerifiedUser] = useState(null);\r\n    return (\r\n        <UserContext.Provider value={{ verifiedUser, setVerifiedUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Header() {\r\n    const { verifiedUser, setVerifiedUser } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        sessionStorage.removeItem('token');\r\n        setVerifiedUser(null); // Remove verified user from context\r\n        if (verifiedUser.is_admin) history.push(ROUTES.ADMIN_SIGN_IN);\r\n        else history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    return (\r\n        <header className=\"bg-light-blue-darken-4\">\r\n            {\r\n                verifiedUser &&\r\n                <div className=\"flex\" style={{ marginRight: \"3%\" }}>\r\n                    <div className=\"mr-4\">\r\n                        <p className=\"off-white\">Welcome, {verifiedUser && verifiedUser.first_name}</p>\r\n                    </div>\r\n                    <div className=\"pointer-no-u\" style={{ marginTop: '2px' }} onClick={handleSignOut}>\r\n                        <p className=\"off-white\"><i className=\"fas fa-sign-out-alt text-5\"></i></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </header>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { UserContext } from '../contexts/userContext';\r\n\r\nexport default function Navbar() {\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    // Navbar for large screens\r\n    const renderSideNav = () => (\r\n        <div className=\"navbar text-center bg-light-blue-darken-4\">\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_EMPLOYEES : ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Employees\" : \"Schedules\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"users\" : \"calendar-alt\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_SCHEDULES : ROUTES.USER_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Schedules\" : \"Requests\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"calendar-alt\" : \"inbox\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_REQUESTS : ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Requests\" : \"Availability\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className={`fas fa-${verifiedUser.is_admin ? \"inbox\" : \"clock\"}`}></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n            <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_STORE : ROUTES.USER_PROFILE} className=\"s12 m6 l3 text-no-u\">\r\n                <div className=\"hovered py-2 off-white\">\r\n                    <p className=\"text-5\">{verifiedUser.is_admin ? \"Store\" : \"Profile\"}</p>\r\n                    <p className=\"text-7\">\r\n                        <i className=\"fas fa-wrench\"></i>\r\n                    </p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n    // Navbar for small screens\r\n    const renderDropDown = () => {\r\n        return (\r\n            <div className=\"dropdown off-white text-7 pointer\" onClick={() => setDropDown(!dropDown)}>\r\n                <i className=\"fas fa-bars\"></i>\r\n                {dropDown ? (\r\n                    <div className=\"navbar-top text-center\">\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_EMPLOYEES : ROUTES.USER_SCHEDULES} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Employees\" : \"Schedules\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_SCHEDULES : ROUTES.USER_REQUESTS} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Schedules\" : \"Requests\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_REQUESTS : ROUTES.USER_AVAILABILITY} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Requests\" : \"Availability\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                        <Link to={verifiedUser.is_admin ? ROUTES.ADMIN_STORE : ROUTES.USER_PROFILE} className=\"s12 m6 l3 text-no-u\">\r\n                            <div className=\"py-4 hovered off-white\">\r\n                                <p className=\"text-4\">{verifiedUser.is_admin ? \"Store\" : \"Profile\"}</p>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                ) : (\r\n                    null\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClick = () => setDropDown(!dropDown);\r\n\r\n        // Allows user to close dropdown menu when clicking elsewhere\r\n        if (dropDown) {\r\n            window.addEventListener(\"click\", handleClick);\r\n        }\r\n\r\n        return () => window.removeEventListener(\"click\", handleClick);\r\n    }, [dropDown])\r\n\r\n    if (!verifiedUser) return null;\r\n\r\n    return (\r\n        <div>\r\n            {renderDropDown()}\r\n            {renderSideNav()}\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                alert('Please sign in through the admin portal');\r\n                history.push(ROUTES.ADMIN_SIGN_IN);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.USER_SCHEDULES);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 m7-offset-3 l6-offset-4\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport * as ROUTES from '../constants/routes';\r\nimport { UserContext } from '../contexts/userContext';\r\nimport { signIn } from '../services/auth';\r\n\r\nexport default function AdminSignIn() {\r\n    const history = useHistory();\r\n    const { setVerifiedUser } = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = email === '' || password === '';\r\n\r\n    const handleSignIn = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const credentials = { email, password };\r\n        const res = await signIn(credentials);\r\n\r\n        if (res.error) setError(res.error);\r\n\r\n        if (res.token) {\r\n            if (res.user.is_admin) {\r\n                setVerifiedUser(res.user); // Set verified user in context for header\r\n                sessionStorage.setItem('token', res.token);\r\n                history.push(ROUTES.ADMIN_EMPLOYEES);\r\n            }\r\n            else if (!res.user.is_admin) {\r\n                alert('Please sign in through the user portal');\r\n                history.push(ROUTES.SIGN_IN);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in grid2\">\r\n            <div className=\"xs10-offset-1 m7-offset-3 l6-offset-4\">\r\n                <h2 className=\"mb-2\">Sign In</h2>\r\n                <form onSubmit={handleSignIn} className=\"flex flex-col\">\r\n                    <div className=\"mb-1\">\r\n                        <p>Email</p>\r\n                        <input type=\"email\" className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p>Password</p>\r\n                        <input type=\"password\" className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                    </div>\r\n                    <div className=\"align-self-center\">\r\n                        <button className={`btn-lg ${!isInvalid && 'btn-hovered'}`} disabled={isInvalid}>Sign In</button>\r\n                    </div>\r\n                    {error ? <p className=\"mt-2 red\">{error}</p> : null}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get('/users');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editPassword = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/reset-pw/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserGeneral = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserInfo = async (u_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/system/${u_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchUserAvailability = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/users/availability/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersAvailabilities = async () => {\r\n    try {\r\n        const res = await axios.get('/users/availability/all');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const editUserAvailability = async (a_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/users/availability/${a_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteUser = async (u_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/users/${u_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { fetchAllUsers } from '../../services/users';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployees() {\r\n    const history = useHistory();\r\n    const [users, setUsers] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const handleClickUser = (u_id) => {\r\n        history.push(`${ROUTES.ADMIN_EMPLOYEES}/${u_id}`);\r\n    }\r\n\r\n    const handleAddEmployee = () => {\r\n        history.push(ROUTES.ADMIN_NEW_EMPLOYEE);\r\n    }\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    const renderEmployees = () => (\r\n        <div>\r\n            <div className=\"mt-6 mb-4 flex flex-center\">\r\n                <button className=\"btn-x-lg btn-hovered\" onClick={handleAddEmployee}>\r\n                    <p>Add Employee</p>\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <table id=\"users-list\" className=\"border-collapse w-100 text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"p-3\">Role</th>\r\n                            <th className=\"p-3\">Name</th>\r\n                            <th className=\"p-3\">Email</th>\r\n                            <th className=\"p-3\">Phone</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users && users.map((user, i) => (\r\n                                <tr\r\n                                    key={i}\r\n                                    className=\"pointer\"\r\n                                    onClick={() => handleClickUser(user.u_id)}\r\n                                    style={i % 2 === 0\r\n                                        ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                                        : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                                >\r\n                                    <td className=\"p-3\">{width < 380 ? user.acn : user.title}</td>\r\n                                    <td className=\"p-3\">{user.first_name} {user.last_name}</td>\r\n                                    <td className=\"p-3\">{user.email}</td>\r\n                                    <td className=\"p-3\">{user.phone}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getUsers() {\r\n            const users = await fetchAllUsers();\r\n            if (users) setUsers(users);\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth); // Set default width on page load\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        renderEmployees()\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchRoles = async () => {\r\n    try {\r\n        const res = await axios.get('/roles');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { editPassword, editUserGeneral, editUserInfo, fetchUser, deleteUser } from '../../services/users';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function AdminEmployee() {\r\n    const { u_id } = useParams();\r\n    const history = useHistory();\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [role_id, setRoleId] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n    const [showEditInfo, setShowEditInfo] = useState(false);\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserInfo = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, hourly_pay, started_at, updated_at: new Date(Date.now()).toLocaleDateString() };\r\n\r\n        const res = await editUserInfo(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditInfo(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleRemoveUser = async () => {\r\n        const doRemove = window.confirm(\"Are you sure you want to remove this user?\");\r\n        if (doRemove) {\r\n            const tokenConfig = isAuthenticated();\r\n    \r\n            const res = await deleteUser(u_id, tokenConfig);\r\n            if (res.success) {\r\n                history.push(\"/admin/employees\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderUserInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <h4>Role</h4>\r\n                <p>{user.title}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Hourly Pay</h4>\r\n                <p>{verifiedUser.level <= user.level ? user.hourly_pay : '**'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Started At</h4>\r\n                <p>{new Date(user.started_at).toLocaleDateString()}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <h4>Updated At</h4>\r\n                <p>{user.updated_at ? new Date(user.updated_at).toLocaleDateString() : 'N/A'}</p>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button\r\n                    className={`btn-med ${verifiedUser.level > user.level ? '' : 'btn-hovered'}`}\r\n                    onClick={() => setShowEditInfo(true)}\r\n                    disabled={verifiedUser.level > user.level}\r\n                >\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditInfo = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"my-2\">\r\n                <p>Role</p>\r\n                <select defaultValue={user.role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                    {\r\n                        roles && roles.map((role, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={role.role_id}\r\n                            >\r\n                                {role.title}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Hourly Pay</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={hourly_pay}\r\n                    onChange={({ target }) => setHourlyPay(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <p>Started At</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={new Date(started_at).toLocaleDateString()}\r\n                    onChange={({ target }) => setStartedAt(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserInfo()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditInfo(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword} className=\"\">\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const user = await fetchUser(u_id);\r\n            const roles = await fetchRoles();\r\n            setUser(user);\r\n            setRoles(roles);\r\n            setFirstName(user.first_name);\r\n            setLastName(user.last_name);\r\n            setEmail(user.email);\r\n            setPhone(user.phone);\r\n            setRoleId(user.role_id);\r\n            setHourlyPay(user.hourly_pay);\r\n            setStartedAt(user.started_at);\r\n            setIsLoading(false);\r\n        }\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    showEditInfo\r\n                                        ? renderEditInfo()\r\n                                        : renderUserInfo()\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    verifiedUser && verifiedUser.u_id === user.u_id &&\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                        <div className=\"mt-8 text-center\">\r\n                            <button\r\n                                className=\"btn-med red btn-hovered pointer-no-u\"\r\n                                onClick={handleRemoveUser}\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchRoles } from '../../services/roles';\r\nimport { createUser } from '../../services/auth';\r\n\r\nexport default function AdminNewEmployee() {\r\n    const [roles, setRoles] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const [role_id, setRoleId] = useState(6);\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [hourly_pay, setHourlyPay] = useState('');\r\n    const [started_at, setStartedAt] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsSubmitting(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { role_id, first_name, last_name, email, phone, password, hourly_pay, started_at };\r\n\r\n        const res = await createUser(body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsSubmitting(false);\r\n        } else {\r\n            setError('');\r\n            setRoleId('');\r\n            setFirstName('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setPhone('');\r\n            setPassword('');\r\n            setHourlyPay('');\r\n            setSuccess(true);\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const renderEmployeeForm = () => (\r\n        <div className=\"grid2\">\r\n            <form onSubmit={handleSubmit} className=\"xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"my-2\">\r\n                    <p>First Name</p>\r\n                    <input type=\"text\" value={first_name} className=\"form-input\" onChange={({ target }) => setFirstName(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Last Name</p>\r\n                    <input type=\"text\" value={last_name} className=\"form-input\" onChange={({ target }) => setLastName(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Email</p>\r\n                    <input type=\"email\" value={email} className=\"form-input\" onChange={({ target }) => setEmail(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Phone</p>\r\n                    <input type=\"text\" value={phone} className=\"form-input\" onChange={({ target }) => setPhone(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Password</p>\r\n                    <input type=\"password\" value={password} className=\"form-input\" onChange={({ target }) => setPassword(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Hourly Pay</p>\r\n                    <input type=\"text\" value={hourly_pay} className=\"form-input\" onChange={({ target }) => setHourlyPay(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Starting Date</p>\r\n                    <input type=\"date\" value={started_at} className=\"form-input\" onChange={({ target }) => setStartedAt(target.value)} />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <p>Role</p>\r\n                    <select value={role_id} onChange={({ target }) => setRoleId(parseInt(target.value))}>\r\n                        {\r\n                            roles && roles.map((role, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={role.role_id}\r\n                                >\r\n                                    {role.title}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"text-center mt-5\">\r\n                    <button\r\n                        className={`btn-med ${!isSubmitting && \"btn-hovered\"}`}\r\n                        disabled={isSubmitting}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n                {error ? <p className=\"red mt-3\">{error}</p> : null}\r\n                {success ? <p className=\"green mt-3\">Profile successfully added!</p> : null}\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getRoles() {\r\n            const roles = await fetchRoles();\r\n            setRoles(roles);\r\n        }\r\n\r\n        getRoles();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            <div>\r\n                <Link to={ROUTES.ADMIN_EMPLOYEES} className=\"text-no-u black pointer\">\r\n                    <i className=\"fas fa-arrow-left\"></i> Back\r\n                </Link>\r\n            </div>\r\n            {renderEmployeeForm()}\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const fetchTimes = async () => {\r\n    try {\r\n        const res = await axios.get('/presets/times');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createPreset = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/presets', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchPresets = async () => {\r\n    try {\r\n        const res = await axios.get('/presets');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deletePreset = async (p_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/presets/${p_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const createShift = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/shifts', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createCopyOfWeeklySchedule = async (body) => {\r\n    try {\r\n        const res = await axios.post('/shifts/copy', body);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const clearWeeklySchedule = async (weekStart, weekEnd, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/shifts/clear/${weekStart}/${weekEnd}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\n// Unused for now\r\nexport const fetchShiftsByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDate = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllUsersSchedulesByDateMobile = async (start_date, end_date) => {\r\n    try {\r\n        const res = await axios.get(`/shifts/all/mobile/${start_date}/${end_date}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateShift = async (s_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/shifts/${s_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteShift = async (s_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/shifts/${s_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchAllRequests = async () => {\r\n    try {\r\n        const res = await axios.get('/requests');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchRequestsByUser = async (u_id) => {\r\n    try {\r\n        const res = await axios.get(`/requests/${u_id}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatus = async (status) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const fetchAllRequestsByStatusAndDate = async (status, weekStart, weekEnd) => {\r\n    try {\r\n        const res = await axios.get(`/requests/status/${status}/${weekStart}/${weekEnd}`);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateRequestStatus = async (r_id, body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put(`/requests/${r_id}`, body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const createRequest = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/requests', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async (r_id, tokenConfig) => {\r\n    try {\r\n        const res = await axios.delete(`/requests/${r_id}`, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const fetchStoreHours = async () => {\r\n    try {\r\n        const res = await axios.get('/store');\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const setStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.post('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}\r\n\r\nexport const updateStoreHours = async (body, tokenConfig) => {\r\n    try {\r\n        const res = await axios.put('/store', body, tokenConfig);\r\n        return res.data;\r\n    } catch (err) {\r\n        return { error: err.response.data };\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { format, toDate, parseISO } from \"date-fns\";\r\nimport { isAuthenticated } from \"../../services/auth\";\r\nimport { createShift, updateShift, deleteShift } from \"../../services/shifts\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Modal from \"react-modal\";\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default function SchedulesMobile({ usersMobile, users, days, times, presets, store, getTimeValue, handleFetchSchedule }) {\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [editShiftIndex, setEditShiftIndex] = useState(null);\r\n    const [dayIndex, setDayIndex] = useState(null); // For saving a shift\r\n    const [u_id, setUId] = useState(null);\r\n    const [date, setDate] = useState(\"\");\r\n    const [shiftStartValue, setShiftStartValue] = useState(\"\");\r\n    const [shiftEndValue, setShiftEndValue] = useState(\"\");\r\n    const [showAddShift, setShowAddShift] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleEditShift = (user, shiftIndex) => {\r\n        // Set specific shift time values to match with times array in the select inputs\r\n        setShiftStartValue(getTimeValue(user.shift_start));\r\n        setShiftEndValue(getTimeValue(user.shift_end));\r\n        // Enable edit shift component to render\r\n        setEditShiftIndex(shiftIndex);\r\n        // Get date to be saved when submitting\r\n        for (let i = 0; i < days.length; i++) {\r\n            // Use format for mobile, otherwise shifts will return one day after (ㆆ_ㆆ)\r\n            if (format(new Date(user.shift_start), \"yyyy-MM-dd\") === days[i].split(\"T\")[0]) {\r\n                setDayIndex(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCreateShift = async () => {\r\n        // Return error if form is not filled out\r\n        if (!u_id || !date || !shiftStartValue || !shiftEndValue) {\r\n            return setError(\"Employee and shift required\");\r\n        }\r\n\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const newDate = toDate(parseISO(date));\r\n\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shiftStartValue.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shiftStartValue.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shiftEndValue.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shiftEndValue.split(' ')[1]);\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = toDate(new Date(\r\n            newDate.getFullYear(),\r\n            newDate.getMonth(),\r\n            newDate.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute))\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }); // Local timezone\r\n\r\n        const shift_end = toDate(new Date(\r\n            newDate.getFullYear(),\r\n            newDate.getMonth(),\r\n            newDate.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute))\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        await createShift(body, tokenConfig);\r\n\r\n        await handleFetchSchedule();\r\n\r\n        setEditShiftIndex(null);\r\n        setIsUpdating(false);\r\n        setShowAddShift(false);\r\n    }\r\n\r\n    const handleSaveShift = async (u_id, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = toDate(new Date(days[dayIndex]));\r\n\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shiftStartValue.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shiftStartValue.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shiftEndValue.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shiftEndValue.split(' ')[1]);\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = toDate(new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute))\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }); // Local timezone\r\n\r\n        const shift_end = toDate(new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute))\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        await updateShift(s_id, body, tokenConfig);\r\n\r\n        await handleFetchSchedule();\r\n\r\n        setEditShiftIndex(null);\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            await handleFetchSchedule();\r\n            setEditShiftIndex(null);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleCancelAddShift = () => {\r\n        setShiftStartValue(\"\");\r\n        setShiftEndValue(\"\");\r\n        setUId(\"\");\r\n        setError(\"\");\r\n        setShowAddShift(false);\r\n    }\r\n\r\n    const renderShift = (user, shiftIndex) => (\r\n        <div className=\"p-1\" onClick={() => handleEditShift(user, shiftIndex)}>\r\n            <p>\r\n                {new Date(user.shift_start).toLocaleTimeString().replace(\":00 \", \" \")} -&nbsp;\r\n                {new Date(user.shift_end).toLocaleTimeString().replace(\":00 \", \" \")}\r\n            </p>\r\n            <p><strong>{user.first_name} {user.last_name}</strong></p>\r\n            <p><em>{user.title}</em></p>\r\n        </div>\r\n    )\r\n\r\n    const renderEditShift = (user) => (\r\n        <div className=\"bg-blue-grey-lighten-5 p-1\">\r\n            <div className=\"flex justify-evenly\">\r\n                <div className=\"flex flex-col flex-center text-center\">\r\n                    <p className=\"schedules-mobile-text\"><strong>{user.first_name} {user.last_name}</strong></p>\r\n                    <p className=\"schedules-mobile-text\"><em>{user.title}</em></p>\r\n                </div>\r\n                <div>\r\n                    <div className=\"flex justify-evenly mb-1\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">Preset</p>\r\n                        <select\r\n                            defaultValue='0 0'\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => handleSelectPreset(target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            {presets && presets.map((preset, i) => (\r\n                                    <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                        {preset.shift_start} - {preset.shift_end}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex justify-evenly mb-1\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">Start</p>\r\n                        <select\r\n                            value={shiftStartValue}\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                            {times && times.map((time, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={time.value}\r\n                                        disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                    >\r\n                                        {time.time}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex justify-evenly mb-1\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">End</p>\r\n                        <select\r\n                            value={shiftEndValue}\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                            {times && times.map((time, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={time.value}\r\n                                        disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                    >\r\n                                        {time.time}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1 text-center\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"w-100 flex justify-evenly\">\r\n                        <div\r\n                            className=\"py-1 w-100 text-center pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => handleSaveShift(user.u_id, user.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"py-1 w-100 text-center pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => handleRemoveShift(user.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-trash-alt\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"py-1 w-100 text-center pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => setEditShiftIndex(null)}\r\n                        >\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const customStyles = {\r\n        content: {\r\n          top: '50%',\r\n          left: '50%',\r\n          right: 'auto',\r\n          bottom: 'auto',\r\n          marginRight: '-50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          backgroundColor: '#eceff1'\r\n        },\r\n      };\r\n\r\n    const renderAddShift = () => (\r\n        showAddShift ? (\r\n            <Modal\r\n                isOpen={showAddShift}\r\n                style={customStyles}\r\n                onRequestClose={() => setShowAddShift(false)}\r\n                shouldCloseOnOverlayClick={true}\r\n            >\r\n                <div className=\"add-shift-mobile text-center\">\r\n                    <div className=\"flex my-2\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">Date</p>\r\n                        <input type=\"date\" onChange={({ target }) => setDate(target.value)} />\r\n                    </div>\r\n                    <div className=\"flex my-2\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">Employee</p>\r\n                        <select onChange={({ target }) => setUId(target.value)}>\r\n                            <option value=\"\">Select...</option>\r\n                            {users.map((user, i) => (\r\n                                <option key={i} value={user.u_id}>\r\n                                    {user.first_name} {user.last_name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex my-2\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">Preset</p>\r\n                        <select\r\n                            defaultValue='0 0'\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => handleSelectPreset(target.value)}\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                            {presets && presets.map((preset, i) => (\r\n                                    <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                        {preset.shift_start} - {preset.shift_end}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex my-2\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">Start</p>\r\n                        <select\r\n                            value={shiftStartValue}\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                            {times && times.map((time, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={time.value}\r\n                                        disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                    >\r\n                                        {time.time}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex my-2\">\r\n                        <p className=\"mr-1 schedules-mobile-text\">End</p>\r\n                        <select\r\n                            value={shiftEndValue}\r\n                            disabled={isUpdating}\r\n                            onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                            {times && times.map((time, i) => (\r\n                                    <option\r\n                                        key={i}\r\n                                        value={time.value}\r\n                                        disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                    >\r\n                                        {time.time}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    {error && <p className=\"red schedules-mobile-text\">{error}</p>}\r\n                    <div className=\"my-2\">\r\n                        <button className=\"btn-med hovered m-1 bg-white\" onClick={() => handleCreateShift(u_id)}>Save</button>\r\n                        <button className=\"btn-med hovered m-1 bg-white\" onClick={handleCancelAddShift}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        ) : (\r\n            <div className=\"add-shift-btn flex flex-center\" onClick={() => setShowAddShift(true)}>\r\n                <p className=\"white text-7\"><i className=\"fas fa-plus\" /></p>\r\n            </div>\r\n        )\r\n    )\r\n    \r\n    return (\r\n        <div className=\"schedules-mobile\">\r\n            {renderAddShift()}\r\n            {\r\n                usersMobile.map((user, i) => (\r\n                    <div key={i}>\r\n                        {user.label ? (\r\n                            <div className=\"w-100 border-x bg-x-light-gray text-center\">\r\n                                <p><strong>{format(new Date(user.shift_start), \"PP\")}</strong></p>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex flex-col flex-center border-solid-1 p-1\" style={{ width: \"20%\" }}>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[0]}</strong></p>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[2]}</strong></p>\r\n                                </div>\r\n                                <div className=\"w-80 border-solid-1\">\r\n                                    {editShiftIndex === i\r\n                                        ? renderEditShift(user)\r\n                                        : renderShift(user, i)\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { createPreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { createShift, fetchAllUsersSchedulesByDate, fetchAllUsersSchedulesByDateMobile, deleteShift, updateShift, createCopyOfWeeklySchedule, clearWeeklySchedule } from '../../services/shifts';\r\nimport { fetchAllUsersAvailabilities } from '../../services/users';\r\nimport { startOfToday, startOfWeek, addWeeks, subWeeks, subMonths, parseISO, format, toDate } from 'date-fns';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllRequestsByStatusAndDate } from '../../services/requests';\r\nimport { fetchStoreHours } from '../../services/store';\r\nimport SchedulesMobile from './schedulesMobile';\r\n\r\nexport default function AdminSchedules() {\r\n    const [availabilities, setAvailabilities] = useState(null);\r\n    const [users, setUsers] = useState(null);\r\n    const [usersMobile, setUsersMobile] = useState(null);\r\n    const [requests, setRequests] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isModifying, setIsModifying] = useState(false);\r\n    const [isLoadingSchedule, setIsLoadingSchedule] = useState(true);\r\n\r\n    // Used for datepicker\r\n    const [dateISO, setDateISO] = useState(format(startOfToday(), \"yyyy-MM-dd\"))\r\n    // Used for fetching data within dates in ISO string\r\n    const [weekStart, setWeekStart] = useState('');\r\n    const [weekEnd, setWeekEnd] = useState('');\r\n    // Used for getting time values when saving a shift\r\n    const [shift_start_value, setShiftStartValue] = useState('0 0');\r\n    const [shift_end_value, setShiftEndValue] = useState('0 0');\r\n    const [level, setLevel] = useState('');\r\n    // Used to render edit shift mode for selected date and employee only\r\n    const [userData, setUserData] = useState(null);\r\n    const [availabilityIndex, setAvailabilityIndex] = useState(null);\r\n\r\n    // For init load and datepicker\r\n    const getDatesOfTheWeek = async (selectedDate) => {\r\n        setIsLoadingSchedule(true);\r\n        let date;\r\n        if (selectedDate) {\r\n            // Create new date with separate identifiers because it is inaccurate for Mondays\r\n            let year = selectedDate.split(\"-\")[0];\r\n            let month = selectedDate.split(\"-\")[1];\r\n            let day = selectedDate.split(\"-\")[2];\r\n            // Subtract one month because they are counted from zero\r\n            // i.e. \"2022-02-18\" is considered March\r\n            date = startOfWeek(subMonths(new Date(year, month, day), 1), { weekStartsOn: 1 });\r\n            setDateISO(selectedDate); // For datepicker value\r\n        }\r\n        else {\r\n            date = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n        }\r\n\r\n        let daysArray = [];\r\n        let dateToAdd = date;\r\n        // Get dates in current work week\r\n        for (let i = 0; i < 7; i++) {\r\n            daysArray.push(dateToAdd.toISOString());\r\n            dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n        }\r\n\r\n        const weekStart = daysArray[0];\r\n        const weekEnd = daysArray[6];\r\n\r\n        setDays(daysArray);\r\n        setWeekStart(weekStart);\r\n        setWeekEnd(weekEnd);\r\n\r\n        // Refresh schedules after date change\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n        const requests = await fetchAllRequestsByStatusAndDate('Approved', weekStart, weekEnd);\r\n\r\n        // Add date labels for mobile schedules display\r\n        for (let i = 0; i < daysArray.length; i++) {\r\n            usersMobile.push({ shift_start: daysArray[i], label: true });\r\n        }\r\n        usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n        \r\n        setUsers(users);\r\n        setUsersMobile(usersMobile);\r\n        setRequests(requests);\r\n        setIsLoadingSchedule(false);\r\n    }\r\n\r\n    // Can create or update shift based on s_id being provided\r\n    const handleSaveShift = async (u_id, dayIndex, s_id) => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        // Get shift date\r\n        const date = new Date(days[dayIndex]);\r\n        // Get hour and minute in INT data type for date object\r\n        const startTimeHour = parseInt(shift_start_value.split(' ')[0]);\r\n        const startTimeMinute = parseInt(shift_start_value.split(' ')[1]);\r\n        // Get hour and minute in INT data type for date object\r\n        const endTimeHour = parseInt(shift_end_value.split(' ')[0]);\r\n        const endTimeMinute = parseInt(shift_end_value.split(' ')[1]);\r\n        // Create new date objects with year, month, day, hour, minute, and timezone\r\n        const shift_start = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            startTimeHour,\r\n            startTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone }); // Local timezone\r\n\r\n        const shift_end = new Date(\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            endTimeHour,\r\n            endTimeMinute)\r\n            .toLocaleString('en-US', { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone });\r\n\r\n        const body = { u_id, shift_start, shift_end };\r\n        if (s_id) {\r\n            await updateShift(s_id, body, tokenConfig);\r\n        } else {\r\n            await createShift(body, tokenConfig);\r\n        }\r\n\r\n        await handleFetchSchedule();\r\n\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n        setIsUpdating(false);\r\n    }\r\n\r\n    const handleCopyWeeklySchedule = async () => {\r\n        const doCopy = window.confirm('Copy schedule to next week? Any shifts already saved will be overwritten.');\r\n        if (doCopy) {\r\n            setIsModifying(true);\r\n            setIsLoadingSchedule(true);\r\n\r\n            let shifts = [];\r\n            // Copy shifts in work week for all users\r\n            for (let i = 0; i < users.length; i++) {\r\n                for (let j = 0; j < users[i].shifts.length; j++) {\r\n                    if (users[i].shifts[j].shift_end !== null) {\r\n                        let shift = {\r\n                            u_id: users[i].u_id,\r\n                            shift_start: format(addWeeks(parseISO(users[i].shifts[j].shift_start), 1), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                            shift_end: format(addWeeks(parseISO(users[i].shifts[j].shift_end), 1), \"yyyy-MM-dd'T'HH:mm:ss\")\r\n                        }\r\n                        shifts.push(shift);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const body = {\r\n                shifts,\r\n                weekStart: addWeeks(parseISO(weekStart), 1),\r\n                weekEnd: addWeeks(parseISO(weekEnd), 1)\r\n            };\r\n\r\n            await createCopyOfWeeklySchedule(body);\r\n            await handleFetchSchedule();\r\n            // Display following week after copying schedule\r\n            handleNextWeek();\r\n            setIsModifying(false);\r\n        }\r\n    }\r\n\r\n    const handleClearWeeklySchedule = async () => {\r\n        const doClear = window.confirm(\"Clear all shifts for this week?\");\r\n        if (doClear) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsModifying(true);\r\n            setIsLoadingSchedule(true);\r\n            \r\n            await clearWeeklySchedule(weekStart, weekEnd, tokenConfig);\r\n            await handleFetchSchedule();\r\n\r\n            setIsModifying(false);\r\n            setIsLoadingSchedule(false);\r\n        }\r\n    }\r\n\r\n    // Refresh schedule after any changes are made\r\n    const handleFetchSchedule = async () => {\r\n        const users = await fetchAllUsersSchedulesByDate(weekStart, weekEnd);\r\n        const usersMobile = await fetchAllUsersSchedulesByDateMobile(weekStart, weekEnd);\r\n\r\n        if (usersMobile.length) {\r\n            // Add date labels for mobile schedules display\r\n            for (let i = 0; i < days.length; i++) {\r\n                usersMobile.push({ shift_start: days[i], label: true });\r\n            }\r\n            usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start));\r\n        }\r\n\r\n        setUsers(users);\r\n        setUsersMobile(usersMobile);\r\n    }\r\n\r\n    const handleCancelShift = () => {\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    // Render edit shift (new)\r\n    const handleUserClick = (u_id, index) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(store.store_open_value);\r\n        setShiftEndValue(store.store_close_value);\r\n    }\r\n\r\n    // Render edit shift (update)\r\n    const handleEditShift = (u_id, index, startStartValue, endStartValue) => {\r\n        setUserData(u_id);\r\n        setAvailabilityIndex(index);\r\n        setShiftStartValue(startStartValue);\r\n        setShiftEndValue(endStartValue);\r\n        setLevel(level);\r\n    }\r\n\r\n    const handlePreviousWeek = () => {\r\n        // New Date object will adjust hours based on timezone so use toDate\r\n        let date = subWeeks(toDate(parseISO((dateISO))), 1);\r\n        // Format date so date selector can read it\r\n        let formattedDate = format(date, \"yyyy-MM-dd\");\r\n        setDateISO(formattedDate);\r\n        getDatesOfTheWeek(formattedDate);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleNextWeek = () => {\r\n        let date = addWeeks(toDate(parseISO((dateISO))), 1);\r\n        let formattedDate = format(date, \"yyyy-MM-dd\");\r\n        setDateISO(formattedDate);\r\n        getDatesOfTheWeek(formattedDate);\r\n        setUserData('');\r\n        setAvailabilityIndex('');\r\n    }\r\n\r\n    const handleSelectPreset = (shiftValue) => {\r\n        if (!shiftValue) return;\r\n        setShiftStartValue(shiftValue.split('-')[0]);\r\n        setShiftEndValue(shiftValue.split('-')[1]);\r\n    }\r\n\r\n    const handleSavePreset = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        let level;\r\n        let shift_start;\r\n        let shift_end;\r\n        for (let i = 0; i < presets.length; i++) {\r\n            if (shift_start_value === presets[i].shift_start_value\r\n                && shift_end_value === presets[i].shift_end_value) {\r\n                alert('Preset already saved');\r\n                return;\r\n            }\r\n        }\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (shift_start_value === times[i].value) {\r\n                // Assign only start time level for sorting when displayed in the list\r\n                level = times[i].level;\r\n                shift_start = times[i].time;\r\n            }\r\n            if (shift_end_value === times[i].value) {\r\n                shift_end = times[i].time;\r\n            }\r\n        }\r\n\r\n        const body = { shift_start, shift_end, shift_start_value, shift_end_value, level };\r\n        await createPreset(body, tokenConfig);\r\n\r\n        const newPresets = await fetchPresets();\r\n        setPresets(newPresets);\r\n\r\n        alert('Preset saved')\r\n    }\r\n\r\n    const handleRemoveShift = async (s_id) => {\r\n        const toDelete = window.confirm('Are you sure you want to remove this shift?');\r\n        if (toDelete) {\r\n            const tokenConfig = isAuthenticated();\r\n            setIsUpdating(true);\r\n            await deleteShift(s_id, tokenConfig);\r\n\r\n            await handleFetchSchedule();\r\n            setUserData('');\r\n            setAvailabilityIndex('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const getTimeValue = (shift) => {\r\n        const date = new Date(shift);\r\n        const hour = date.getHours();\r\n        const min = date.getMinutes();\r\n        const values = `${hour.toString()} ${min.toString()}`\r\n        return values;\r\n    }\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderShift = (u_id, a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"pointer schedules-text bg-blue-lighten-4\"\r\n            onClick={() => handleEditShift(u_id, a_i, getTimeValue(shift_start), getTimeValue(shift_end))}\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderBlank = (u_id, a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`pointer ${time.start_time === 'N/A' ? 'bg-black' : 'hovered'}`}\r\n            onClick={() => handleUserClick(u_id, a_i)}\r\n        ></td>\r\n    )\r\n\r\n    const renderEditShift = (u_id, dayIndex, shift) => (\r\n        <td key={dayIndex} className=\"bg-blue-grey-lighten-5\">\r\n            <div className=\"flex justify-evenly mt-1\">\r\n                <p>Preset</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    defaultValue='0 0'\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => handleSelectPreset(target.value)}\r\n                >\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        presets && presets.map((preset, i) => (\r\n                            <option key={i} value={`${preset.shift_start_value}-${preset.shift_end_value}`}>\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <hr className=\"my-1\" />\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p>Start</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_start_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftStartValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"flex justify-evenly mb-1\">\r\n                <p className=\"mr-1\">End</p>\r\n                <select\r\n                    className=\"w-60 schedules-text\"\r\n                    value={shift_end_value}\r\n                    disabled={isUpdating}\r\n                    onChange={({ target }) => setShiftEndValue(target.value)}>\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option\r\n                                key={i}\r\n                                value={time.value}\r\n                                disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                            >\r\n                                {time.time}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            {\r\n                isUpdating ?\r\n                    <div className=\"my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            color='rgb(50, 110, 150)'\r\n                            height={12}\r\n                        />\r\n                    </div>\r\n                    : <div className=\"my-2 w-100 flex justify-evenly\">\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => handleSaveShift(u_id, dayIndex, shift.s_id)}\r\n                        >\r\n                            <i className=\"fas fa-check schedules-text\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => handleSavePreset()}\r\n                        >\r\n                            <i className=\"fas fa-star schedules-text\"></i>\r\n                        </div>\r\n                        <div\r\n                            className=\"p-1 w-100 pointer hovered border-solid-1 bg-white\"\r\n                            onClick={() => shift.s_id ? handleRemoveShift(shift.s_id) : handleCancelShift()}\r\n                        >\r\n                            {\r\n                                shift.shift_end === null\r\n                                    ? <i className=\"fas fa-times schedules-text\"></i>\r\n                                    : <i className=\"fas fa-trash-alt schedules-text\"></i>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </td>\r\n    )\r\n\r\n    const RenderAvailability = () => (\r\n        <div className=\"availability\">\r\n            <h3 className=\"text-center\">Availability</h3>\r\n            <table className=\"border-collapse w-100 text-center schedules-text\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        {\r\n                            // Render the day only\r\n                            days && days.map((day, i) => (\r\n                                <th key={i}>\r\n                                    <p>{new Date(day).toString().split(' ')[0]}</p>\r\n                                </th>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        availabilities && availabilities.map((user, i) => (\r\n                            <tr\r\n                                key={i}\r\n                                style={i % 2 === 0\r\n                                    ? { backgroundColor: 'rgb(235, 235, 235)' }\r\n                                    : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                            >\r\n                                <td>\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.level === 2 ? \"A. Manager\" : user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, i) => (\r\n                                        <td key={i} className={`${time.start_time === 'N/A' && 'bg-black'}`}>\r\n                                            {(time.start_time === 'ANY' && time.end_time === 'ANY') ? 'ANY' : `${time.start_time} - ${time.end_time}`}\r\n                                        </td>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n\r\n    const RenderController = () => (\r\n        <div className=\"schedules-controller\">\r\n            <div className=\"select-week\">\r\n                <div className=\"pointer\" onClick={() => handlePreviousWeek()}>\r\n                    <em className=\"text-3\">Prev&nbsp;week</em>\r\n                    <p>\r\n                        <i className=\"fas fa-angle-double-left\"></i>\r\n                    </p>\r\n                </div>\r\n                <div id=\"controller-date\" className=\"relative\">\r\n                    <input\r\n                        type=\"date\"\r\n                        className=\"border-solid-1 border-smooth\"\r\n                        value={dateISO} // Datepicker must be yyyy-mm-dd format\r\n                        onChange={({ target }) => getDatesOfTheWeek(target.value)}\r\n                    />\r\n                    <div className=\"absolute\">&nbsp;</div>\r\n                </div>\r\n                <div className=\"pointer\" onClick={() => handleNextWeek()}>\r\n                    <em className=\"text-3\">Next&nbsp;week</em>\r\n                    <p>\r\n                        <i className=\"fas fa-angle-double-right\"></i>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"schedules-requests\">\r\n                <div className=\"mx-3\">\r\n                    <p className=\"text-3\">\r\n                        <strong>Approved Requests</strong>\r\n                    </p>\r\n                    {\r\n                        requests.length \r\n                            ? requests.map((request, i) => (\r\n                                <div key={i}>\r\n                                    <p className=\"schedules-text\">\r\n                                        {request.first_name} {request.last_name}:\r\n                                        {request.requested_dates.map((date, r_i) => (\r\n                                            <span key={r_i}>\r\n                                                &nbsp;\r\n                                                {\r\n                                                    r_i === request.requested_dates.length - 1\r\n                                                        ? new Date(date).toLocaleDateString()\r\n                                                        : `${new Date(date).toLocaleDateString()},`\r\n                                                }\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                </div>\r\n                            ))\r\n                            : <p className=\"text-3\">None</p>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className={`controller-btn ${!isModifying && 'btn-hovered'}`}\r\n                        onClick={handleCopyWeeklySchedule}\r\n                        disabled={isModifying}\r\n                    >\r\n                        Copy\r\n                    </button>\r\n                    <button\r\n                        className={`controller-btn ${!isModifying && 'btn-hovered'}`}\r\n                        onClick={handleClearWeeklySchedule}\r\n                        disabled={isModifying}\r\n                    >\r\n                        Clear\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const RenderSchedule = () => (\r\n        isLoadingSchedule ? (\r\n            <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                <Loader\r\n                    type='Oval'\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            </div>\r\n        ) : (\r\n            <table className=\"schedules-table w-100 border-collapse text-center table-fixed schedules-text\">\r\n                <tbody>\r\n                        <tr>\r\n                            <td className=\"bg-x-light-gray\">\r\n                                <strong>Name</strong>\r\n                            </td>\r\n                            {\r\n                                days && days.map((day, i) => (\r\n                                    <td key={i} className=\"bg-x-light-gray\">\r\n                                        <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                        <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                    </td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                        {\r\n                            users && users.map((user, u_i) => (\r\n                                <tr key={u_i}>\r\n                                    <td className=\"py-1\">\r\n                                        <p>\r\n                                            <strong>{user.first_name} {user.last_name}</strong>\r\n                                        </p>\r\n                                        <em>{user.level === 2 ? \"A. Manager\" : user.title}</em>\r\n                                    </td>\r\n                                    {\r\n                                        user.availability.map((time, a_i) => (\r\n                                            // Only render edit mode for the selected date and employee\r\n                                            (userData === user.u_id && availabilityIndex === a_i)\r\n                                                ? renderEditShift(user.u_id, a_i, user.shifts[a_i])\r\n                                                // Render shifts if they exist during the selected week\r\n                                                : user.shifts[a_i].shift_end === null\r\n                                                    ? renderBlank(user.u_id, a_i, time)\r\n                                                    : renderShift(user.u_id, a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                        ))\r\n                                    }\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n            </table>\r\n        )\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getDatesAndLoadData() {\r\n            const times = await fetchTimes();\r\n            const availabilities = await fetchAllUsersAvailabilities();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n            await getDatesOfTheWeek();\r\n\r\n            setTimes(times);\r\n            setAvailabilities(availabilities);\r\n            setPresets(presets);\r\n            setStore(store);\r\n            setShiftStartValue(store.store_open_value);\r\n            setShiftEndValue(store.store_close_value);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getDatesAndLoadData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        <RenderController />\r\n                        <RenderSchedule />\r\n                        <RenderAvailability />\r\n                        <SchedulesMobile\r\n                            usersMobile={usersMobile}\r\n                            users={users}\r\n                            days={days}\r\n                            times={times}\r\n                            store={store}\r\n                            presets={presets}\r\n                            getTime={getTime}\r\n                            getTimeValue={getTimeValue}\r\n                            handleFetchSchedule={handleFetchSchedule}\r\n                        />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport { fetchAllRequestsByStatus, fetchAllRequests, updateRequestStatus } from '../../services/requests';\r\nimport Loader from 'react-loader-spinner';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function AdminRequests() {\r\n    const [requests, setRequests] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [status, setStatus] = useState('All');\r\n\r\n    const handleUpdateRequestStatus = async (r_id, status) => {\r\n        const update = window.confirm('Confirm decision?');\r\n        if (update) {\r\n            setIsUpdating(true);\r\n            const tokenConfig = isAuthenticated();\r\n            const body = { status };\r\n\r\n            await updateRequestStatus(r_id, body, tokenConfig);\r\n            const requests = await fetchAllRequests();\r\n\r\n            setRequests(requests);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleSortRequests = async (status) => {\r\n        setIsLoading(true);\r\n        if (status === 'All') {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        } else {\r\n            const requests = await fetchAllRequestsByStatus(status);\r\n            setRequests(requests);\r\n            setStatus(status);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    const renderFilters = () => (\r\n        <div className=\"flex flex-col align-center\">\r\n            <p className=\"mb-2\">View by</p>\r\n            <div className=\"w-50 lg-w-60 med-w-80 xs-w-90 grid2\">\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'All' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('All')}\r\n                >\r\n                    All\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Pending' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Pending')}\r\n                >\r\n                    Pending\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Approved' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Approved')}\r\n                >\r\n                    Approved\r\n                </button>\r\n                <button\r\n                    className={`border-solid-1 border-oval pointer-no-u py-1 hovered s6 l3\r\n                        ${status === 'Denied' && 'bg-light-gray'}`}\r\n                    onClick={() => handleSortRequests('Denied')}\r\n                >\r\n                    Denied\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        <table className=\"border-collapse w-100 requests-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"p-2 border-solid-1\">Name</th>\r\n                    <th className=\"p-2 border-solid-1\">Requested Dates</th>\r\n                    <th className=\"p-2 border-solid-1\">Notes</th>\r\n                    <th className=\"p-2 border-solid-1\">Submission Date</th>\r\n                    <th className=\"p-2 border-solid-1\">Status</th>\r\n                    <th className=\"p-2 border-solid-1\">Edit</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {requests.map((request, i) => (\r\n                    <tr\r\n                        key={i}\r\n                        style={i % 2 === 0\r\n                        ? { backgroundColor: 'rgb(240, 240, 240)' }\r\n                        : { backgroundColor: 'rbg(255, 255, 255)' }}\r\n                    >\r\n                        <td className=\"py-1 px-2\">\r\n                            {request.first_name} {request.last_name} <br />\r\n                            <em className=\"text-3\">{request.title}</em>\r\n                        </td>\r\n                        <td className=\"py-1 px-2\">{request.requested_dates.map((rd, rd_i) => (\r\n                            <span key={rd_i}>\r\n                                {\r\n                                // Add commas if more than one date\r\n                                rd_i === request.requested_dates.length - 1\r\n                                    ? format(new Date(rd), \"MM-dd-yyyy\")\r\n                                    : `${format(new Date(rd), \"MM-dd-yyyy\")}, `\r\n                                }\r\n                            </span>\r\n                        ))}</td>\r\n                        <td className=\"py-1 px-2\">{request.notes}</td>\r\n                        <td className=\"py-1 px-2 text-center\">{format(new Date(request.requested_at), \"MM-dd-yyyy\")}</td>\r\n                        <td className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue py-1 px-2 text-center'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green py-1 px-2 text-center'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red py-1 px-2 text-center'\r\n                                                : ''}>\r\n                            {request.status}\r\n                            </td>\r\n                        <td className=\"py-1 px-2 text-center\">\r\n                            <button\r\n                                className={`btn-sm my-1 mx-2 ${!isUpdating && 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Approve\r\n                            </button>\r\n                            <button\r\n                                className={`btn-sm my-1 ${!isUpdating && 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Deny\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n    const renderRequestsCards = () => (\r\n        <div className=\"grid2\">\r\n            {requests.length ? requests.map((request, r_i) => (\r\n                    <div key={r_i} className=\"my-2 p-1 border-solid-1 border-smooth box-shadow flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                        <div className=\"my-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                        <div className=\"w-100 grid2\">\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>{request.first_name} {request.last_name}</strong>\r\n                                <p>{request.title}</p>\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Requested dates</strong>\r\n                                {\r\n                                    request.requested_dates.map((rd, rd_i) => (\r\n                                        <p key={rd_i}>\r\n                                            {\r\n                                                // Add commas if more than one date\r\n                                                rd_i === request.requested_dates.length - 1\r\n                                                    ? new Date(rd).toDateString()\r\n                                                    : `${new Date(rd).toDateString()},`\r\n                                            }\r\n                                        </p>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Submission date</strong>\r\n                                <p>{new Date(request.requested_at).toDateString()}</p>\r\n                            </div>\r\n                            <div className=\"my-1 s12 l6\">\r\n                                <strong>Notes</strong>\r\n                                <p>{request.notes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Approved')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Approve\r\n                            </button>\r\n                            <button\r\n                                className={`btn-med m-2 ${isUpdating ? '' : 'btn-hovered pointer-no-u'}`}\r\n                                onClick={() => handleUpdateRequestStatus(request.r_id, 'Denied')}\r\n                                disabled={isUpdating}\r\n                            >\r\n                                Deny\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n                    : (\r\n                        <p className=\"l2-offset-5 text-center mt-3\">\r\n                            None\r\n                        </p>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getRequests() {\r\n            const requests = await fetchAllRequests();\r\n            setRequests(requests);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getRequests();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"mt-4 mx-1\">\r\n            {renderFilters()}\r\n            {isLoading ? (\r\n                    <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"mt-5\">\r\n                        {renderRequests()}\r\n                        <div className=\"requests-cards\">\r\n                            {renderRequestsCards()}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchStoreHours, setStoreHours, updateStoreHours } from '../../services/store';\r\nimport { deletePreset, fetchPresets, fetchTimes } from '../../services/presets';\r\nimport { isAuthenticated } from '../../services/auth';\r\n\r\nexport default function AdminStore() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [times, setTimes] = useState(null);\r\n    const [presets, setPresets] = useState(null);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [isSettingStoreHours, setIsSettingStoreHours] = useState(false);\r\n    const [updatingId, setUpdatingId] = useState('');\r\n\r\n    const [store_open, setStoreOpen] = useState('');\r\n    const [store_close, setStoreClose] = useState('');\r\n    const [store_open_value, setStoreOpenValue] = useState('');\r\n    const [store_close_value, setStoreCloseValue] = useState('');\r\n    const [store_open_level, setStoreOpenLevel] = useState('');\r\n    const [store_close_level, setStoreCloseLevel] = useState('');\r\n    const [showEditHours, setShowEditHours] = useState(false);\r\n    const [storeFirstTime, setStoreFirstTime] = useState(null);\r\n\r\n    const handleSetStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await setStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n\r\n    }\r\n\r\n    const handleUpdateStoreHours = async () => {\r\n        const tokenConfig = isAuthenticated();\r\n        setIsSettingStoreHours(true);\r\n\r\n        setTimeout(() => {\r\n            async function saveData() {\r\n                const body = {\r\n                    store_open,\r\n                    store_close,\r\n                    store_open_value,\r\n                    store_close_value,\r\n                    store_open_level,\r\n                    store_close_level\r\n                };\r\n\r\n                await updateStoreHours(body, tokenConfig);\r\n                await fetchStoreHours();\r\n                setIsSettingStoreHours(false);\r\n                setShowEditHours(false);\r\n            }\r\n\r\n            saveData();\r\n        }, 700);\r\n    }\r\n\r\n    const handleSelectStoreOpen = (store_open) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_open) {\r\n                setStoreOpen(times[i].time);\r\n                setStoreOpenValue(times[i].value);\r\n                setStoreOpenLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectStoreClose = (store_close) => {\r\n        for (let i = 0; i < times.length; i++) {\r\n            if (times[i].time === store_close) {\r\n                setStoreClose(times[i].time);\r\n                setStoreCloseValue(times[i].value);\r\n                setStoreCloseLevel(parseFloat(times[i].level));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDeletePreset = async (p_id) => {\r\n        const doDelete = window.confirm('Delete preset?');\r\n        if (doDelete) {\r\n            setIsUpdating(true);\r\n            setUpdatingId(p_id);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deletePreset(p_id, tokenConfig);\r\n            const presets = await fetchPresets();\r\n\r\n            setPresets(presets);\r\n            setIsUpdating(false);\r\n            setUpdatingId('');\r\n        }\r\n    }\r\n\r\n    const renderStoreHours = () => (\r\n        <div className=\"flex flex-col\">\r\n            <div className=\"my-1 w-50 sm-w-80\">\r\n                <p>Open</p>\r\n                <select\r\n                    value={store_open}\r\n                    onChange={({ target }) => handleSelectStoreOpen(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"my-1 w-50 sm-w-80\">\r\n                <p>Close</p>\r\n                <select\r\n                    value={store_close}\r\n                    onChange={({ target }) => handleSelectStoreClose(target.value)}\r\n                >\r\n                    {\r\n                        times && times.map((time, i) => (\r\n                            <option key={i} value={time.time}>{time.time}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => storeFirstTime === true ? handleSetStoreHours() : handleUpdateStoreHours()}\r\n                >\r\n                    Save\r\n                </button>\r\n                <button\r\n                    className={`m-2 btn-sm ${!isSettingStoreHours && 'btn-hovered'}`}\r\n                    disabled={isSettingStoreHours}\r\n                    onClick={() => setShowEditHours(false)}\r\n                >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n            {\r\n                isSettingStoreHours &&\r\n                <Loader\r\n                    type='ThreeDots'\r\n                    height={10}\r\n                    color='rgb(50, 110, 150)'\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const renderPresets = () => (\r\n        <div>\r\n            <h3 className=\"my-2\">Manage presets</h3>\r\n            {\r\n                presets && presets.map((preset, i) => (\r\n                    isUpdating && updatingId === preset.p_id\r\n                        ? <div className=\"text-center\">\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                                height={20}\r\n                            />\r\n                        </div>\r\n                        : <div key={i} className=\"relative\" id=\"manage-presets\" onClick={() => handleDeletePreset(preset.p_id)}>\r\n                            <p className=\"border-solid-1 w-50 sm-w-80 p-1\">\r\n                                {preset.shift_start} - {preset.shift_end}\r\n                            </p>\r\n                            <div className=\"absolute w-50 sm-w-80 h-100 px-1 bg-dark-gray flex flex-center white pointer-no-u\">\r\n                                <p><i className=\"fas fa-trash-alt\"></i> Delete?</p>\r\n                            </div>\r\n                        </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const times = await fetchTimes();\r\n            const presets = await fetchPresets();\r\n            const store = await fetchStoreHours();\r\n\r\n            setTimes(times);\r\n            setPresets(presets);\r\n\r\n            if (store) {\r\n                setStoreOpen(store.store_open);\r\n                setStoreClose(store.store_close);\r\n                setStoreOpenValue(store.store_open_value);\r\n                setStoreCloseValue(store.store_close_value);\r\n                setStoreOpenLevel(store.store_open_level);\r\n                setStoreCloseLevel(store.store_close_level);\r\n                setStoreFirstTime(false);\r\n            } else {\r\n                setStoreFirstTime(true);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"\">\r\n                        <h3 className=\"my-2\">Store Hours</h3>\r\n                        {\r\n                            showEditHours\r\n                                ? renderStoreHours()\r\n                                : <div>\r\n                                    {\r\n                                        store_open && store_close\r\n                                            ? <p className=\"my-2\">{store_open.toString()} - {store_close.toString()}</p>\r\n                                            : <p className=\"my-2\">N/A</p>\r\n                                    }\r\n                                    <button className=\"btn-med btn-hovered mt-1 mb-2\" onClick={() => setShowEditHours(true)}>Edit</button>\r\n                                </div>\r\n                        }\r\n\r\n                        <hr className=\"my-3\" />\r\n\r\n                        {\r\n                            renderPresets()\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport { fetchUser, editPassword, editUserGeneral } from '../../services/users';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function UserProfile() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [u_id, setUid] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const [first_name, setFirstName] = useState('');\r\n    const [last_name, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n    const [confirm_new_password, setConfirmNewPassword] = useState('');\r\n\r\n    const [showEditGeneral, setShowEditGeneral] = useState(false);\r\n\r\n    const handleUpdatePassword = async (e) => {\r\n        e.preventDefault();\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { password, new_password, confirm_new_password };\r\n\r\n        const res = await editPassword(u_id, body, tokenConfig);\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        }\r\n        else {\r\n            setError('');\r\n            setSuccess('Password changed successfully');\r\n            setPassword('');\r\n            setNewPassword('');\r\n            setConfirmNewPassword('');\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const handleUpdateUserGeneral = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        const body = { first_name, last_name, email, phone };\r\n\r\n        const res = await editUserGeneral(u_id, body, tokenConfig);\r\n\r\n        if (res.error) {\r\n            setError(res.error);\r\n            setIsUpdating(false);\r\n        } else {\r\n            const user = await fetchUser(u_id, tokenConfig);\r\n            setError('');\r\n            setUser(user);\r\n            setShowEditGeneral(false);\r\n            setIsUpdating(false);\r\n        }\r\n    }\r\n\r\n    const renderUserGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <h4>Name</h4>\r\n                <p>{user.first_name} {user.last_name}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Email</h4>\r\n                <p>{user.email}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <h4>Phone</h4>\r\n                <p>{user.phone}</p>\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" onClick={() => setShowEditGeneral(true)}>Edit</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditGeneral = () => (\r\n        <div className=\"my-2\">\r\n            <div className=\"py-1\">\r\n                <p>First Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={first_name}\r\n                    onChange={({ target }) => setFirstName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Last Name</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={last_name}\r\n                    onChange={({ target }) => setLastName(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Email</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={email}\r\n                    onChange={({ target }) => setEmail(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <p>Phone</p>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-input\"\r\n                    defaultValue={phone}\r\n                    onChange={({ target }) => setPhone(target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"py-1\">\r\n                <button className=\"btn-med btn-hovered\" disabled={isUpdating} onClick={() => handleUpdateUserGeneral()}>Save</button>\r\n                <button className=\"btn-med btn-hovered ml-5\" disabled={isUpdating} onClick={() => setShowEditGeneral(false)}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditPassword = () => (\r\n        <div>\r\n            <h4 className=\"mt-2\">Update Password</h4>\r\n            <form onSubmit={handleUpdatePassword}>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={password}\r\n                        placeholder=\"Current Password\"\r\n                        onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={new_password}\r\n                        placeholder=\"New Password\"\r\n                        onChange={({ target }) => setNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-input\"\r\n                        value={confirm_new_password}\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={({ target }) => setConfirmNewPassword(target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"py-2\">\r\n                    <button\r\n                        className={`btn-med ${isUpdating ? '' : 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            // verifiedUser is null on init load so add as dependency and check it again to fetch data\r\n            if (verifiedUser) {\r\n                const user = await fetchUser(verifiedUser.u_id);\r\n                setUid(user.u_id);\r\n                setUser(user);\r\n                setFirstName(user.first_name);\r\n                setLastName(user.last_name);\r\n                setEmail(user.email);\r\n                setPhone(user.phone);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div className=\"m-1\">\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div>\r\n                        {\r\n                            user &&\r\n                            <div>\r\n                                {\r\n                                    showEditGeneral\r\n                                        ? renderEditGeneral()\r\n                                        : renderUserGeneral()\r\n\r\n                                }\r\n                                <hr />\r\n                                {\r\n                                    renderEditPassword()\r\n                                }\r\n\r\n                                {error ? <p className=\"red\">{error}</p> : null}\r\n                                {success ? <p className=\"green\">{success}</p> : null}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","export default function EditAvailability({ day, dayStart, dayEnd, setDayStart, setDayEnd, times, store }) {\r\n    return (\r\n        <div className=\"w-100 text-center\">\r\n            <p className=\"mt-2\">{day}</p>\r\n            <div className=\"grid2\">\r\n                <div className=\"xs5-offset-1 s4-offset-2 l4-offset-2\">\r\n                    <p>From</p>\r\n                    <select value={dayStart} onChange={({ target }) => setDayStart(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"xs5 s4 l4\">\r\n                    <p>To</p>\r\n                    <select value={dayEnd} onChange={({ target }) => setDayEnd(target.value)}>\r\n                        <option value=\"ANY\">ANY</option>\r\n                        <option value=\"N/A\">N/A</option>\r\n                        {\r\n                            times && times.map((time, i) => (\r\n                                <option\r\n                                    key={i}\r\n                                    value={time.time}\r\n                                    disabled={time.level < parseFloat(store.store_open_level) || time.level > parseFloat(store.store_close_level)}\r\n                                >\r\n                                    {time.time}\r\n                                </option>\r\n                            ))\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport EditAvailability from './editAvailability';\r\nimport { editUserAvailability, fetchUserAvailability } from '../../services/users';\r\nimport { fetchTimes } from '../../services/presets';\r\nimport { fetchStoreHours } from '../../services/store';\r\n\r\nexport default function UserAvailability() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isUpdating, setIsUpdating] = useState(false);\r\n    const [showEditAvailability, setShowEditAvailability] = useState(false);\r\n\r\n    const [availability, setAvailability] = useState(null);\r\n    const [times, setTimes] = useState(null);\r\n    const [store, setStore] = useState(null);\r\n\r\n    const [monStart, setMonStart] = useState('');\r\n    const [monEnd, setMonEnd] = useState('');\r\n    const [tueStart, setTueStart] = useState('');\r\n    const [tueEnd, setTueEnd] = useState('');\r\n    const [wedStart, setWedStart] = useState('');\r\n    const [wedEnd, setWedEnd] = useState('');\r\n    const [thurStart, setThurStart] = useState('');\r\n    const [thurEnd, setThurEnd] = useState('');\r\n    const [friStart, setFriStart] = useState('');\r\n    const [friEnd, setFriEnd] = useState('');\r\n    const [satStart, setSatStart] = useState('');\r\n    const [satEnd, setSatEnd] = useState('');\r\n    const [sunStart, setSunStart] = useState('');\r\n    const [sunEnd, setSunEnd] = useState('');\r\n\r\n    const days = [\r\n        {\r\n            day: \"Monday\",\r\n            dayStart: monStart,\r\n            dayEnd: monEnd,\r\n            setDayStart: setMonStart,\r\n            setDayEnd: setMonEnd\r\n        },\r\n        {\r\n            day: \"Tuesday\",\r\n            dayStart: tueStart,\r\n            dayEnd: tueEnd,\r\n            setDayStart: setTueStart,\r\n            setDayEnd: setTueEnd\r\n        },\r\n        {\r\n            day: \"Wednesday\",\r\n            dayStart: wedStart,\r\n            dayEnd: wedEnd,\r\n            setDayStart: setWedStart,\r\n            setDayEnd: setWedEnd\r\n        },\r\n        {\r\n            day: \"Thursday\",\r\n            dayStart: thurStart,\r\n            dayEnd: thurEnd,\r\n            setDayStart: setThurStart,\r\n            setDayEnd: setThurEnd\r\n        },\r\n        {\r\n            day: \"Friday\",\r\n            dayStart: friStart,\r\n            dayEnd: friEnd,\r\n            setDayStart: setFriStart,\r\n            setDayEnd: setFriEnd\r\n        },\r\n        {\r\n            day: \"Saturday\",\r\n            dayStart: satStart,\r\n            dayEnd: satEnd,\r\n            setDayStart: setSatStart,\r\n            setDayEnd: setSatEnd\r\n        },\r\n        {\r\n            day: \"Sunday\",\r\n            dayStart: sunStart,\r\n            dayEnd: sunEnd,\r\n            setDayStart: setSunStart,\r\n            setDayEnd: setSunEnd\r\n        },\r\n    ]\r\n\r\n    const handleShowEditAvailability = () => {\r\n        for (let i = 0; i < availability.length; i++) {\r\n            switch (availability[i].day) {\r\n                case 'Monday':\r\n                    setMonStart(availability[i].start_time);\r\n                    setMonEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Tuesday':\r\n                    setTueStart(availability[i].start_time);\r\n                    setTueEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Wednesday':\r\n                    setWedStart(availability[i].start_time);\r\n                    setWedEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Thursday':\r\n                    setThurStart(availability[i].start_time);\r\n                    setThurEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Friday':\r\n                    setFriStart(availability[i].start_time);\r\n                    setFriEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Saturday':\r\n                    setSatStart(availability[i].start_time);\r\n                    setSatEnd(availability[i].end_time);\r\n                    break;\r\n                case 'Sunday':\r\n                    setSunStart(availability[i].start_time);\r\n                    setSunEnd(availability[i].end_time);\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        setShowEditAvailability(true);\r\n    }\r\n\r\n    const handleSaveAvailability = async () => {\r\n        setIsUpdating(true);\r\n        const tokenConfig = isAuthenticated();\r\n        let data = [];\r\n        let counter = 1;\r\n\r\n        for (let i = 0; i < days.length; i++) {\r\n            let obj = {\r\n                u_id: verifiedUser.u_id,\r\n                day: days[i].day,\r\n                start_time: days[i].dayStart,\r\n                end_time: days[i].dayEnd,\r\n                level: counter++\r\n            }\r\n\r\n            data.push(obj);\r\n        }\r\n\r\n        // Check if N/A is paired with a time value\r\n        for (let i = 0; i < data.length; i++) {\r\n            if ((data[i].start_time === 'N/A' && data[i].end_time !== 'N/A') ||\r\n                (data[i].start_time !== 'N/A' && data[i].end_time === 'N/A')) {\r\n                setIsUpdating(false);\r\n                return alert('N/A must only be N/A');\r\n            }\r\n        }\r\n\r\n        // Availability for each day is one record per update in db\r\n        for (let i = 0; i < data.length; i++) {\r\n            await editUserAvailability(availability[i].a_id, data[i], tokenConfig);\r\n        }\r\n\r\n        const newAvail = await fetchUserAvailability(verifiedUser.u_id);\r\n        setAvailability(newAvail);\r\n        setIsUpdating(false);\r\n        setShowEditAvailability(false);\r\n    }\r\n\r\n    const renderAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3\">\r\n                <div>\r\n                    {\r\n                        availability && availability.map((avail, i) => (\r\n                            <div key={i} className=\"text-center my-2\">\r\n                                <p className=\"my-1\"><strong>{avail.day}</strong></p>\r\n                                <p>{avail.start_time} - {avail.end_time}</p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"text-center my-5\">\r\n                    <button className=\"btn-sm btn-hovered\" onClick={handleShowEditAvailability}>Edit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderEditAvailability = () => (\r\n        <div className=\"mt-4 grid2\">\r\n            <div className=\"border-solid-1 border-smooth s10-offset-1 l6-offset-3 text-center\">\r\n                {days.map(({ day, dayStart, dayEnd, setDayStart, setDayEnd }, i) => (\r\n                    <div key={i}>\r\n                        <EditAvailability\r\n                            day={day}\r\n                            dayStart={dayStart}\r\n                            dayEnd={dayEnd}\r\n                            setDayStart={setDayStart}\r\n                            setDayEnd={setDayEnd}\r\n                            times={times}\r\n                            store={store}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n                <div className=\"m-2\">\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => handleSaveAvailability()}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className={`btn-sm m-2 ${!isUpdating && 'btn-hovered'}`}\r\n                        disabled={isUpdating}\r\n                        onClick={() => setShowEditAvailability(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n\r\n                {\r\n                    isUpdating &&\r\n                    <div className=\"text-center my-1\">\r\n                        <Loader\r\n                            type='ThreeDots'\r\n                            height={10}\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const availability = await fetchUserAvailability(verifiedUser.u_id);\r\n                const times = await fetchTimes();\r\n                const store = await fetchStoreHours();\r\n\r\n                setAvailability(availability);\r\n                setTimes(times);\r\n                setStore(store);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <>\r\n                        {\r\n                            showEditAvailability\r\n                                ? renderEditAvailability()\r\n                                : renderAvailability()\r\n                        }\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../contexts/userContext';\r\nimport { isAuthenticated } from '../../services/auth';\r\nimport Loader from 'react-loader-spinner';\r\nimport { createRequest, deleteRequest, fetchRequestsByUser } from '../../services/requests';\r\nimport { format } from 'date-fns';\r\n\r\nexport default function UserRequests() {\r\n    const { verifiedUser } = useContext(UserContext);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [createNewRequest, setCreateNewRequest] = useState(false);\r\n    const [requests, setRequests] = useState(null);\r\n\r\n    const [notes, setNotes] = useState('');\r\n    const [dates, setDates] = useState([]);\r\n    const [didUpdate, setDidUpdate] = useState(false); // Used to refresh date inputs after selection\r\n    const [numOfDateInputs, setNumOfDateInputs] = useState(1);\r\n\r\n    const handleDeleteRequest = async (r_id) => {\r\n        const doDelete = window.confirm('Delete request?');\r\n        if (doDelete) {\r\n            setIsDeleting(true);\r\n\r\n            const tokenConfig = isAuthenticated();\r\n            await deleteRequest(r_id, tokenConfig);\r\n\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n            setRequests(requests);\r\n            setIsDeleting(false);\r\n        }\r\n    }\r\n\r\n    const handleCreateRequest = async () => {\r\n        const request = window.confirm('Submit request?');\r\n        if (request) {\r\n            setIsSubmitting(true);\r\n            const tokenConfig = isAuthenticated();\r\n            let datesArr = dates;\r\n\r\n            for (let i = 0; i < datesArr.length; i++) {\r\n                datesArr[i] = new Date(datesArr[i]).toISOString();\r\n            }\r\n\r\n            const body = {\r\n                u_id: verifiedUser.u_id,\r\n                requested_at: format(new Date(), \"yyyy-MM-dd'T'HH:mm:ss\"),\r\n                notes,\r\n                requested_dates: datesArr\r\n            }\r\n\r\n            await createRequest(body, tokenConfig);\r\n            const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n\r\n            setRequests(requests);\r\n            setCreateNewRequest(false);\r\n            clearForm();\r\n            setIsSubmitting(false);\r\n        }\r\n    }\r\n\r\n    const handleCancelCreateNewRequest = () => {\r\n        setCreateNewRequest(false);\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNumOfDateInputs(1);\r\n        setDates([]);\r\n        setNotes('');\r\n    }\r\n\r\n    const handleAddDate = (index, newDate) => {\r\n        if (dates[index] !== undefined) {\r\n            let arrCopy = dates;\r\n            // eslint-disable-next-line\r\n            // let removed = dates.splice(index, 1, newDate); // Replace old date with selected date\r\n            arrCopy.push(newDate)\r\n            setDates(arrCopy);\r\n            setDidUpdate(!didUpdate); // Refresh date input values\r\n        }\r\n        else {\r\n            setDates([...dates, newDate]);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDate = (index) => {\r\n        let arrCopy = dates;\r\n        // eslint-disable-next-line\r\n        let removed = arrCopy.splice(index, 1); // Remove selected date from dates array\r\n        // let removed = arrCopy.pop();\r\n        setDates(arrCopy);\r\n        setNumOfDateInputs(numOfDateInputs - 1);\r\n    }\r\n\r\n    // First date input\r\n    const DateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Additional date inputs\r\n    const XDateElement = ({ index }) => {\r\n        return (\r\n            <div className=\"my-2\">\r\n                <p>Select date</p>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dates[index] !== undefined ? dates[index] : ''}\r\n                    onChange={({ target }) => handleAddDate(index, target.value)}\r\n                />\r\n                <button className=\"btn-sm btn-hovered mt-2\" onClick={() => handleRemoveDate(index)}>\r\n                    <i className=\"fas fa-minus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Render date inputs based on numOfDateInputs\r\n    const renderDateElements = () => {\r\n        let dateElements = [];\r\n        for (let i = 0; i < numOfDateInputs; i++) {\r\n            if (numOfDateInputs > 1 && i === numOfDateInputs - 1) {\r\n                // Render additional date inputs\r\n                dateElements.push(<XDateElement key={i} index={i} />)\r\n            } else {\r\n                // Render initial date input\r\n                dateElements.push(<DateElement key={i} index={i} />)\r\n            }\r\n        }\r\n\r\n        return dateElements; // Return date inputs to render\r\n    }\r\n\r\n    const renderNewRequest = () => (\r\n        <div className=\"border-solid-1 border-smooth my-2 flex flex-col align-center text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n            <div className=\"w-50\">\r\n                {\r\n                    // Render custom date elements and functions from above\r\n                    renderDateElements()\r\n                }\r\n                <button\r\n                    className={`btn-sm mb-2 ${dates.length === numOfDateInputs && 'btn-hovered'}`}\r\n                    disabled={dates.length !== numOfDateInputs} // Disable if next date is not yet selected\r\n                    onClick={() => setNumOfDateInputs(numOfDateInputs + 1)}\r\n                >\r\n                    <i className=\"fas fa-plus\"></i>&nbsp;Date\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <p>Notes</p>\r\n                <textarea className=\"h-10 p-1\" onChange={({ target }) => setNotes(target.value)}></textarea>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCreateRequest()}>Submit</button>\r\n                <button className=\"btn-med btn-hovered m-3\" disabled={isSubmitting} onClick={() => handleCancelCreateNewRequest()}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const renderRequests = () => (\r\n        requests && requests.map((request, i) => (\r\n            <div key={i} className=\"border-solid-1 border-smooth my-2 text-center xs12 s10-offset-1 m8-offset-2 l6-offset-3\">\r\n                <div className=\"flex\">\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Submission date</strong>\r\n                            <p>{new Date(request.requested_at).toLocaleDateString()}</p>\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <p><strong>Status</strong></p>\r\n                            <em\r\n                                className={\r\n                                    request.status === 'Pending'\r\n                                        ? 'blue'\r\n                                        : request.status === 'Approved'\r\n                                            ? 'green'\r\n                                            : request.status === 'Denied'\r\n                                                ? 'red'\r\n                                                : ''}>\r\n                                {request.status}\r\n                            </em>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                        <div className=\"m-2\">\r\n                            <strong>Requested dates</strong>\r\n                            {\r\n                                request.requested_dates.map((rd, rd_i) => (\r\n                                    <p key={rd_i}>\r\n                                        {\r\n                                            rd_i === request.requested_dates.length - 1\r\n                                                ? new Date(rd).toLocaleDateString()\r\n                                                : `${new Date(rd).toLocaleDateString()},`\r\n                                        }\r\n                                    </p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"m-2\">\r\n                            <strong>Notes</strong>\r\n                            <p>{request.notes}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        className={`btn-sm ${!(isDeleting || request.status !== \"Pending\") && \"btn-hovered\"}`}\r\n                        onClick={() => handleDeleteRequest(request.r_id)}\r\n                        disabled={isDeleting || request.status !== \"Pending\"}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        ))\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            if (verifiedUser) {\r\n                const requests = await fetchRequestsByUser(verifiedUser.u_id);\r\n                setRequests(requests);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        getData();\r\n    }, [verifiedUser])\r\n\r\n    return (\r\n        <div className=\"m-2\">\r\n            {\r\n                isLoading\r\n                    ? <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                        <Loader\r\n                            type='Oval'\r\n                            color='rgb(50, 110, 150)'\r\n                        />\r\n                    </div>\r\n                    : <div className=\"grid2\">\r\n                        {renderRequests()}\r\n                        {\r\n                            createNewRequest\r\n                                ? renderNewRequest()\r\n                                : <div className=\"mt-4 xs12 s10-offset-1 m8-offset-2 l6-offset-3 text-center\">\r\n                                    <button className=\"btn-lg btn-hovered\" onClick={() => setCreateNewRequest(true)}>\r\n                                        <p><i className=\"fas fa-plus\"></i> New Request</p>\r\n                                    </button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchAllUsersSchedulesByDate, fetchAllUsersSchedulesByDateMobile } from '../../services/shifts';\r\nimport { startOfWeek, format } from 'date-fns';\r\n\r\nexport default function UserSchedules() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [users, setUsers] = useState(null);\r\n    const [usersMobile, setUsersMobile] = useState(null);\r\n    const [days, setDays] = useState(null);\r\n\r\n    const getTime = (shift) => {\r\n        return new Date(shift).toLocaleTimeString().replace(':00 ', ' ');\r\n    }\r\n\r\n    const renderBlank = (a_i, time) => (\r\n        <td\r\n            key={a_i}\r\n            // Keep bg color black if employee is 'N/A' for availability\r\n            className={`${time.start_time === 'N/A' && 'bg-black'}`}\r\n        ></td>\r\n    )\r\n\r\n    const renderShift = (a_i, shift_start, shift_end) => (\r\n        <td\r\n            key={a_i}\r\n            className=\"bg-blue-lighten-4\"\r\n        >\r\n            {getTime(shift_start)} -&nbsp;\r\n            {getTime(shift_end)}\r\n        </td>\r\n    )\r\n\r\n    const renderSchedule = () => (\r\n        <>\r\n            <table className=\"schedules-table w-100 mt-1 border-collapse text-center table-fixed schedules-text\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"bg-grey-lighten-3\">\r\n                            <strong>Name</strong>\r\n                        </td>\r\n                        {\r\n                            days && days.map((day, i) => (\r\n                                <td key={i} className=\"bg-grey-lighten-3\">\r\n                                    <strong>{new Date(day).toString().split(' ')[0]}</strong>\r\n                                    <p><em>{new Date(day).toLocaleDateString()}</em></p>\r\n                                </td>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                    {\r\n                        users && users.map((user, u_i) => (\r\n                            <tr key={u_i}>\r\n                                <td className=\"py-1\">\r\n                                    <p>\r\n                                        <strong>{user.first_name} {user.last_name}</strong>\r\n                                    </p>\r\n                                    <em>{user.title}</em>\r\n                                </td>\r\n                                {\r\n                                    user.availability.map((time, a_i) => (\r\n                                        user.shifts[a_i].shift_end === null\r\n                                            ? renderBlank(a_i, time)\r\n                                            : renderShift(a_i, user.shifts[a_i].shift_start, user.shifts[a_i].shift_end)\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n    const renderMobileSchedules = () => (\r\n        <div className=\"schedules-mobile\">\r\n            {\r\n                isLoading ? (\r\n                    <Loader\r\n                        type='Oval'\r\n                        color='rgb(50, 110, 150)'\r\n                        className=\"text-center mt-4\"\r\n                    />\r\n                ) : (\r\n                    usersMobile.length && usersMobile.map((user, i) => (\r\n                        <div key={i} className=\"flex\">\r\n                            {user.label ? (\r\n                                <div className=\"w-100 border-x bg-grey-lighten-3 text-center\">\r\n                                    <p><strong>{format(new Date(user.shift_start), \"PP\")}</strong></p>\r\n                                </div>\r\n                            ) : (\r\n                            <>\r\n                                <div className=\"flex flex-col flex-center border-solid-1 p-1\" style={{ width: \"20%\" }}>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[0]}</strong></p>\r\n                                    <p><strong>{new Date(user.shift_start).toDateString().split(\" \")[2]}</strong></p>\r\n                                </div>\r\n                                <div className=\"w-80 border-solid-1 p-1\">\r\n                                    <p>\r\n                                        {new Date(user.shift_start).toLocaleTimeString().replace(\":00 \", \" \")} -\r\n                                        {new Date(user.shift_end).toLocaleTimeString().replace(\":00 \", \" \")}\r\n                                    </p>\r\n                                    <p><strong>{user.first_name} {user.last_name}</strong></p>\r\n                                    <p><em>{user.title}</em></p>\r\n                                </div>\r\n                            </>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            let daysArray = [];\r\n            let dateToAdd = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n            for (let i = 0; i < 7; i++) {\r\n                daysArray.push(dateToAdd.toISOString());\r\n                dateToAdd = new Date(dateToAdd.setDate(dateToAdd.getDate() + 1));\r\n            }\r\n\r\n            const users = await fetchAllUsersSchedulesByDate(daysArray[0], daysArray[6]);\r\n            const usersMobile = await fetchAllUsersSchedulesByDateMobile(daysArray[0], daysArray[6]);\r\n\r\n            if (usersMobile.length) {\r\n                // Add date labels for mobile schedules display\r\n                for (let i = 0; i < daysArray.length; i++) {\r\n                    usersMobile.push({ shift_start: daysArray[i], label: true });\r\n                }\r\n                usersMobile.sort((a, b) => new Date(a.shift_start) - new Date(b.shift_start))\r\n            }\r\n\r\n            setDays(daysArray);\r\n            setUsers(users);\r\n            setUsersMobile(usersMobile);\r\n            setIsLoading(false);\r\n        }\r\n\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ? (\r\n                        <div className=\"text-center\" style={{ marginTop: '70px' }}>\r\n                            <Loader\r\n                                type='Oval'\r\n                                color='rgb(50, 110, 150)'\r\n                            />\r\n                        </div>\r\n                    )\r\n                    : (\r\n                        <div>\r\n                            {renderSchedule()}\r\n                            {renderMobileSchedules()}\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function ProtectedRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        // ...rest is the path from props\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function UserRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return <Component />;\r\n            } else {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.SIGN_IN,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","import { Route, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nexport default function AuthRoute({ user, component: Component, ...rest }) {\r\n    return (\r\n        <Route {...rest} render={({ location }) => {\r\n            if (user && !user.is_admin) {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.USER_SCHEDULES,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            } \r\n            else if (user && user.is_admin) {\r\n                return (\r\n                    <Redirect to={{\r\n                        pathname: ROUTES.ADMIN_EMPLOYEES,\r\n                        state: { from: location }\r\n                    }}\r\n                    />\r\n                );\r\n            }\r\n            else {\r\n                return <Component />;\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}","// Return blank page during page load\r\n// Prevents the flashing of the sign in page during page reload\r\nconst IsLoaded = ({ isLoading, children }) => {\r\n    while (isLoading) return null\r\n    return children\r\n}\r\n\r\nexport default IsLoaded;","import \"./Colors.css\";\nimport './App.css';\nimport { useEffect, useContext, useState } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport { isAuthenticated, verifyUser } from './services/auth';\nimport { UserContext } from './contexts/userContext';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport Header from './components/header';\nimport Navbar from './components/navbar';\nimport SignIn from './components/signIn';\nimport AdminSignIn from './components/adminSignIn';\n\nimport AdminEmployees from './components/admin/employees';\nimport AdminEmployee from './components/admin/employee';\nimport AdminNewEmployee from './components/admin/newEmployee';\nimport AdminSchedules from './components/admin/schedules';\nimport AdminRequests from './components/admin/requests';\nimport AdminStore from './components/admin/store';\n\nimport UserProfile from './components/user/profile';\nimport UserAvailability from './components/user/availability';\nimport UserRequests from './components/user/requests';\nimport UserSchedules from './components/user/schedules';\n\nimport ProtectedRoute from './helpers/protectedRoute';\nimport UserRoute from './helpers/userRoute';\nimport AuthRoute from './helpers/authRoute';\nimport IsLoaded from './isLoaded';\n\nfunction App() {\n  const { verifiedUser, setVerifiedUser } = useContext(UserContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function getVerifiedUser() {\n      const tokenConfig = isAuthenticated();\n      if (tokenConfig) {\n        const verifiedUser = await verifyUser(tokenConfig);\n        setVerifiedUser(verifiedUser); // Set verified user in context for header\n      }\n      setIsLoading(false);\n    }\n\n    getVerifiedUser();\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <Router>\n      <IsLoaded isLoading={isLoading} children>\n        <Header />\n        <div className={`relative ${verifiedUser && \"container-grid\"}`}>\n          <Navbar />\n          <div className=\"container\">\n            <div className=\"container-inner\">\n              <Switch>\n                <AuthRoute user={verifiedUser} exact path={ROUTES.SIGN_IN} component={SignIn} />\n                <AuthRoute user={verifiedUser} exact path={ROUTES.ADMIN_SIGN_IN} component={AdminSignIn} />\n\n                <ProtectedRoute exact user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEES} component={AdminEmployees} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_NEW_EMPLOYEE} component={AdminNewEmployee} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_EMPLOYEE} component={AdminEmployee} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_SCHEDULES} component={AdminSchedules} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_REQUESTS} component={AdminRequests} />\n                <ProtectedRoute user={verifiedUser} path={ROUTES.ADMIN_STORE} component={AdminStore} />\n\n                <UserRoute user={verifiedUser} path={ROUTES.USER_SCHEDULES} component={UserSchedules} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_REQUESTS} component={UserRequests} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_AVAILABILITY} component={UserAvailability} />\n                <UserRoute user={verifiedUser} path={ROUTES.USER_PROFILE} component={UserProfile} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </IsLoaded>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createContext, useState, useEffect } from 'react';\r\n\r\nexport const DimensionContext = createContext();\r\n\r\nexport default function DimensionContextProvider({ children }) {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [isMobile, setIsMobile] = useState(false);\r\n\r\n    const setWindowWidth = () => {\r\n        setWidth(window.innerWidth);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWidth(window.innerWidth);\r\n\r\n        if (window.innerWidth < 740) setIsMobile(true);\r\n        else setIsMobile(false);\r\n\r\n        window.addEventListener('resize', setWindowWidth);\r\n\r\n        return () => window.removeEventListener('resize', setWindowWidth);\r\n    }, [width])\r\n\r\n    return (\r\n        <DimensionContext.Provider value={{ isMobile }}>\r\n            {children}\r\n        </DimensionContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport DimensionContextProvider from './contexts/dimensionContext';\nimport UserContextProvider from './contexts/userContext';\n\nReactDOM.render(\n  <UserContextProvider>\n    <DimensionContextProvider>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n    </DimensionContextProvider>\n  </UserContextProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}